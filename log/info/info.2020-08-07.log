2020-08-07 08:31:34.229 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18172 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 08:31:34.233 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 08:31:36.443 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 08:31:36.446 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 08:31:36.543 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79ms. Found 0 repository interfaces.
2020-08-07 08:31:37.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$81f75e18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.293 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1868ed47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$fc616476] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b116b581] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5e50df2e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d5eb5833] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:31:37.946 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 08:31:37.971 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 08:31:37.980 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 08:31:37.980 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 08:31:37.993 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 08:31:38.125 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 08:31:38.125 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3825 ms
2020-08-07 08:31:38.542 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 08:31:38.554 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 08:31:39.260 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 08:31:39.260 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 08:31:39.260 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 08:31:39.260 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 08:31:39.856 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 08:31:42.519 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 08:31:42.572 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 08:31:42.588 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 08:31:42.588 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 08:31:42.594 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 08:31:42.594 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 08:31:42.602 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596760302572'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 08:31:42.602 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 08:31:42.602 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 08:31:42.604 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@d180961
2020-08-07 08:31:42.689 febs [main] INFO  p6spy - 2020-08-07 08:31:42 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 08:31:45.905 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 08:31:46.320 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 08:31:46.321 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 08:31:46.411 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@470b5213, org.springframework.security.web.context.SecurityContextPersistenceFilter@59282dc6, org.springframework.security.web.header.HeaderWriterFilter@3ad558bf, org.springframework.security.web.authentication.logout.LogoutFilter@3d50a3d9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@733bd6f3, org.springframework.security.web.session.ConcurrentSessionFilter@8dbf0f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42cf5a6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@229514ff, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@391e5ffa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fa2143d, org.springframework.security.web.session.SessionManagementFilter@6ba355e4, org.springframework.security.web.access.ExceptionTranslationFilter@8167f57, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29ee8174]
2020-08-07 08:31:46.467 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 08:31:46.482 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 08:31:46.484 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 08:31:46.998 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 08:31:47.809 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 08:31:47.831 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 08:31:47.942 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 08:31:47.985 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 08:31:48.006 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 08:31:48.044 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 08:31:48.055 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.784 seconds (JVM running for 16.636)
2020-08-07 08:31:48.087 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 08:31:48.087 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 08:31:48.087 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 08:31:48.087 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 08:31:48.087 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 08:31:48.289 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 08:31:48.289 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 08:31:48.305 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-08-07 08:31:48.703 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-07 08:31:48 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-07 08:31:48.993 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 08:31:49.015 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 08:31:49.015 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596705300576"'s failed in-progress jobs.
2020-08-07 08:31:49.025 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596760302572 started.
2020-08-07 08:31:49.032 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 08:31:49.104 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:31:50.299 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:F9D72668C75D645FA05793CAA310F6DE
2020-08-07 08:31:56.650 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 08:31:56 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 08:31:56.744 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 08:31:56 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 08:31:56.757 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 08:31:56 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 08:31:57.636 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 08:31:57 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:31:57.874 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:31:57 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T08:31:57.830+0800' WHERE (USERNAME = 'admin');
2020-08-07 08:31:57.886 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:31:57 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 08:31:57.891 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:31:57 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 08:31:57.895 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:31:57 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 08:31:57.902 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:31:57 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 08:31:57.907 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:31:57 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 08:32:00.052 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:32:00.076 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 08:32:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 6, '2020-08-07T08:32:00.052+0800');
2020-08-07 08:32:10.026 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:32:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:32:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:32:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:32:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:32:10.114 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:32:10.118 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：92 毫秒
2020-08-07 08:32:10.125 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 08:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 92, '2020-08-07T08:32:10.026+0800');
2020-08-07 08:32:13.104 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:33:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:33:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 08:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:33:00.020+0800');
2020-08-07 08:33:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:33:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:33:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:33:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:33:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:33:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:33:10.074 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-07 08:33:10.080 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 08:33:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 58, '2020-08-07T08:33:10.016+0800');
2020-08-07 08:33:13.106 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:33:50.173 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:33:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:33:50.191 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:33:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:34:00.019 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:34:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 08:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:34:00.019+0800');
2020-08-07 08:34:02.526 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 08:34:02 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:34:02.549 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 08:34:02 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:34:10.024 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:34:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:34:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:34:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:34:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:34:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:34:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:34:10.076 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 08:34:10.085 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 08:34:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-08-07T08:34:10.024+0800');
2020-08-07 08:34:13.108 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:34:31.757 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:34:31 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:34:40.055 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 08:34:40 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:34:40.135 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 08:34:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:34:40.139 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 08:34:40 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:34:40.500 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 08:34:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:34:40.556 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:34:40 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:34:40.558 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:34:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:34:41.725 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 08:34:41 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:35:00.028 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:35:00.039 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 08:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:35:00.028+0800');
2020-08-07 08:35:10.024 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:35:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:35:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:35:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:35:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:35:10.072 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 08:35:10.077 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 08:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T08:35:10.023+0800');
2020-08-07 08:35:13.113 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:36:00.027 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:36:00.034 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 08:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T08:36:00.027+0800');
2020-08-07 08:36:10.025 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:36:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:36:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:36:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:36:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:36:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:36:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:36:10.077 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 08:36:10.083 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 08:36:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-08-07T08:36:10.025+0800');
2020-08-07 08:36:13.114 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:37:00.019 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:37:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 08:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:37:00.019+0800');
2020-08-07 08:37:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:37:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:37:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:37:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:37:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:37:10.093 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:37:10.097 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：50 毫秒
2020-08-07 08:37:10.101 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 08:37:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 50, '2020-08-07T08:37:10.047+0800');
2020-08-07 08:37:13.117 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:38:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:38:00.033 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 08:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T08:38:00.026+0800');
2020-08-07 08:38:10.011 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:38:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:38:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:38:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:38:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:38:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:38:10.061 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 08:38:10.065 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 08:38:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 49, '2020-08-07T08:38:10.011+0800');
2020-08-07 08:38:13.118 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:39:00.027 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:39:00.034 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 08:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:39:00.027+0800');
2020-08-07 08:39:10.022 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:39:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:39:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:39:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:39:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:39:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:39:10.075 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-07 08:39:10.080 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 08:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 53, '2020-08-07T08:39:10.022+0800');
2020-08-07 08:39:13.121 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:40:00.027 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:40:00.034 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 08:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:40:00.027+0800');
2020-08-07 08:40:03.249 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:40:03 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:40:10.022 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:40:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:40:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:40:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:40:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:40:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:40:10.071 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 08:40:10.077 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 08:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 49, '2020-08-07T08:40:10.022+0800');
2020-08-07 08:40:13.123 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:41:00.026 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:41:00.033 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 08:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T08:41:00.026+0800');
2020-08-07 08:41:10.024 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:41:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:41:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:41:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:41:10.068 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 08:41:10.072 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 08:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T08:41:10.024+0800');
2020-08-07 08:41:13.126 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:41:27.105 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:41:27 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:41:27.179 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 08:41:27 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:41:27.182 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 08:41:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:41:28.321 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 08:41:28 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:42:00.028 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:42:00.035 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 08:42:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T08:42:00.028+0800');
2020-08-07 08:42:10.013 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:42:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:42:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:42:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:42:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:42:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:42:10.059 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 08:42:10.063 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 08:42:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T08:42:10.013+0800');
2020-08-07 08:42:13.127 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:42:57.232 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 08:42:57 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:42:57.311 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:42:57 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:42:57.313 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:42:57 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:42:58.255 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 08:42:58 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:42:58.287 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 08:42:58 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:43:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:43:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 08:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:43:00.022+0800');
2020-08-07 08:43:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:43:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:43:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:43:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:43:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:43:10.061 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 08:43:10.065 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 08:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T08:43:10.017+0800');
2020-08-07 08:43:13.121 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 08:43:13 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:43:13.129 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:43:57.986 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 08:43:57 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:43:58.056 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:43:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:43:58.058 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:43:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:43:59.540 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 08:43:59 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:44:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:44:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 08:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:44:00.021+0800');
2020-08-07 08:44:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:44:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:44:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:44:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:44:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:44:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:44:10.060 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 08:44:10.064 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 08:44:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 49, '2020-08-07T08:44:10.011+0800');
2020-08-07 08:44:10.146 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 08:44:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 08:44:13.133 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596760302572_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:44:37.970 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 5012 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 08:44:37.974 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 08:44:39.791 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 08:44:39.794 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 08:44:39.873 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-08-07 08:44:40.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6df4269] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.614 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d50d198] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$814948c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.797 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$35fe99d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.806 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@622d7e4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.813 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5ad33c84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:40.820 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 08:44:41.277 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 08:44:41.298 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 08:44:41.313 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 08:44:41.314 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 08:44:41.323 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 08:44:41.920 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 08:44:41.920 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3887 ms
2020-08-07 08:44:42.450 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 08:44:42.461 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 08:44:43.200 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 08:44:43.201 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 08:44:43.201 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 08:44:43.201 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 08:44:43.956 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 08:44:46.470 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 08:44:46.501 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 08:44:46.512 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 08:44:46.513 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 08:44:46.517 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 08:44:46.518 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 08:44:46.519 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596761086503'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 08:44:46.519 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 08:44:46.519 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 08:44:46.521 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3c89b864
2020-08-07 08:44:46.596 febs [main] INFO  p6spy - 2020-08-07 08:44:46 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 08:44:48.765 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 08:44:49.101 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 08:44:49.102 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 08:44:49.102 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 08:44:49.102 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 08:44:49.102 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 08:44:49.173 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76134251, org.springframework.security.web.context.SecurityContextPersistenceFilter@46b2a11a, org.springframework.security.web.header.HeaderWriterFilter@63b58ff4, org.springframework.security.web.authentication.logout.LogoutFilter@79a68657, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5f4e389a, org.springframework.security.web.session.ConcurrentSessionFilter@582ca1e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50d05167, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75da2db, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@59ac77f9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4177d422, org.springframework.security.web.session.SessionManagementFilter@4c91a008, org.springframework.security.web.access.ExceptionTranslationFilter@4742466e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ae5ddc0]
2020-08-07 08:44:49.224 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 08:44:49.239 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 08:44:49.240 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 08:44:49.727 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 08:44:50.586 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 08:44:50.602 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 08:44:50.676 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 08:44:50.714 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 08:44:50.739 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 08:44:50.770 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 08:44:50.773 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.567 seconds (JVM running for 14.952)
2020-08-07 08:44:50.798 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 08:44:50.798 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 08:44:50.799 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 08:44:50.799 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 08:44:50.800 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 08:44:51.291 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-07 08:44:51 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 08:44:51.643 febs [RMI TCP Connection(7)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 08:44:51.644 febs [RMI TCP Connection(7)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 08:44:51.665 febs [RMI TCP Connection(7)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-07 08:44:51.716 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 08:44:51.737 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 08:44:51.737 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596760302572"'s failed in-progress jobs.
2020-08-07 08:44:51.749 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596761086503 started.
2020-08-07 08:44:51.756 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:45:00.048 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:45:00.112 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 08:45:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T08:45:00.048+0800');
2020-08-07 08:45:05.226 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:100D31290BDA062BE1F1D187B1FE1F23
2020-08-07 08:45:08.955 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 08:45:08 | 耗时 13 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 08:45:09.078 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 08:45:09.092 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 08:45:09.598 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:45:09.811 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T08:45:09.775+0800' WHERE (USERNAME = 'admin');
2020-08-07 08:45:09.826 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 08:45:09.831 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 08:45:09.836 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 08:45:09.842 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 08:45:09.847 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 08:45:09 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 08:45:10.014 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:45:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:45:10 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:45:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:45:10.087 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:45:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:45:10.090 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：76 毫秒
2020-08-07 08:45:10.096 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 08:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 76, '2020-08-07T08:45:10.014+0800');
2020-08-07 08:45:12.046 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 08:45:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:45:12.058 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 08:45:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:45:13.651 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 08:45:13 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:45:15.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:45:18.717 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 08:45:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 08:45:18.785 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 08:45:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 08:45:18.788 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 08:45:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 08:45:19.487 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 08:45:19 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:45:22.951 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 08:45:22 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:45:26.253 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 08:45:26 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:45:29.327 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 08:45:29 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 08:46:00.030 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:46:00.039 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 08:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:46:00.030+0800');
2020-08-07 08:46:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:46:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:46:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:46:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:46:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:46:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:46:10.073 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：57 毫秒
2020-08-07 08:46:10.078 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 08:46:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 57, '2020-08-07T08:46:10.016+0800');
2020-08-07 08:46:15.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:47:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:47:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 08:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:47:00.018+0800');
2020-08-07 08:47:10.014 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:47:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:47:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:47:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:47:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:47:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:47:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:47:10.065 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-08-07 08:47:10.073 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 08:47:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 51, '2020-08-07T08:47:10.014+0800');
2020-08-07 08:47:15.761 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:48:00.049 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:48:00.058 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 08:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:48:00.049+0800');
2020-08-07 08:48:10.015 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:48:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:48:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:48:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:48:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:48:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:48:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:48:10.070 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-07 08:48:10.075 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 08:48:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-07T08:48:10.015+0800');
2020-08-07 08:48:15.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:49:00.052 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:49:00.059 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 08:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:49:00.052+0800');
2020-08-07 08:49:10.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:49:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:49:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:49:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:49:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:49:10.095 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:49:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:49:10.098 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-07 08:49:10.105 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 08:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 53, '2020-08-07T08:49:10.045+0800');
2020-08-07 08:49:15.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:50:00.055 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:50:00.062 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 08:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T08:50:00.051+0800');
2020-08-07 08:50:10.013 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:50:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:50:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:50:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:50:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:50:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:50:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:50:10.062 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 08:50:10.067 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 08:50:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 49, '2020-08-07T08:50:10.013+0800');
2020-08-07 08:50:15.770 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:51:00.028 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:51:00.035 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 08:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:51:00.028+0800');
2020-08-07 08:51:10.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:51:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:51:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:51:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:51:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:51:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:51:10.072 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 08:51:10.077 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 08:51:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T08:51:10.023+0800');
2020-08-07 08:51:15.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:52:00.048 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:52:00.054 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 08:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T08:52:00.048+0800');
2020-08-07 08:52:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:52:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:52:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:52:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:52:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:52:10.097 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:52:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:52:10.100 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-07 08:52:10.106 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 08:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-08-07T08:52:10.046+0800');
2020-08-07 08:52:15.776 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:53:00.051 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:53:00.058 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 08:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:53:00.051+0800');
2020-08-07 08:53:10.023 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:53:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:53:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:53:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:53:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:53:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:53:10.074 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-08-07 08:53:10.080 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 08:53:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 51, '2020-08-07T08:53:10.023+0800');
2020-08-07 08:53:15.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:54:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:54:00.030 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 08:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T08:54:00.025+0800');
2020-08-07 08:54:10.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:54:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:54:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:54:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:54:10.087 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:54:10.091 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 08:54:10.096 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 08:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T08:54:10.043+0800');
2020-08-07 08:54:15.780 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:55:00.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:55:00.025 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 08:55:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:55:00.016+0800');
2020-08-07 08:55:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:55:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:55:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:55:10.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:55:10.092 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 08:55:10.098 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 08:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 47, '2020-08-07T08:55:10.045+0800');
2020-08-07 08:55:15.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:56:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:56:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 08:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:56:00.022+0800');
2020-08-07 08:56:10.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:56:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:56:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:56:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:56:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:56:10.069 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 08:56:10.074 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 08:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T08:56:10.023+0800');
2020-08-07 08:56:15.787 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:57:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:57:00.032 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 08:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:57:00.025+0800');
2020-08-07 08:57:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:57:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:57:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:57:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:57:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:57:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:57:10.069 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 08:57:10.073 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 08:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T08:57:10.023+0800');
2020-08-07 08:57:15.788 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:58:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:58:00.031 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 08:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:58:00.024+0800');
2020-08-07 08:58:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:58:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:58:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:58:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:58:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:58:10.068 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 08:58:10.073 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 08:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T08:58:10.022+0800');
2020-08-07 08:58:15.791 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 08:59:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 08:59:00.031 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 08:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T08:59:00.024+0800');
2020-08-07 08:59:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 08:59:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 08:59:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:59:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 08:59:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 08:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 08:59:10.069 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 08:59:10.075 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 08:59:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T08:59:10.021+0800');
2020-08-07 08:59:15.793 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:00:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:00:00.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 09:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:00:00.024+0800');
2020-08-07 09:00:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:00:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:00:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:00:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:00:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:00:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:00:10.067 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 09:00:10.072 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 09:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T09:00:10.020+0800');
2020-08-07 09:00:15.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:01:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:01:00.032 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 09:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:01:00.026+0800');
2020-08-07 09:01:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:01:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:01:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:01:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:01:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:01:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:01:10.069 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 09:01:10.072 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 09:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T09:01:10.021+0800');
2020-08-07 09:01:15.801 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:02:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:02:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 09:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:02:00.016+0800');
2020-08-07 09:02:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:02:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:02:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:02:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:02:10.065 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:02:10.069 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 09:02:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T09:02:10.020+0800');
2020-08-07 09:02:15.803 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:03:00.025 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:03:00.030 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 09:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:03:00.025+0800');
2020-08-07 09:03:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:03:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:03:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:03:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:03:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:03:10.066 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:03:10.070 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 09:03:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T09:03:10.021+0800');
2020-08-07 09:03:15.804 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:04:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:04:00.031 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 09:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:04:00.025+0800');
2020-08-07 09:04:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:04:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:04:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:04:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:04:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:04:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:04:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:04:10.062 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:04:10.067 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 09:04:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T09:04:10.019+0800');
2020-08-07 09:04:15.808 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:05:00.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:05:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 09:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:05:00.016+0800');
2020-08-07 09:05:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:05:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:05:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:05:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:05:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:05:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:05:10.068 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:05:10.073 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 09:05:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T09:05:10.023+0800');
2020-08-07 09:05:15.808 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:06:00.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:06:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 09:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:06:00.016+0800');
2020-08-07 09:06:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:06:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:06:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:06:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:06:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:06:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:06:10.067 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 09:06:10.071 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 09:06:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T09:06:10.021+0800');
2020-08-07 09:06:15.812 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:07:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:07:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 09:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:07:00.023+0800');
2020-08-07 09:07:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:07:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:07:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:07:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:07:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:07:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:07:10.066 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:07:10.071 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 09:07:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T09:07:10.021+0800');
2020-08-07 09:07:15.814 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:08:00.016 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:08:00.022 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 09:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:08:00.016+0800');
2020-08-07 09:08:10.012 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:08:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:08:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:08:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:08:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:08:10.058 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 09:08:10.063 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 09:08:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T09:08:10.012+0800');
2020-08-07 09:08:15.815 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:09:00.014 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:09:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 09:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:09:00.014+0800');
2020-08-07 09:09:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:09:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:09:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:09:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:09:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:09:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:09:10.064 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:09:10.069 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 09:09:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T09:09:10.021+0800');
2020-08-07 09:09:15.818 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:10:00.051 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:10:00.057 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 09:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:10:00.051+0800');
2020-08-07 09:10:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:10:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:10:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:10:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:10:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:10:10.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:10:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:10:10.092 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 09:10:10.097 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 09:10:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T09:10:10.046+0800');
2020-08-07 09:10:15.822 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:11:00.014 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:11:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 09:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:11:00.014+0800');
2020-08-07 09:11:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:11:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:11:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:11:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:11:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:11:10.087 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:11:10.091 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 09:11:10.096 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 09:11:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T09:11:10.045+0800');
2020-08-07 09:11:15.825 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:12:00.049 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:12:00.054 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 09:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:12:00.049+0800');
2020-08-07 09:12:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:12:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:12:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:12:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:12:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:12:10.065 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:12:10.070 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 09:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:12:10.021+0800');
2020-08-07 09:12:15.827 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:13:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:13:00.030 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 09:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:13:00.023+0800');
2020-08-07 09:13:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:13:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:13:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:13:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:13:10.086 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:13:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:13:10.089 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:13:10.093 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 09:13:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T09:13:10.045+0800');
2020-08-07 09:13:15.831 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:14:00.026 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:14:00.032 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 09:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:14:00.026+0800');
2020-08-07 09:14:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:14:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:14:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:14:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:14:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:14:10.086 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 09:14:10.090 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 09:14:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-07T09:14:10.044+0800');
2020-08-07 09:14:15.833 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:15:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:15:00.034 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 09:15:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:15:00.025+0800');
2020-08-07 09:15:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:15:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:15:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:15:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:15:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:15:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:15:10.067 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 09:15:10.073 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 09:15:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T09:15:10.019+0800');
2020-08-07 09:15:15.836 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:15:44.177 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:8F1A49068B0E0AEF11EEA0EEFBC7A5C1
2020-08-07 09:16:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:16:00.032 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 09:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:16:00.025+0800');
2020-08-07 09:16:10.048 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:16:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:16:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:16:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:16:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:16:10.093 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:16:10.096 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 09:16:10.100 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 09:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T09:16:10.048+0800');
2020-08-07 09:16:15.836 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:16:24.186 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:B4437D3B9A51CC80C2AFCF662C93D08A
2020-08-07 09:17:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:17:00.030 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 09:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:17:00.025+0800');
2020-08-07 09:17:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:17:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:17:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:17:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:17:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:17:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:17:10.068 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:17:10.073 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 09:17:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T09:17:10.023+0800');
2020-08-07 09:17:15.839 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:18:00.025 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:18:00.030 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 09:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:18:00.025+0800');
2020-08-07 09:18:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:18:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:18:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:18:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:18:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:18:10.066 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:18:10.070 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 09:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:18:10.022+0800');
2020-08-07 09:18:15.842 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:19:00.026 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:19:00.031 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 09:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:19:00.026+0800');
2020-08-07 09:19:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:19:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:19:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:19:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:19:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:19:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:19:10.064 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:19:10.068 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 09:19:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T09:19:10.020+0800');
2020-08-07 09:19:15.844 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:20:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:20:00.030 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 09:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:20:00.025+0800');
2020-08-07 09:20:10.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:20:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:20:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:20:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:20:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:20:10.069 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 09:20:10.073 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 09:20:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T09:20:10.021+0800');
2020-08-07 09:20:15.849 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:21:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:21:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 09:21:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:21:00.025+0800');
2020-08-07 09:21:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:21:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:21:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:21:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:21:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:21:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:21:10.063 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 09:21:10.068 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 09:21:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 42, '2020-08-07T09:21:10.021+0800');
2020-08-07 09:21:15.851 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:22:00.025 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:22:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 09:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:22:00.025+0800');
2020-08-07 09:22:10.022 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:22:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:22:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:22:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:22:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:22:10.066 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:22:10.070 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 09:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:22:10.022+0800');
2020-08-07 09:22:15.853 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:23:00.027 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:23:00.034 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 09:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:23:00.027+0800');
2020-08-07 09:23:10.024 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:23:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:23:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:23:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:23:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:23:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:23:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:23:10.068 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:23:10.072 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 09:23:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T09:23:10.024+0800');
2020-08-07 09:23:15.856 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:24:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:24:00.029 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 09:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:24:00.024+0800');
2020-08-07 09:24:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:24:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:24:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:24:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:24:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:24:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:24:10.063 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 09:24:10.067 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 09:24:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-07T09:24:10.021+0800');
2020-08-07 09:24:15.857 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:25:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:25:00.028 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 09:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:25:00.023+0800');
2020-08-07 09:25:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:25:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:25:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:25:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:25:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:25:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:25:10.066 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:25:10.071 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 09:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T09:25:10.021+0800');
2020-08-07 09:25:15.859 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:26:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:26:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 09:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:26:00.023+0800');
2020-08-07 09:26:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:26:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:26:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:26:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:26:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:26:10.064 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:26:10.068 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 09:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T09:26:10.021+0800');
2020-08-07 09:26:15.863 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:27:00.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:27:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 09:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:27:00.017+0800');
2020-08-07 09:27:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:27:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:27:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:27:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:27:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:27:10.063 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:27:10.068 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 09:27:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T09:27:10.020+0800');
2020-08-07 09:27:15.866 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:28:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:28:00.030 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 09:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:28:00.024+0800');
2020-08-07 09:28:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:28:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:28:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:28:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:28:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:28:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:28:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:28:10.064 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:28:10.069 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 09:28:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T09:28:10.021+0800');
2020-08-07 09:28:15.870 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:29:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:29:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 09:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:29:00.022+0800');
2020-08-07 09:29:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:29:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:29:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:29:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:29:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 09:29:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 09:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T09:29:10.018+0800');
2020-08-07 09:29:15.871 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:30:00.017 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:30:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 09:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:30:00.017+0800');
2020-08-07 09:30:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:30:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:30:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:30:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:30:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:30:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:30:10.065 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:30:10.069 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 09:30:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T09:30:10.020+0800');
2020-08-07 09:30:15.874 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:31:00.014 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:31:00.021 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 09:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:31:00.014+0800');
2020-08-07 09:31:10.022 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:31:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:31:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:31:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:31:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:31:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:31:10.066 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:31:10.071 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 09:31:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T09:31:10.022+0800');
2020-08-07 09:31:15.876 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:32:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:32:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 09:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:32:00.016+0800');
2020-08-07 09:32:10.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:32:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:32:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:32:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:32:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:32:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:32:10.055 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:32:10.058 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 09:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:32:10.011+0800');
2020-08-07 09:32:15.879 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:33:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:33:00.029 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 09:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:33:00.023+0800');
2020-08-07 09:33:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:33:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:33:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:33:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:33:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:33:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:33:10.064 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:33:10.069 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 09:33:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T09:33:10.020+0800');
2020-08-07 09:33:15.881 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:34:00.047 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:34:00.053 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 09:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:34:00.047+0800');
2020-08-07 09:34:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:34:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:34:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:34:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:34:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:34:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:34:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:34:10.065 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:34:10.068 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 09:34:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:34:10.021+0800');
2020-08-07 09:34:15.886 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:35:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:35:00.029 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 09:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:35:00.023+0800');
2020-08-07 09:35:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:35:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:35:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:35:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:35:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:35:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:35:10.066 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:35:10.069 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 09:35:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T09:35:10.021+0800');
2020-08-07 09:35:15.891 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:36:00.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:36:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 09:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:36:00.018+0800');
2020-08-07 09:36:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:36:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:36:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:36:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:36:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:36:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:36:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:36:10.065 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 09:36:10.069 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 09:36:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T09:36:10.020+0800');
2020-08-07 09:36:15.895 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:37:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:37:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 09:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:37:00.021+0800');
2020-08-07 09:37:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:37:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:37:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:37:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:37:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:37:10.064 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:37:10.068 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 09:37:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T09:37:10.021+0800');
2020-08-07 09:37:15.898 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:38:00.050 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:38:00.055 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 09:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:38:00.050+0800');
2020-08-07 09:38:10.023 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:38:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:38:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:38:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:38:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:38:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:38:10.067 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:38:10.071 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 09:38:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:38:10.023+0800');
2020-08-07 09:38:15.901 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:39:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:39:00.029 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 09:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:39:00.024+0800');
2020-08-07 09:39:10.023 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:39:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:39:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:39:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:39:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:39:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:39:10.065 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-07 09:39:10.068 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 09:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-07T09:39:10.023+0800');
2020-08-07 09:39:15.910 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:40:00.023 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:40:00.028 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 09:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:40:00.023+0800');
2020-08-07 09:40:10.011 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:40:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:40:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:40:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:40:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:40:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 09:40:10.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 09:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-07T09:40:10.011+0800');
2020-08-07 09:40:15.915 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:41:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:41:00.030 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 09:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:41:00.025+0800');
2020-08-07 09:41:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:41:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:41:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:41:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:41:10.065 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:41:10.069 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 09:41:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T09:41:10.021+0800');
2020-08-07 09:41:15.918 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:42:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:42:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 09:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:42:00.024+0800');
2020-08-07 09:42:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:42:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:42:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:42:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:42:10.056 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-07 09:42:10.060 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 09:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-07T09:42:10.020+0800');
2020-08-07 09:42:15.921 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:43:00.023 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:43:00.029 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 09:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:43:00.023+0800');
2020-08-07 09:43:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:43:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:43:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:43:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:43:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:43:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:43:10.064 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:43:10.069 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 09:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T09:43:10.020+0800');
2020-08-07 09:43:15.924 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:44:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:44:00.034 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 09:44:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:44:00.025+0800');
2020-08-07 09:44:10.032 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:44:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:44:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:44:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:44:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:44:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:44:10.084 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 09:44:10.090 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 09:44:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-08-07T09:44:10.032+0800');
2020-08-07 09:44:15.926 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:45:00.023 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:45:00.028 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 09:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:45:00.023+0800');
2020-08-07 09:45:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:45:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:45:10 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:45:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:45:10 | 耗时 2 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:45:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:45:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:45:10.067 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 09:45:10.072 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 09:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T09:45:10.021+0800');
2020-08-07 09:45:15.930 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:46:00.011 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:46:00.015 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 09:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:46:00.011+0800');
2020-08-07 09:46:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:46:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:46:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:46:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:46:10.059 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 09:46:10.064 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 09:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-07T09:46:10.019+0800');
2020-08-07 09:46:15.933 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:46:44.399 febs [Catalina-utility-1] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:B4437D3B9A51CC80C2AFCF662C93D08A
2020-08-07 09:47:00.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:47:00.022 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 09:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:47:00.016+0800');
2020-08-07 09:47:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:47:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:47:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:47:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:47:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 09:47:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 09:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T09:47:10.010+0800');
2020-08-07 09:47:15.948 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:48:00.015 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:48:00.021 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 09:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:48:00.015+0800');
2020-08-07 09:48:10.013 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:48:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:48:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:48:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:48:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:48:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:48:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:48:10.057 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:48:10.062 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 09:48:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:48:10.013+0800');
2020-08-07 09:48:15.949 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:49:00.025 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:49:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 09:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:49:00.025+0800');
2020-08-07 09:49:10.022 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:49:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:49:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:49:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:49:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:49:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:49:10.071 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 09:49:10.075 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 09:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T09:49:10.022+0800');
2020-08-07 09:49:15.952 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:50:00.027 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:50:00.034 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 09:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:50:00.027+0800');
2020-08-07 09:50:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:50:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:50:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:50:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:50:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:50:10.061 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:50:10.065 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 09:50:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T09:50:10.018+0800');
2020-08-07 09:50:15.954 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:51:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:51:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 09:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:51:00.025+0800');
2020-08-07 09:51:10.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:51:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:51:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:51:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:51:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:51:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:51:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:51:10.066 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:51:10.071 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 09:51:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T09:51:10.023+0800');
2020-08-07 09:51:15.957 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:52:00.026 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:52:00.031 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 09:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:52:00.026+0800');
2020-08-07 09:52:10.022 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:52:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:52:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:52:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:52:10.066 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 09:52:10.070 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 09:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T09:52:10.022+0800');
2020-08-07 09:52:15.958 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:53:00.024 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:53:00.028 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 09:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:53:00.024+0800');
2020-08-07 09:53:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:53:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:53:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:53:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:53:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:53:10.062 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-07 09:53:10.066 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 09:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-07T09:53:10.021+0800');
2020-08-07 09:53:15.979 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:54:00.023 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:54:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 09:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:54:00.023+0800');
2020-08-07 09:54:10.009 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:54:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:54:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:54:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:54:10.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 09:54:10.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 09:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-07T09:54:10.009+0800');
2020-08-07 09:54:15.983 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:55:00.033 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:55:00.038 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 09:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:55:00.033+0800');
2020-08-07 09:55:10.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:55:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:55:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:55:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:55:10.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-07 09:55:10.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 09:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-07T09:55:10.010+0800');
2020-08-07 09:55:15.990 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:56:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:56:00.020 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 09:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:56:00.014+0800');
2020-08-07 09:56:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:56:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:56:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:56:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:56:10.063 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 09:56:10.068 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 09:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-07T09:56:10.021+0800');
2020-08-07 09:56:16.010 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:57:00.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:57:00.020 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 09:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T09:57:00.016+0800');
2020-08-07 09:57:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:57:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:57:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:57:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:57:10.056 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-07 09:57:10.060 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 09:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-07T09:57:10.017+0800');
2020-08-07 09:57:16.010 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:58:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:58:00.030 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 09:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:58:00.024+0800');
2020-08-07 09:58:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:58:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:58:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:58:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:58:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:58:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:58:10.064 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 09:58:10.069 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 09:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T09:58:10.021+0800');
2020-08-07 09:58:16.015 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 09:59:00.015 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 09:59:00.021 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 09:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T09:59:00.015+0800');
2020-08-07 09:59:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 09:59:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 09:59:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:59:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 09:59:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 09:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 09:59:10.054 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-07 09:59:10.058 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 09:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-07T09:59:10.016+0800');
2020-08-07 09:59:16.016 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:00:00.051 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:00:00.057 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 10:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:00:00.051+0800');
2020-08-07 10:00:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:00:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:00:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:00:10.063 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:00:10.068 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 10:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T10:00:10.020+0800');
2020-08-07 10:00:16.020 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:01:00.015 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:01:00.021 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 10:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:01:00.015+0800');
2020-08-07 10:01:10.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:01:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:01:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:01:10.061 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-07 10:01:10.064 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 10:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-07T10:01:10.023+0800');
2020-08-07 10:01:16.021 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:02:00.016 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:02:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 10:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:02:00.016+0800');
2020-08-07 10:02:10.013 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:02:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:02:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:02:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:02:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:02:10.053 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 10:02:10.056 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 10:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-07T10:02:10.013+0800');
2020-08-07 10:02:16.022 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:03:00.015 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:03:00.019 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 10:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:03:00.015+0800');
2020-08-07 10:03:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:03:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:03:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:03:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:03:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:03:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:03:10.066 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 10:03:10.070 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 10:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T10:03:10.020+0800');
2020-08-07 10:03:16.025 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:04:00.014 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:04:00.020 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 10:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:04:00.014+0800');
2020-08-07 10:04:10.022 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:04:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:04:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:04:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:04:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:04:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:04:10.067 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 10:04:10.071 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 10:04:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T10:04:10.022+0800');
2020-08-07 10:04:16.027 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:05:00.015 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:05:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:05:00.015+0800');
2020-08-07 10:05:08.598 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:05:08 | 耗时 18 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:05:08.603 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:05:08 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:05:08.612 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:05:08 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:05:08.722 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:824C1C481E0111A0F2CE5AA294508703
2020-08-07 10:05:09.123 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:05:09 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:05:09.186 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:05:09 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T10:05:09.183+0800' WHERE (USERNAME = 'admin');
2020-08-07 10:05:09.192 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:05:09 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 10:05:09.194 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:05:09 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:05:09.197 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:05:09 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:05:09.200 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:05:09 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 10:05:09.203 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:05:09 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 10:05:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:05:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:05:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:05:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:05:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:05:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:05:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:05:10.062 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:05:10.066 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:05:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T10:05:10.018+0800');
2020-08-07 10:05:10.692 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:05:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:05:10.695 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:05:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:05:12.192 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:05:12 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:05:12.206 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:05:12 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:05:12.222 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:05:12 | 耗时 2 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:05:16.030 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:06:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:06:00.033 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 10:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:06:00.026+0800');
2020-08-07 10:06:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:06:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:06:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:06:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:06:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:06:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:06:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 10:06:10.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 10:06:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-07T10:06:10.021+0800');
2020-08-07 10:06:16.032 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:07:00.015 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:07:00.021 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 10:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:07:00.015+0800');
2020-08-07 10:07:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:07:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:07:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:07:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:07:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:07:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:07:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:07:10.054 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:07:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 10:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T10:07:10.011+0800');
2020-08-07 10:07:16.036 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:08:00.036 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:08:00.040 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 10:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:08:00.036+0800');
2020-08-07 10:08:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:08:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:08:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:08:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:08:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:08:10.062 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 10:08:10.066 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 10:08:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-07T10:08:10.020+0800');
2020-08-07 10:08:16.037 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:09:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:09:00.029 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 10:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:09:00.023+0800');
2020-08-07 10:09:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:09:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:09:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:09:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:09:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:09:10.063 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:09:10.068 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 10:09:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T10:09:10.019+0800');
2020-08-07 10:09:16.040 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:10:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:10:00.030 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 10:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:10:00.025+0800');
2020-08-07 10:10:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:10:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:10:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:10:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:10:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:10:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:10:10.063 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:10:10.066 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 10:10:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T10:10:10.020+0800');
2020-08-07 10:10:16.043 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:11:00.024 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:11:00.029 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 10:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:11:00.024+0800');
2020-08-07 10:11:10.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:11:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:11:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:11:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:11:10.064 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-07 10:11:10.068 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 10:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 41, '2020-08-07T10:11:10.023+0800');
2020-08-07 10:11:16.045 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:12:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:12:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 10:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:12:00.024+0800');
2020-08-07 10:12:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:12:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:12:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:12:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:12:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:12:10.062 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 10:12:10.067 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 10:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-07T10:12:10.020+0800');
2020-08-07 10:12:16.049 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:13:00.026 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:13:00.032 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 10:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:13:00.026+0800');
2020-08-07 10:13:09.750 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:13:09 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:13:09.823 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:13:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:13:09.825 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:13:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:13:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:13:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:13:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:13:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:13:10.050 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 10:13:10.053 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 10:13:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-07T10:13:10.018+0800');
2020-08-07 10:13:11.192 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:13:11 | 耗时 0 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:13:11.195 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:13:11 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:13:11.198 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:13:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:13:16.052 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:14:00.028 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:14:00.038 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 10:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:14:00.028+0800');
2020-08-07 10:14:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:14:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:14:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:14:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:14:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:14:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:14:10.067 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 10:14:10.072 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 10:14:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T10:14:10.020+0800');
2020-08-07 10:14:16.055 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596761086503_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:14:23.276 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 20012 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 10:14:23.279 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 10:14:25.038 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 10:14:25.040 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 10:14:25.145 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84ms. Found 0 repository interfaces.
2020-08-07 10:14:25.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:25.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7812314e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:25.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:25.816 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:25.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e83c07d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:25.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$f27c37ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:25.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a73188b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:25.997 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:26.000 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@528c8c1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:26.004 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cc062b69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:26.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:14:26.463 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 10:14:26.490 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 10:14:26.508 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 10:14:26.509 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 10:14:26.523 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 10:14:26.694 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 10:14:26.695 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3355 ms
2020-08-07 10:14:27.152 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 10:14:27.162 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 10:14:27.737 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 10:14:27.737 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 10:14:27.737 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 10:14:27.737 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 10:14:28.267 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 10:14:30.802 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 10:14:30.837 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 10:14:30.851 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 10:14:30.851 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 10:14:30.858 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 10:14:30.862 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 10:14:30.863 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596766470838'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 10:14:30.864 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 10:14:30.864 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 10:14:30.867 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@174b8d0e
2020-08-07 10:14:30.956 febs [main] INFO  p6spy - 2020-08-07 10:14:30 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 10:14:33.358 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 10:14:33.662 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 10:14:33.662 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 10:14:33.662 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 10:14:33.663 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 10:14:33.756 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@afb7b03, org.springframework.security.web.context.SecurityContextPersistenceFilter@903c13, org.springframework.security.web.header.HeaderWriterFilter@1dadd172, org.springframework.security.web.authentication.logout.LogoutFilter@180d918a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@31c0c7e5, org.springframework.security.web.session.ConcurrentSessionFilter@23263ba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36ab69d9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4177d422, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3b1137b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fd63c43, org.springframework.security.web.session.SessionManagementFilter@4070c4ff, org.springframework.security.web.access.ExceptionTranslationFilter@1906f982, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3151277f]
2020-08-07 10:14:33.830 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 10:14:33.847 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 10:14:33.848 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 10:14:34.354 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 10:14:35.178 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 10:14:35.196 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 10:14:35.303 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 10:14:35.344 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 10:14:35.366 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 10:14:35.406 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 10:14:35.410 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.911 seconds (JVM running for 15.399)
2020-08-07 10:14:35.438 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 10:14:35.438 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 10:14:35.438 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 10:14:35.438 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 10:14:35.438 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 10:14:36.346 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 10:14:36.368 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 10:14:36.368 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596761086503"'s failed in-progress jobs.
2020-08-07 10:14:36.535 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596766470838 started.
2020-08-07 10:14:36.663 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 10:14:36.663 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 10:14:36.671 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:14:36.675 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 10:14:36 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 10:14:36.688 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-08-07 10:14:43.407 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A89724944BBB1E4E1661F4312108F8BA
2020-08-07 10:14:47.522 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:14:47 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:14:47.533 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:14:47 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:14:47.617 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:14:47 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:14:47.619 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:14:47 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:14:47.631 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:14:47 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:14:47.631 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:14:47 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:14:47.739 febs [http-nio-8099-exec-5] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:A8DA0936EBC0C5960399B505E6DADA5C
2020-08-07 10:14:50.634 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:14:50 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:14:50.643 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:14:50 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:14:50.650 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:14:50 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:14:51.117 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:14:51 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:14:51.277 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:14:51 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T10:14:51.235+0800' WHERE (USERNAME = 'admin');
2020-08-07 10:14:51.299 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:14:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 10:14:51.303 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:14:51 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:14:51.306 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:14:51 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:14:51.313 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:14:51 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 10:14:51.318 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:14:51 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 10:14:55.148 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:14:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:14:55.164 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:14:55 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:14:56.546 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:14:56 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:14:56.546 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:14:56 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:14:56.558 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:14:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:14:56.558 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:14:56 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:14:56.571 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:14:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:14:56.571 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:14:56 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:15:00.050 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:15:00.069 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T10:15:00.050+0800');
2020-08-07 10:15:08.041 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:15:08 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:15:08.047 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:15:08 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:15:08.055 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:15:08 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:15:08.064 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:15:08 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:15:08.070 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:15:08 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:15:08.075 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:15:08 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:15:10.027 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:15:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:15:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:15:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:15:10.114 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:15:10.118 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：91 毫秒
2020-08-07 10:15:10.122 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:15:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 91, '2020-08-07T10:15:10.027+0800');
2020-08-07 10:15:12.643 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:15:19.078 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:15:19 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:15:19.085 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:15:19 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:15:19.093 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:15:19 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:15:19.101 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:15:19 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:15:19.106 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:15:19 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:15:19.114 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:15:19 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:15:31.591 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:15:31 | 耗时 13 ms | SQL 语句：
DELETE FROM a_account_equipment ae WHERE ae.kh_id = '48';
2020-08-07 10:15:31.591 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:15:31 | 耗时 13 ms | SQL 语句：
DELETE FROM a_account_equipment ae WHERE ae.kh_id = '48';
2020-08-07 10:15:31.598 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:15:31 | 耗时 1 ms | SQL 语句：
INSERT INTO a_account_equipment (sb_code, kh_id, state, creator, create_date, modifier, mod_date) VALUES ('20009', 48, 1, '1', '2020-08-07T10:15:31.594', '1', '2020-08-07T10:15:31.594');
2020-08-07 10:15:31.598 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:15:31 | 耗时 1 ms | SQL 语句：
INSERT INTO a_account_equipment (sb_code, kh_id, state, creator, create_date, modifier, mod_date) VALUES ('20009', 48, 1, '1', '2020-08-07T10:15:31.594', '1', '2020-08-07T10:15:31.594');
2020-08-07 10:15:31.607 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:15:31 | 耗时 1 ms | SQL 语句：
INSERT INTO a_account_equipment (sb_code, kh_id, state, creator, create_date, modifier, mod_date) VALUES ('20001', 48, 1, '1', '2020-08-07T10:15:31.604', '1', '2020-08-07T10:15:31.604');
2020-08-07 10:15:31.607 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:15:31 | 耗时 1 ms | SQL 语句：
INSERT INTO a_account_equipment (sb_code, kh_id, state, creator, create_date, modifier, mod_date) VALUES ('20001', 48, 1, '1', '2020-08-07T10:15:31.603', '1', '2020-08-07T10:15:31.603');
2020-08-07 10:15:52.443 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:15:52 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:15:52.509 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:15:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:15:52.512 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:15:52 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:15:53.520 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:15:53 | 耗时 1 ms | SQL 语句：
SELECT id, org_name, org_objective, org_phone, org_address, org_people, kh_phone, kh_name, kh_account, kh_degree, kh_status, kh_pwd, remark, state, creator, create_date, modifier, mod_date FROM a_account WHERE id = 48;
2020-08-07 10:15:53.527 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:15:53 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, kh_id, state, creator, create_date, modifier, mod_date FROM a_account_equipment;
2020-08-07 10:15:53.532 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:15:53 | 耗时 1 ms | SQL 语句：
SELECT id, name, code, type, sb_status, sb_jd, sb_wd, sb_address, sb_user, sb_usedate, sb_info, sb_ewm, remark, signal1, last_time, state, creator, create_date, modifier, mod_date FROM a_equipment;
2020-08-07 10:16:00.028 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:16:00.036 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 10:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:16:00.028+0800');
2020-08-07 10:16:10.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:16:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:16:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:16:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:16:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:16:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:16:10.082 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：57 毫秒
2020-08-07 10:16:10.088 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 10:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 57, '2020-08-07T10:16:10.025+0800');
2020-08-07 10:16:12.644 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:17:00.030 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:17:00.037 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 10:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:17:00.030+0800');
2020-08-07 10:17:10.026 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:17:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:17:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:17:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:17:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:17:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:17:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:17:10.078 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 10:17:10.084 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 10:17:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 52, '2020-08-07T10:17:10.026+0800');
2020-08-07 10:17:12.647 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:18:00.053 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:18:00.061 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 10:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:18:00.053+0800');
2020-08-07 10:18:10.024 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:18:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:18:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:18:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:18:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:18:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:18:10.073 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 10:18:10.079 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 10:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 49, '2020-08-07T10:18:10.024+0800');
2020-08-07 10:18:12.648 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:19:00.027 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:19:00.033 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 10:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:19:00.027+0800');
2020-08-07 10:19:10.025 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:19:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:19:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:19:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:19:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:19:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:19:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:19:10.077 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 10:19:10.082 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 10:19:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 52, '2020-08-07T10:19:10.025+0800');
2020-08-07 10:19:12.651 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:20:00.027 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:20:00.034 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 10:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:20:00.027+0800');
2020-08-07 10:20:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:20:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:20:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:20:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:20:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:20:10.060 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：41 毫秒
2020-08-07 10:20:10.065 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 10:20:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 41, '2020-08-07T10:20:10.019+0800');
2020-08-07 10:20:12.653 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:21:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:21:00.033 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 10:21:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:21:00.026+0800');
2020-08-07 10:21:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:21:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:21:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:21:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:21:10.059 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-07 10:21:10.064 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 10:21:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-07T10:21:10.021+0800');
2020-08-07 10:21:12.653 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:22:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:22:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 10:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:22:00.021+0800');
2020-08-07 10:22:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:22:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:22:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:22:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:22:10.064 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:22:10.069 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 10:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T10:22:10.021+0800');
2020-08-07 10:22:12.654 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:23:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:23:00.028 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 10:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:23:00.021+0800');
2020-08-07 10:23:10.021 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:23:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:23:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:23:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:23:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:23:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:23:10.070 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 10:23:10.075 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 10:23:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T10:23:10.021+0800');
2020-08-07 10:23:12.659 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:24:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:24:00.034 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 10:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:24:00.025+0800');
2020-08-07 10:24:10.023 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:24:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:24:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:24:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:24:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:24:10.056 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 10:24:10.060 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 10:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-07T10:24:10.022+0800');
2020-08-07 10:24:12.662 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:25:00.026 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:25:00.032 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:25:00.026+0800');
2020-08-07 10:25:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:25:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:25:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:25:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:25:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:25:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:25:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:25:10.067 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 10:25:10.071 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 47, '2020-08-07T10:25:10.020+0800');
2020-08-07 10:25:12.664 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:26:00.030 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:26:00.059 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 10:26:00 | 耗时 17 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:26:00.030+0800');
2020-08-07 10:26:10.084 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:26:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:26:10.097 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:26:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:26:10.121 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:26:10.124 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 10:26:10.127 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 10:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-07T10:26:10.084+0800');
2020-08-07 10:26:12.666 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:27:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:27:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 10:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:27:00.025+0800');
2020-08-07 10:27:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:27:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:27:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:27:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:27:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:27:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:27:10.066 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:27:10.070 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 10:27:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T10:27:10.023+0800');
2020-08-07 10:27:12.670 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:28:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:28:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 10:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:28:00.024+0800');
2020-08-07 10:28:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:28:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:28:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:28:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:28:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:28:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:28:10.069 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 10:28:10.074 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 10:28:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T10:28:10.022+0800');
2020-08-07 10:28:12.674 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596766470838_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:28:50.727 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 13140 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 10:28:50.730 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 10:28:52.432 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 10:28:52.435 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 10:28:52.521 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74ms. Found 0 repository interfaces.
2020-08-07 10:28:53.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$620393ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f87522e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.358 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$dc6d9a18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9122eb23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@644a3add' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b5f78dd5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:28:53.827 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 10:28:53.846 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 10:28:53.856 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 10:28:53.857 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 10:28:53.865 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 10:28:53.978 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 10:28:53.978 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3183 ms
2020-08-07 10:28:54.339 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 10:28:54.347 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 10:28:55.004 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 10:28:55.004 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 10:28:55.004 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 10:28:55.004 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 10:28:55.544 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 10:28:58.091 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 10:28:58.123 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 10:28:58.134 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 10:28:58.134 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 10:28:58.137 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 10:28:58.139 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 10:28:58.140 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596767338124'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 10:28:58.140 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 10:28:58.140 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 10:28:58.142 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@d180961
2020-08-07 10:28:58.262 febs [main] INFO  p6spy - 2020-08-07 10:28:58 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 10:29:00.562 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 10:29:00.882 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 10:29:00.882 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 10:29:00.882 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:29:00.882 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 10:29:00.882 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 10:29:00.882 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 10:29:00.883 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 10:29:00.884 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 10:29:00.884 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 10:29:00.884 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 10:29:00.884 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 10:29:00.972 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7836c79, org.springframework.security.web.context.SecurityContextPersistenceFilter@6738e8b2, org.springframework.security.web.header.HeaderWriterFilter@8dbf0f2, org.springframework.security.web.authentication.logout.LogoutFilter@2c70a1de, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@470b5213, org.springframework.security.web.session.ConcurrentSessionFilter@6e8aea7e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@da9374c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7acb5200, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1f6d7e7c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ccc971e, org.springframework.security.web.session.SessionManagementFilter@1d3546f9, org.springframework.security.web.access.ExceptionTranslationFilter@7b1559f1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14bf9fd0]
2020-08-07 10:29:01.029 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 10:29:01.062 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 10:29:01.065 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 10:29:01.493 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 10:29:02.333 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 10:29:02.353 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 10:29:02.482 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 10:29:02.507 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 10:29:02.524 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 10:29:02.557 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 10:29:02.561 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.573 seconds (JVM running for 13.682)
2020-08-07 10:29:02.586 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 10:29:02.587 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 10:29:02.587 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 10:29:02.587 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 10:29:02.587 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 10:29:02.899 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 10:29:02.899 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 10:29:02.913 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-08-07 10:29:02.918 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 10:29:02 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 10:29:03.512 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 10:29:03.531 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 10:29:03.531 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596766470838"'s failed in-progress jobs.
2020-08-07 10:29:03.540 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-07 10:29:03.546 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596767338124 started.
2020-08-07 10:29:03.554 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:29:03.609 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:29:03.670 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:29:03 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T10:29:03.609+0800');
2020-08-07 10:29:10.028 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:29:10.085 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:29:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:29:10.128 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:29:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:29:10.173 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:29:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:29:10.176 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：148 毫秒
2020-08-07 10:29:10.182 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:29:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 148, '2020-08-07T10:29:10.028+0800');
2020-08-07 10:29:15.551 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:29:22.328 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:E2336CC7305960DD0F92B35F373A2281
2020-08-07 10:29:56.610 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:61ADD21FE1A57CBB812490BCCC988D31
2020-08-07 10:29:59.790 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:29:59 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:29:59.898 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:29:59 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:29:59.910 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:29:59 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:30:00.030 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:30:00.035 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:30:00.030+0800');
2020-08-07 10:30:00.334 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:30:00.465 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T10:30:00.455+0800' WHERE (USERNAME = 'admin');
2020-08-07 10:30:00.477 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 10:30:00.481 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:30:00.484 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:30:00.491 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 10:30:00.497 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:00 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 10:30:01.960 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:30:01 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-07 10:30:01.965 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:30:01 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-07 10:30:01.982 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:30:01 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-07 10:30:02.473 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:30:02 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-07 10:30:10.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:30:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:30:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:30:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:30:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:30:10.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:30:10.083 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-07 10:30:10.089 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 10:30:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-08-07T10:30:10.025+0800');
2020-08-07 10:30:15.555 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:30:31.323 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:30:31 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET PARENT_ID = 363, MENU_NAME = '绑定设备', PERMS = 'tUser:bind', TYPE = '1', MODIFY_TIME = '2020-08-07T10:30:31.319+0800' WHERE MENU_ID = 368;
2020-08-07 10:30:31.356 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:30:31 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-07 10:30:31.360 febs [aps-Async-Thread1] INFO  p6spy - 2020-08-07 10:30:31 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改菜单/按钮', 11, 'com.cx.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=368, parentId=363, menuName=绑定设备, url=null, perms=tUser:bind, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Fri Aug 07 10:30:31 CST 2020)"', '192.168.1.113', '2020-08-07T10:30:31.344+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-07 10:30:33.465 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:30:33 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:30:33.531 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:30:33 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-07 10:30:34.204 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:30:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-07 10:30:34.208 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:30:34 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-07 10:30:34.210 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:30:34 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM t_menu ORDER BY ORDER_NUM ASC;
2020-08-07 10:30:40.637 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 1 ms | SQL 语句：
UPDATE t_role SET ROLE_NAME = 'admin', REMARK = '系统管理员', MODIFY_TIME = '2020-08-07T10:30:40.630+0800' WHERE ROLE_ID = 82;
2020-08-07 10:30:40.659 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 2 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (ROLE_ID IN ('82'));
2020-08-07 10:30:40.700 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:30:40.703 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:30:40.708 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:30:40.723 febs [aps-Async-Thread2] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改角色', 85, 'com.cx.system.controller.RoleController.updateRole()', ' role: "Role(roleId=82, roleName=admin, remark=系统管理员, createTime=null, modifyTime=Fri Aug 07 10:30:40 CST 2020, menuIds=1,13,11,12,4,14,15,5,19,17,18,335,336,337,338,339,340,341,342,357,363,365,368,367,366,358,369,370,371,372,374,375,376,380,383,396,384,385,387,388,389,394,393,395)"', '192.168.1.113', '2020-08-07T10:30:40.715+0800', '内网IP|0|0|内网IP|内网IP');
2020-08-07 10:30:40.751 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ) TOTAL;
2020-08-07 10:30:40.754 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:30:40 | 耗时 1 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM t_role r LEFT JOIN t_role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-08-07 10:30:43.594 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:30:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:30:43.597 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:30:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:30:45.396 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:45 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:30:45.451 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:30:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:30:45.453 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:30:45 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:30:46.178 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:30:46 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:30:46.219 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:30:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:30:46.222 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:30:46 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:31:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:31:00.018 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 10:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:31:00.013+0800');
2020-08-07 10:31:01.373 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:31:01 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:31:01.443 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:31:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:31:01.445 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:31:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:31:10.025 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:31:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:31:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:31:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:31:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:31:10.070 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 10:31:10.076 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 10:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T10:31:10.025+0800');
2020-08-07 10:31:15.595 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:32:00.026 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:32:00.033 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 10:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:32:00.026+0800');
2020-08-07 10:32:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:32:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:32:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:32:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:32:10.060 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-07 10:32:10.064 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 10:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-07T10:32:10.021+0800');
2020-08-07 10:32:10.618 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:32:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:32:10.693 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:32:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:32:10.697 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:32:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:32:12.184 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:32:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:32:12.196 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:32:12 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:32:12.208 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:32:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:32:15.597 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:32:48.944 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:32:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:32:49.028 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:32:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:32:49.031 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:32:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:32:50.761 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:32:50 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:32:50.765 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:32:50.769 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:32:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:33:00.028 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:33:00.035 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 10:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:33:00.028+0800');
2020-08-07 10:33:10.024 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:33:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:33:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:33:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:33:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:33:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:33:10.075 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-08-07 10:33:10.079 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 10:33:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 51, '2020-08-07T10:33:10.024+0800');
2020-08-07 10:33:15.623 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:33:47.002 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:33:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:33:47.097 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:33:47 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:33:47.100 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:33:47 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:33:48.109 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:33:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:33:48.113 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:33:48 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:33:48.116 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:33:48 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:33:54.432 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:33:54 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:33:54.502 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:33:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:33:54.506 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:33:54 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:33:55.960 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:33:55 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:33:55.964 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:33:55 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:33:55.968 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:33:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:34:00.028 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:34:00.033 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 10:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:34:00.028+0800');
2020-08-07 10:34:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:34:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:34:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:34:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:34:10.062 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 10:34:10.066 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 10:34:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-07T10:34:10.022+0800');
2020-08-07 10:34:15.625 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:35:00.027 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:35:00.032 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 10:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:35:00.027+0800');
2020-08-07 10:35:10.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:35:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:35:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:35:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:35:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:35:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:35:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:35:10.068 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 10:35:10.073 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 10:35:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T10:35:10.023+0800');
2020-08-07 10:35:15.634 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:35:21.297 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:35:21 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:35:21.362 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:35:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:35:21.364 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:35:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:35:23.063 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:35:23 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:35:23.069 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:35:23 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:35:23.073 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:35:23 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:35:39.425 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:35:39 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 10:35:39.430 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:35:39 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:35:39.434 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:35:39 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:36:00.025 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:36:00.031 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 10:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:36:00.025+0800');
2020-08-07 10:36:10.023 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:36:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:36:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:36:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:36:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:36:10 | 耗时 3 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:36:10.072 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 10:36:10.076 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 10:36:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 49, '2020-08-07T10:36:10.023+0800');
2020-08-07 10:36:15.642 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:36:23.797 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:36:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:36:23.869 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:36:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:36:23.872 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:36:23 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:36:25.682 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:36:25 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:36:25.686 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:36:25 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:36:25.689 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:36:25 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:37:00.028 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:37:00.034 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 10:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:37:00.028+0800');
2020-08-07 10:37:10.023 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:37:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:37:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:37:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:37:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:37:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:37:10.069 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 10:37:10.073 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 10:37:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T10:37:10.023+0800');
2020-08-07 10:37:15.639 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:38:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:38:00.028 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 10:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:38:00.024+0800');
2020-08-07 10:38:10.012 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:38:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:38:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:38:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:38:10.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-07 10:38:10.053 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 10:38:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-07T10:38:10.012+0800');
2020-08-07 10:38:15.642 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:39:00.025 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:39:00.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:39:00.025+0800');
2020-08-07 10:39:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:39:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:39:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:39:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:39:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:39:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:39:10.068 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 10:39:10.072 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T10:39:10.022+0800');
2020-08-07 10:39:15.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:40:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:40:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 10:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:40:00.022+0800');
2020-08-07 10:40:10.023 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:40:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:40:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:40:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:40:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:40:10.067 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:40:10.073 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 10:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T10:40:10.023+0800');
2020-08-07 10:40:15.650 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:40:58.380 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:40:58 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:40:58.455 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:40:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:40:58.457 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:40:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:41:00.018 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:41:00 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:41:00.023 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:41:00.026 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:41:00.027 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:41:00 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:41:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 10:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:41:00.026+0800');
2020-08-07 10:41:10.024 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:41:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:41:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:41:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:41:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:41:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:41:10.068 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:41:10.072 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 10:41:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T10:41:10.024+0800');
2020-08-07 10:41:10.494 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:41:10 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:41:10.567 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:41:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:41:10.571 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:41:10 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:41:15.654 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:41:51.123 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:41:51 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:41:51.220 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:41:51 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:41:51.222 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:41:51 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:42:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:42:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 10:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:42:00.023+0800');
2020-08-07 10:42:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:42:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:42:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:42:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:42:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:42:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:42:10.066 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 10:42:10.070 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 10:42:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T10:42:10.021+0800');
2020-08-07 10:42:11.984 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:42:11 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:42:11.988 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:42:11 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:42:11.991 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:42:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:42:15.655 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:42:59.863 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:42:59 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:42:59.933 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:42:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:42:59.935 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:42:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:43:00.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:43:00.017 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 10:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:43:00.012+0800');
2020-08-07 10:43:01.522 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:43:01 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:43:01.526 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:43:01 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:43:01.530 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:43:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:43:10.023 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:43:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:43:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:43:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:43:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:43:10.073 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：50 毫秒
2020-08-07 10:43:10.076 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 10:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 50, '2020-08-07T10:43:10.023+0800');
2020-08-07 10:43:15.656 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:43:35.053 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:43:35 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:43:35.131 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:43:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:43:35.134 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:43:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:43:36.267 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:43:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:43:36.270 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:43:36 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:43:36.273 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 10:43:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:44:00.026 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:44:00.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 10:44:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:44:00.026+0800');
2020-08-07 10:44:10.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:44:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:44:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:44:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:44:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:44:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:44:10.068 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 10:44:10.072 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 10:44:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T10:44:10.021+0800');
2020-08-07 10:44:15.660 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:44:22.112 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:44:22 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:44:22.115 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:44:22 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:44:22.119 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:44:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:45:00.026 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:45:00.032 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 10:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:45:00.026+0800');
2020-08-07 10:45:10.053 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:45:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:45:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:45:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:45:10.093 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 10:45:10.096 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 10:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-07T10:45:10.053+0800');
2020-08-07 10:45:15.665 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:46:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:46:00.028 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 10:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:46:00.022+0800');
2020-08-07 10:46:10.021 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:46:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:46:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:46:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:46:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:46:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:46:10.065 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:46:10.070 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 10:46:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T10:46:10.021+0800');
2020-08-07 10:46:15.666 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:47:00.025 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:47:00.030 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 10:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:47:00.025+0800');
2020-08-07 10:47:10.011 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:47:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:47:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:47:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:47:10.042 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 10:47:10.044 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 10:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T10:47:10.011+0800');
2020-08-07 10:47:15.668 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:48:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:48:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 10:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:48:00.021+0800');
2020-08-07 10:48:10.012 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:48:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:48:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:48:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:48:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:48:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:48:10.055 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:48:10.060 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 10:48:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T10:48:10.012+0800');
2020-08-07 10:48:15.670 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:49:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:49:00.027 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:49:00.022+0800');
2020-08-07 10:49:10.012 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:49:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:49:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:49:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:49:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:49:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:49:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:49:10.056 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:49:10.060 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T10:49:10.012+0800');
2020-08-07 10:49:15.671 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:49:58.287 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:49:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:49:58.365 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:49:58 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:49:58.368 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:49:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:49:59.469 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:49:59 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:49:59.528 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:49:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:49:59.531 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:49:59 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:50:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:50:00.018 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 10:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:50:00.013+0800');
2020-08-07 10:50:01.051 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:50:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:50:01.054 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:50:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:50:01.056 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:50:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:50:05.219 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:50:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 10:50:05.222 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:50:05 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:50:05.225 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 10:50:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:50:10.012 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:50:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:50:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:50:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:50:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:50:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:50:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:50:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 10:50:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T10:50:10.012+0800');
2020-08-07 10:50:15.687 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:50:17.508 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:50:17 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:50:17.512 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:50:17 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:50:17.515 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 10:50:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:51:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:51:00.029 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 10:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:51:00.025+0800');
2020-08-07 10:51:10.010 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:51:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:51:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:51:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:51:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:51:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:51:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:51:10.057 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 10:51:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T10:51:10.010+0800');
2020-08-07 10:51:15.689 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:51:22.003 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:51:22 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:51:22.071 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:51:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:51:22.073 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 10:51:22 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:51:24.784 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:51:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:51:24.788 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:51:24 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:51:24.792 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:51:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:52:00.026 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:52:00.031 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 10:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:52:00.026+0800');
2020-08-07 10:52:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:52:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:52:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:52:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:52:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:52:10.065 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:52:10.069 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 10:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T10:52:10.022+0800');
2020-08-07 10:52:15.741 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:53:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:53:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 10:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:53:00.020+0800');
2020-08-07 10:53:10.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:53:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:53:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:53:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:53:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:53:10.054 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 10:53:10.058 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 10:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T10:53:10.011+0800');
2020-08-07 10:53:15.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596767338124_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:54:00.251 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:54:00.264 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 10:54:00 | 耗时 3 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 6, '2020-08-07T10:54:00.251+0800');
2020-08-07 10:54:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:54:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:54:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:54:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:54:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:54:10.063 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 10:54:10.067 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 10:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 44, '2020-08-07T10:54:10.019+0800');
2020-08-07 10:54:23.713 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 13156 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 10:54:23.717 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 10:54:25.397 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 10:54:25.401 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 10:54:25.484 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-08-07 10:54:26.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e6aa49b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d1bd8e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.365 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$61145016] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.414 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$15c9a121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.421 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.424 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@dbddbe3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3a9e43d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.433 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:54:26.814 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 10:54:26.829 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 10:54:26.839 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 10:54:26.839 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 10:54:26.846 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 10:54:26.994 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 10:54:26.994 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3211 ms
2020-08-07 10:54:27.404 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 10:54:27.417 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 10:54:27.947 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 10:54:27.947 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 10:54:27.947 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 10:54:27.947 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 10:54:28.540 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 10:54:30.860 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 10:54:30.894 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 10:54:30.932 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 10:54:30.932 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 10:54:30.939 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 10:54:30.942 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 10:54:30.943 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596768870895'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 10:54:30.943 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 10:54:30.943 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 10:54:30.944 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5a1c7619
2020-08-07 10:54:31.042 febs [main] INFO  p6spy - 2020-08-07 10:54:31 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 10:54:33.259 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 10:54:33.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 10:54:33.571 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 10:54:33.662 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70aa03c0, org.springframework.security.web.context.SecurityContextPersistenceFilter@4177d422, org.springframework.security.web.header.HeaderWriterFilter@1e4c4fda, org.springframework.security.web.authentication.logout.LogoutFilter@6549ce71, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@23d23d98, org.springframework.security.web.session.ConcurrentSessionFilter@5f4e389a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12f3fcd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@153409b8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6ee1ddcf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44da745f, org.springframework.security.web.session.SessionManagementFilter@903c13, org.springframework.security.web.access.ExceptionTranslationFilter@5acd7d1c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d483ebe]
2020-08-07 10:54:33.732 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 10:54:33.746 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 10:54:33.748 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 10:54:34.167 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 10:54:34.904 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 10:54:34.918 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 10:54:34.992 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 10:54:35.029 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 10:54:35.057 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 10:54:35.097 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 10:54:35.102 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.168 seconds (JVM running for 13.153)
2020-08-07 10:54:35.128 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 10:54:35.128 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 10:54:35.128 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 10:54:35.128 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 10:54:35.128 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 10:54:35.511 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 10:54:35.511 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 10:54:35.530 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 10:54:35 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 10:54:35.537 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 26 ms
2020-08-07 10:54:36.032 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 10:54:36.048 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 10:54:36.049 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596767338124"'s failed in-progress jobs.
2020-08-07 10:54:36.059 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596768870895 started.
2020-08-07 10:54:36.068 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596768870895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:54:40.914 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:565B499C13C54773D764E3B14C0FAAD3
2020-08-07 10:54:44.790 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:44 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:54:44.908 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:44 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:54:44.928 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:44 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:54:45.432 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:54:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:54:45.609 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:45 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T10:54:45.568+0800' WHERE (USERNAME = 'admin');
2020-08-07 10:54:45.622 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:45 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 10:54:45.625 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:45 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:54:45.629 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:45 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:54:45.637 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:45 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 10:54:45.641 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:54:45 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 10:54:47.060 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:54:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:54:47.075 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:54:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:54:48.064 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:54:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:54:48.079 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:54:48 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:54:48.094 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 10:54:48 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:55:00.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:55:00.062 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T10:55:00.042+0800');
2020-08-07 10:55:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:55:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:55:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:55:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:55:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:55:10.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:55:10.111 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：94 毫秒
2020-08-07 10:55:10.117 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 94, '2020-08-07T10:55:10.017+0800');
2020-08-07 10:55:12.070 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596768870895_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:55:50.545 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 20636 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 10:55:50.548 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 10:55:52.248 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 10:55:52.252 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 10:55:52.356 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88ms. Found 0 repository interfaces.
2020-08-07 10:55:52.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c4788108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5aea1037] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3ee28766] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f397d871] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.250 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@587c5c1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.254 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$186c7b23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:55:53.675 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 10:55:53.690 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 10:55:53.699 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 10:55:53.700 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 10:55:53.707 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 10:55:53.827 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 10:55:53.828 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3207 ms
2020-08-07 10:55:54.244 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 10:55:54.254 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 10:55:54.811 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 10:55:54.811 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 10:55:54.811 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 10:55:54.811 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 10:55:55.405 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 10:55:57.902 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 10:55:57.934 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 10:55:57.945 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 10:55:57.946 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 10:55:57.952 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 10:55:57.954 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 10:55:57.955 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596768957936'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 10:55:57.955 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 10:55:57.955 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 10:55:57.957 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2299f6d7
2020-08-07 10:55:58.051 febs [main] INFO  p6spy - 2020-08-07 10:55:58 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 10:56:00.583 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 10:56:00.878 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 10:56:00.878 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 10:56:00.879 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 10:56:00.880 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 10:56:00.985 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@441016d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@2fa2143d, org.springframework.security.web.header.HeaderWriterFilter@79ee779c, org.springframework.security.web.authentication.logout.LogoutFilter@30cb223b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7577589, org.springframework.security.web.session.ConcurrentSessionFilter@733bd6f3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26b3fe8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c20e9d6, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5308e79d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@522f0bb8, org.springframework.security.web.session.SessionManagementFilter@27a6384b, org.springframework.security.web.access.ExceptionTranslationFilter@61c145cb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4dffa400]
2020-08-07 10:56:01.036 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 10:56:01.051 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 10:56:01.053 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 10:56:01.555 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 10:56:02.503 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 10:56:02.524 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 10:56:02.610 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 10:56:02.630 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 10:56:02.644 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 10:56:02.687 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 10:56:02.692 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.892 seconds (JVM running for 13.955)
2020-08-07 10:56:02.717 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 10:56:02.717 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 10:56:02.717 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 10:56:02.717 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 10:56:02.717 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 10:56:03.272 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 10:56:03.272 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 10:56:03.286 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-08-07 10:56:03.292 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-07 10:56:03 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 10:56:03.633 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 10:56:03.647 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 10:56:03.647 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596768870895"'s failed in-progress jobs.
2020-08-07 10:56:03.655 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-07 10:56:03.667 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596768957936 started.
2020-08-07 10:56:03.676 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596768957936_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:56:03.732 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:56:03.803 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 10:56:03 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T10:56:03.732+0800');
2020-08-07 10:56:09.184 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:EA599FC4A3509AA3C297BA5C44333560
2020-08-07 10:56:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:56:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:56:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:56:10.100 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:56:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:56:10.144 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:56:10 | 耗时 2 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:56:10.150 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：133 毫秒
2020-08-07 10:56:10.156 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 10:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 133, '2020-08-07T10:56:10.017+0800');
2020-08-07 10:56:13.098 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 10:56:13.226 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 10:56:13.244 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 10:56:13.790 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 10:56:13.935 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T10:56:13.927+0800' WHERE (USERNAME = 'admin');
2020-08-07 10:56:13.957 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 10:56:13.960 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:56:13.964 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 10:56:13.971 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 10:56:13.977 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 10:56:13 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 10:56:15.185 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:56:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 10:56:15.199 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 10:56:15 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 10:56:15.674 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596768957936_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:56:16.183 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:56:16 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 10:56:16.201 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:56:16 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 10:56:16.225 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 10:56:16 | 耗时 11 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 10:57:00.032 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:57:00.040 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 10:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:57:00.032+0800');
2020-08-07 10:57:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:57:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:57:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:57:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:57:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:57:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:57:10.072 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-07 10:57:10.077 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 10:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 55, '2020-08-07T10:57:10.017+0800');
2020-08-07 10:57:15.674 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596768957936_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:58:00.028 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:58:00.035 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 10:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T10:58:00.028+0800');
2020-08-07 10:58:10.014 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:58:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:58:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:58:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:58:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:58:10.069 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-07 10:58:10.076 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 10:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-07T10:58:10.014+0800');
2020-08-07 10:58:15.679 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596768957936_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:59:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 10:59:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 10:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T10:59:00.018+0800');
2020-08-07 10:59:10.015 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 10:59:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 10:59:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:59:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 10:59:10.062 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 10:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 10:59:10.066 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-08-07 10:59:10.072 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 10:59:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 51, '2020-08-07T10:59:10.015+0800');
2020-08-07 10:59:15.694 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596768957936_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 10:59:41.770 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 13972 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 10:59:41.774 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 10:59:43.421 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 10:59:43.424 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 10:59:43.525 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70ms. Found 0 repository interfaces.
2020-08-07 10:59:44.179 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6de68ad2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4581a01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.430 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e8509130] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9d05e23b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.490 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6f6cc7da' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c1da84ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 10:59:44.918 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 10:59:44.936 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 10:59:44.945 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 10:59:44.945 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 10:59:44.953 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 10:59:45.084 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 10:59:45.085 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3242 ms
2020-08-07 10:59:45.481 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 10:59:45.489 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 10:59:46.069 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 10:59:46.069 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 10:59:46.069 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 10:59:46.069 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 10:59:46.691 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 10:59:49.047 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 10:59:49.079 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 10:59:49.090 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 10:59:49.090 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 10:59:49.094 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 10:59:49.096 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 10:59:49.097 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596769189080'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 10:59:49.097 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 10:59:49.097 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 10:59:49.098 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@63c4d16
2020-08-07 10:59:49.205 febs [main] INFO  p6spy - 2020-08-07 10:59:49 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 10:59:51.593 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 10:59:51.957 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 10:59:51.958 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 10:59:52.036 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2befb16f, org.springframework.security.web.context.SecurityContextPersistenceFilter@4bceac99, org.springframework.security.web.header.HeaderWriterFilter@2553dcc0, org.springframework.security.web.authentication.logout.LogoutFilter@59ac77f9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@344a065a, org.springframework.security.web.session.ConcurrentSessionFilter@1cfd6f63, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@442310fd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ae5ddc0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@9825465, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3151277f, org.springframework.security.web.session.SessionManagementFilter@746e534, org.springframework.security.web.access.ExceptionTranslationFilter@727f36dd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8c18bde]
2020-08-07 10:59:52.093 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 10:59:52.129 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 10:59:52.132 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 10:59:52.600 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 10:59:53.398 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 10:59:53.412 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 10:59:53.475 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 10:59:53.494 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 10:59:53.508 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 10:59:53.542 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 10:59:53.546 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.557 seconds (JVM running for 13.609)
2020-08-07 10:59:53.580 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 10:59:53.580 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 10:59:53.580 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 10:59:53.580 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 10:59:53.580 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 10:59:54.215 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 10:59:54.215 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 10:59:54.227 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 10:59:54 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 10:59:54.238 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-07 10:59:54.495 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 10:59:54.506 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596769189080 started.
2020-08-07 10:59:54.512 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:00:00.059 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:00:00.317 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 6, '2020-08-07T11:00:00.059+0800');
2020-08-07 11:00:01.541 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:3B3BA80E98B606BC8EC5CDD6A3798E02
2020-08-07 11:00:05.012 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:00:05.128 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:00:05.152 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 11 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:00:05.678 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:00:05.856 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T11:00:05.817+0800' WHERE (USERNAME = 'admin');
2020-08-07 11:00:05.877 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 11:00:05.882 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:00:05.886 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:00:05.893 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 11:00:05.897 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:00:05 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 11:00:06.964 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:00:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:00:06.979 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:00:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:00:07.933 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:00:07 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:00:07.946 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:00:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:00:07.950 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:00:07.952 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:00:07 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:00:07.961 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:00:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:00:07.962 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:00:07 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:00:09.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 11:00:09.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596768957936"'s failed in-progress jobs.
2020-08-07 11:00:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:00:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:00:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:00:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:00:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:00:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:00:10.093 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：72 毫秒
2020-08-07 11:00:10.097 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 72, '2020-08-07T11:00:10.021+0800');
2020-08-07 11:00:11.074 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:00:11 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:00:11.079 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:00:11 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:00:11.083 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:00:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:00:18.513 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:01:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:01:00.035 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-07T11:01:00.025+0800');
2020-08-07 11:01:10.013 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:01:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:01:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:01:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:01:10.062 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 11:01:10.065 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T11:01:10.013+0800');
2020-08-07 11:01:18.517 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:02:00.027 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:02:00.036 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 11:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:02:00.027+0800');
2020-08-07 11:02:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:02:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:02:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:02:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:02:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:02:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:02:10.072 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 11:02:10.078 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 11:02:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-08-07T11:02:10.020+0800');
2020-08-07 11:02:18.516 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:03:00.026 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:03:00.033 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 11:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:03:00.026+0800');
2020-08-07 11:03:10.107 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:03:10.113 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:03:10.122 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:03:10.148 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:03:10.151 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 11:03:10.155 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 11:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T11:03:10.107+0800');
2020-08-07 11:03:18.518 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:04:00.031 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:04:00.039 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 11:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T11:04:00.027+0800');
2020-08-07 11:04:10.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:04:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:04:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:04:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:04:10.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 11:04:10.048 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 11:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-07T11:04:10.011+0800');
2020-08-07 11:04:18.519 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:05:00.026 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:05:00.033 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 11:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:05:00.026+0800');
2020-08-07 11:05:10.014 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:05:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:05:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:05:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:05:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:05:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:05:10.061 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 11:05:10.066 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 11:05:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 47, '2020-08-07T11:05:10.014+0800');
2020-08-07 11:05:18.521 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:06:00.052 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:06:00.059 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 11:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:06:00.052+0800');
2020-08-07 11:06:10.015 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:06:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:06:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:06:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:06:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:06:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:06:10.067 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 11:06:10.071 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 11:06:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-08-07T11:06:10.015+0800');
2020-08-07 11:06:18.524 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:07:00.025 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:07:00.030 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 11:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:07:00.025+0800');
2020-08-07 11:07:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:07:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:07:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:07:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:07:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:07:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:07:10.072 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-07 11:07:10.077 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 11:07:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 53, '2020-08-07T11:07:10.019+0800');
2020-08-07 11:07:18.525 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:08:00.024 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:08:00.031 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 11:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:08:00.024+0800');
2020-08-07 11:08:10.015 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:08:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:08:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:08:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:08:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:08:10.062 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 11:08:10.066 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 11:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T11:08:10.015+0800');
2020-08-07 11:08:18.527 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:09:00.026 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:09:00.032 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 11:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:09:00.026+0800');
2020-08-07 11:09:10.013 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:09:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:09:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:09:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:09:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:09:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:09:10.063 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：50 毫秒
2020-08-07 11:09:10.068 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 11:09:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 50, '2020-08-07T11:09:10.013+0800');
2020-08-07 11:09:18.529 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769189080_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:09:41.226 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:09:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:09:41.315 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:09:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:09:41.317 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:09:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:09:51.523 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 19904 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 11:09:51.526 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 11:09:53.266 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 11:09:53.270 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 11:09:53.363 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 0 repository interfaces.
2020-08-07 11:09:53.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b96a0423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.074 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.077 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4fdb9352] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$33d40a81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e8895b8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@40943a6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d5dfe3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:09:54.728 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 11:09:54.747 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 11:09:54.756 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 11:09:54.757 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 11:09:54.765 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 11:09:54.884 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 11:09:54.884 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3291 ms
2020-08-07 11:09:55.270 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 11:09:55.278 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 11:09:55.880 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 11:09:55.880 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 11:09:55.880 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 11:09:55.880 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 11:09:56.445 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 11:09:58.869 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 11:09:58.911 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 11:09:58.932 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 11:09:58.932 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 11:09:58.936 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 11:09:58.939 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 11:09:58.941 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596769798913'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 11:09:58.941 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 11:09:58.941 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 11:09:58.943 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1f3361e9
2020-08-07 11:09:59.066 febs [main] INFO  p6spy - 2020-08-07 11:09:59 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 11:10:01.649 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 11:10:01.950 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 11:10:01.951 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 11:10:01.951 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 11:10:01.951 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 11:10:02.070 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@912747d, org.springframework.security.web.context.SecurityContextPersistenceFilter@5acd7d1c, org.springframework.security.web.header.HeaderWriterFilter@2c224096, org.springframework.security.web.authentication.logout.LogoutFilter@12f3fcd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@36cf6377, org.springframework.security.web.session.ConcurrentSessionFilter@33c9f1ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@178ba69f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56a9b662, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@67f266bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78ea700f, org.springframework.security.web.session.SessionManagementFilter@1906f982, org.springframework.security.web.access.ExceptionTranslationFilter@746e534, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1870b9b8]
2020-08-07 11:10:02.140 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 11:10:02.161 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 11:10:02.163 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:10:02.612 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 11:10:03.469 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 11:10:03.500 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 11:10:03.590 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 11:10:03.638 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 11:10:03.653 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 11:10:03.687 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 11:10:03.691 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.958 seconds (JVM running for 14.198)
2020-08-07 11:10:03.723 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 11:10:03.723 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 11:10:03.724 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 11:10:03.724 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 11:10:03.724 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 11:10:04.326 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 11:10:04 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 11:10:04.656 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 11:10:04.671 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 11:10:04.672 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 11:10:04.679 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 11:10:04.680 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596769189080"'s failed in-progress jobs.
2020-08-07 11:10:04.689 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: ......Freed 1 acquired trigger(s).
2020-08-07 11:10:04.699 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596769798913 started.
2020-08-07 11:10:04.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769798913_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:10:04.712 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 39 ms
2020-08-07 11:10:04.766 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:10:04.825 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:10:04 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T11:10:04.766+0800');
2020-08-07 11:10:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:10:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:10:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:10:10.119 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:10:10.143 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:94B3C60D00159872C05AB3C22BB96885
2020-08-07 11:10:10.162 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:10:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:10:10.166 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：144 毫秒
2020-08-07 11:10:10.171 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:10:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 144, '2020-08-07T11:10:10.022+0800');
2020-08-07 11:10:13.569 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:10:13 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:10:13.671 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:10:13 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:10:13.685 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:10:13 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:10:14.241 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:10:14 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:10:14.398 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:10:14 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T11:10:14.388+0800' WHERE (USERNAME = 'admin');
2020-08-07 11:10:14.422 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:10:14 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 11:10:14.426 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:10:14 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:10:14.431 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:10:14 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:10:14.438 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:10:14 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 11:10:14.443 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:10:14 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 11:10:16.707 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769798913_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:10:17.012 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:10:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:10:17.026 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:10:17 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:10:18.888 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:10:18 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:10:18.902 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:10:18 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:10:18.913 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:10:18 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:11:00.032 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:11:00.040 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:11:00.032+0800');
2020-08-07 11:11:10.026 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:11:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:11:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:11:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:11:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:11:10.082 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:11:10.087 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：61 毫秒
2020-08-07 11:11:10.092 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:11:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 61, '2020-08-07T11:11:10.026+0800');
2020-08-07 11:11:16.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769798913_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:11:43.116 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17192 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 11:11:43.119 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 11:11:45.019 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 11:11:45.022 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 11:11:45.109 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71ms. Found 0 repository interfaces.
2020-08-07 11:11:45.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:45.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f589b731] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:45.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:45.986 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8bfb4660] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$6ff3bd8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$24a90e9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6785c9fa' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$497db14c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.249 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:11:46.801 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 11:11:46.826 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 11:11:46.840 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 11:11:46.840 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 11:11:46.851 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 11:11:47.002 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 11:11:47.002 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3811 ms
2020-08-07 11:11:47.482 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 11:11:47.495 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 11:11:48.100 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 11:11:48.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 11:11:48.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 11:11:48.100 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 11:11:48.830 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 11:11:51.553 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 11:11:51.598 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 11:11:51.616 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 11:11:51.616 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 11:11:51.620 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 11:11:51.623 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 11:11:51.624 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596769911600'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 11:11:51.624 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 11:11:51.624 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 11:11:51.626 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@539bb233
2020-08-07 11:11:51.726 febs [main] INFO  p6spy - 2020-08-07 11:11:51 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 11:11:54.414 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 11:11:54.738 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 11:11:54.739 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 11:11:54.872 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@524b1e41, org.springframework.security.web.context.SecurityContextPersistenceFilter@1ced1d14, org.springframework.security.web.header.HeaderWriterFilter@7d086485, org.springframework.security.web.authentication.logout.LogoutFilter@7136ad9a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@43778d6d, org.springframework.security.web.session.ConcurrentSessionFilter@21e15093, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5263f554, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e353e1d, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@19b33b0d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2da8ed80, org.springframework.security.web.session.SessionManagementFilter@3b171fbd, org.springframework.security.web.access.ExceptionTranslationFilter@387ef6a7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2cdcedef]
2020-08-07 11:11:54.960 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 11:11:54.980 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 11:11:54.982 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:11:55.494 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 11:11:56.360 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 11:11:56.379 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 11:11:56.483 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 11:11:56.524 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 11:11:56.543 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 11:11:56.584 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 11:11:56.587 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.218 seconds (JVM running for 16.522)
2020-08-07 11:11:56.615 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 11:11:56.617 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 11:11:56.617 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 11:11:56.617 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 11:11:56.617 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 11:11:57.149 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 11:11:57.149 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 11:11:57.161 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 11:11:57 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 11:11:57.172 febs [RMI TCP Connection(4)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-08-07 11:11:57.526 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 11:11:57.539 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 11:11:57.539 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596769798913"'s failed in-progress jobs.
2020-08-07 11:11:57.547 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596769911600 started.
2020-08-07 11:11:57.553 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769911600_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:12:00.058 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:12:00.132 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 6, '2020-08-07T11:12:00.058+0800');
2020-08-07 11:12:03.484 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:2A977C5AB665D62A6AB2966BB1F29719
2020-08-07 11:12:06.836 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:12:06 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:12:06.950 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:12:06 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:12:06.968 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:12:06 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:12:07.493 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:12:07 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:12:07.699 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:12:07 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T11:12:07.647+0800' WHERE (USERNAME = 'admin');
2020-08-07 11:12:07.722 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:12:07 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 11:12:07.727 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:12:07 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:12:07.733 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:12:07 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:12:07.741 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:12:07 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 11:12:07.748 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:12:07 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 11:12:09.792 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:12:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:12:09.807 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:12:09 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:12:10.027 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:12:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:12:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:12:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:12:10.107 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:12:10.111 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：84 毫秒
2020-08-07 11:12:10.116 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 84, '2020-08-07T11:12:10.027+0800');
2020-08-07 11:12:11.215 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:12:11 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:12:11.232 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:12:11 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:12:11.246 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:12:11 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:13:39.797 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769911600_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 11:13:43.779 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769911600_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:14:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:14:00.033 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:14:00.023+0800');
2020-08-07 11:14:10.026 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:14:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:14:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:14:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:14:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:14:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:14:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:14:10.085 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-07 11:14:10.091 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:14:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 59, '2020-08-07T11:14:10.026+0800');
2020-08-07 11:14:19.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769911600_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:14:31.747 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:14:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:14:31.844 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:14:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:14:31.847 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:14:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:14:33.744 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:14:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:14:33.749 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:14:33 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:14:33.756 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:14:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:15:40.772 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:15:40.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769911600_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:15:40.781 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 11:15:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-07T11:15:40.772+0800');
2020-08-07 11:16:00.026 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:16:00.037 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 11:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:16:00.026+0800');
2020-08-07 11:16:10.026 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:16:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:16:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:16:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:16:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:16:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:16:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:16:10.081 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-07 11:16:10.087 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 11:16:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-07T11:16:10.026+0800');
2020-08-07 11:16:13.088 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596769911600_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:16:47.106 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596769911600 paused.
2020-08-07 11:16:47.126 febs [Thread-34] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:16:47.133 febs [Thread-34] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 11:16:47.133 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596769911600 shutting down.
2020-08-07 11:16:47.133 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596769911600 paused.
2020-08-07 11:16:47.134 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596769911600 shutdown complete.
2020-08-07 11:16:47.141 febs [Thread-34] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 11:16:47.142 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 11:16:47.148 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 11:16:54.855 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 1508 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 11:16:54.859 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 11:16:56.751 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 11:16:56.755 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 11:16:56.839 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65ms. Found 0 repository interfaces.
2020-08-07 11:16:57.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eb7be202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.822 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.834 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$81ed7131] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.869 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$65e5e860] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.925 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1a9b396b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.940 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@66715ca9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3f6fdc1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:57.957 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:16:58.458 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 11:16:58.478 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 11:16:58.488 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 11:16:58.488 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 11:16:58.496 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 11:16:58.626 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 11:16:58.627 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3698 ms
2020-08-07 11:16:59.154 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 11:16:59.165 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 11:16:59.741 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 11:16:59.741 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 11:16:59.741 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 11:16:59.741 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 11:17:00.430 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 11:17:03.373 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 11:17:03.421 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 11:17:03.438 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 11:17:03.439 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 11:17:03.447 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 11:17:03.449 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 11:17:03.450 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596770223423'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 11:17:03.450 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 11:17:03.450 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 11:17:03.452 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2bb84aa5
2020-08-07 11:17:03.569 febs [main] INFO  p6spy - 2020-08-07 11:17:03 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 11:17:06.206 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 11:17:06.690 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 11:17:06.690 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 11:17:06.690 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:17:06.690 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 11:17:06.691 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 11:17:06.801 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@df5f657, org.springframework.security.web.context.SecurityContextPersistenceFilter@34766f4b, org.springframework.security.web.header.HeaderWriterFilter@32da6cef, org.springframework.security.web.authentication.logout.LogoutFilter@a165c11, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5ee76cf2, org.springframework.security.web.session.ConcurrentSessionFilter@580c4c0b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6600d07d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36a25457, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4fce655d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68908be7, org.springframework.security.web.session.SessionManagementFilter@3545c913, org.springframework.security.web.access.ExceptionTranslationFilter@3a2881d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49616310]
2020-08-07 11:17:06.860 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 11:17:06.879 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 11:17:06.880 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:17:07.489 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 11:17:08.523 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 11:17:08.541 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 11:17:08.632 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 11:17:08.656 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 11:17:08.672 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 11:17:08.718 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 11:17:08.723 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.833 seconds (JVM running for 16.21)
2020-08-07 11:17:08.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 11:17:08.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 11:17:08.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 11:17:08.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 11:17:08.754 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 11:17:09.565 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 11:17:09.565 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 11:17:09.632 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 67 ms
2020-08-07 11:17:09.657 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 11:17:09.693 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-07 11:17:09 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-07 11:17:09.700 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 11:17:09.700 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596769911600"'s failed in-progress jobs.
2020-08-07 11:17:09.709 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770223423 started.
2020-08-07 11:17:09.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770223423_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:17:09.777 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:17:09.861 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:17:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T11:17:09.777+0800');
2020-08-07 11:17:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:17:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:17:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:17:10.117 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:17:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:17:10.158 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:17:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:17:10.161 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：144 毫秒
2020-08-07 11:17:10.166 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:17:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 144, '2020-08-07T11:17:10.017+0800');
2020-08-07 11:17:15.935 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:EF4D35339D8876BDB9B49346090F965F
2020-08-07 11:17:18.715 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:17:18 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:17:18.833 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:17:18 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:17:18.857 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:17:18 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:17:18.944 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:17:18 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:17:18.955 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:17:18 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:17:18.962 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:17:18 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:17:19.075 febs [http-nio-8099-exec-5] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:20EB401A44991F9522024259B39EBDFA
2020-08-07 11:17:21.447 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:17:21 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:17:21.455 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:17:21 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:17:21.463 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:17:21 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:17:21.714 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770223423_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:17:22.008 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:17:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:17:22.177 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:17:22 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T11:17:22.160+0800' WHERE (USERNAME = 'admin');
2020-08-07 11:17:22.191 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:17:22 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 11:17:22.196 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:17:22 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:17:22.201 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:17:22 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:17:22.208 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:17:22 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 11:17:22.213 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:17:22 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 11:17:23.445 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:17:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:17:23.463 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:17:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:17:24.319 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:17:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:17:24.334 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:17:24.344 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:17:24 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:18:00.031 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:18:00.041 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:18:00.031+0800');
2020-08-07 11:18:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:18:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:18:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:18:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:18:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:18:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:18:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:18:10.078 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：57 毫秒
2020-08-07 11:18:10.084 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:18:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 57, '2020-08-07T11:18:10.021+0800');
2020-08-07 11:18:21.718 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770223423_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:18:50.084 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770223423 paused.
2020-08-07 11:18:50.098 febs [Thread-34] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:18:50.103 febs [Thread-34] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 11:18:50.103 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770223423 shutting down.
2020-08-07 11:18:50.103 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770223423 paused.
2020-08-07 11:18:50.104 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770223423 shutdown complete.
2020-08-07 11:18:50.112 febs [Thread-34] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 11:18:50.112 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 11:18:50.118 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 11:18:57.483 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16760 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 11:18:57.487 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 11:18:59.384 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 11:18:59.387 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 11:18:59.481 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79ms. Found 0 repository interfaces.
2020-08-07 11:19:00.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7895abb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f073ae7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.538 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$f2ffb216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.594 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a7b50321] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6ce2e079' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cc89a5d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:00.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:19:01.105 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 11:19:01.125 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 11:19:01.137 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 11:19:01.138 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 11:19:01.146 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 11:19:01.285 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 11:19:01.285 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3717 ms
2020-08-07 11:19:01.809 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 11:19:01.850 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 11:19:02.499 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 11:19:02.500 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 11:19:02.500 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 11:19:02.500 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 11:19:03.240 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 11:19:06.028 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 11:19:06.073 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 11:19:06.114 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 11:19:06.115 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 11:19:06.119 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 11:19:06.121 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 11:19:06.122 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596770346074'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 11:19:06.122 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 11:19:06.122 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 11:19:06.124 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1812b564
2020-08-07 11:19:06.230 febs [main] INFO  p6spy - 2020-08-07 11:19:06 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 11:19:08.879 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 11:19:09.278 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 11:19:09.279 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 11:19:09.428 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66ce4b4, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f7a7ce6, org.springframework.security.web.header.HeaderWriterFilter@a4388f1, org.springframework.security.web.authentication.logout.LogoutFilter@247d44b4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@58e0d1ac, org.springframework.security.web.session.ConcurrentSessionFilter@5a2297d7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d8512e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10c67c1c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5cbebfba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58df2864, org.springframework.security.web.session.SessionManagementFilter@4cbd17b3, org.springframework.security.web.access.ExceptionTranslationFilter@108d59b6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@288e50c1]
2020-08-07 11:19:09.505 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 11:19:09.525 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 11:19:09.527 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:19:10.136 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 11:19:11.172 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 11:19:11.191 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 11:19:11.321 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 11:19:11.357 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 11:19:11.375 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 11:19:11.420 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 11:19:11.425 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.898 seconds (JVM running for 16.179)
2020-08-07 11:19:11.456 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 11:19:11.456 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 11:19:11.456 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 11:19:11.456 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 11:19:11.456 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 11:19:12.330 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 11:19:12.330 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 11:19:12.352 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-07 11:19:12.353 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 11:19:12 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 11:19:12.359 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 11:19:12.372 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 11:19:12.372 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596770223423"'s failed in-progress jobs.
2020-08-07 11:19:12.380 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770346074 started.
2020-08-07 11:19:12.389 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770346074_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 11:19:12.492 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770346074_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:19:17.775 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:AA6F4A94183FCF682BF72F3DF95C18E3
2020-08-07 11:19:20.728 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:19:20 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:19:20.842 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:19:20 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:19:20.865 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:19:20 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:19:21.440 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:19:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:19:21.640 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:19:21 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T11:19:21.583+0800' WHERE (USERNAME = 'admin');
2020-08-07 11:19:21.666 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:19:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 11:19:21.671 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:19:21 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:19:21.675 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:19:21 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:19:21.684 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:19:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 11:19:21.689 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:19:21 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 11:19:22.965 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:19:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:19:22.982 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:19:22 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:19:25.271 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:19:25 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:19:25.289 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:19:25 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:19:25.303 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:19:25 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:20:00.047 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:20:00.071 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 3, '2020-08-07T11:20:00.047+0800');
2020-08-07 11:20:10.027 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:20:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:20:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:20:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:20:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:20:10.112 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:20:10.116 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：89 毫秒
2020-08-07 11:20:10.123 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:20:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 89, '2020-08-07T11:20:10.027+0800');
2020-08-07 11:20:12.492 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770346074_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:21:00.028 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:21:00.037 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:21:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:21:00.028+0800');
2020-08-07 11:21:10.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:21:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:21:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:21:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:21:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:21:10.110 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:21:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:21:10.114 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：89 毫秒
2020-08-07 11:21:10.118 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:21:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 89, '2020-08-07T11:21:10.025+0800');
2020-08-07 11:21:12.494 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770346074_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:22:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:22:00.032 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 11:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:22:00.025+0800');
2020-08-07 11:22:10.024 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:22:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:22:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:22:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:22:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:22:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:22:10.072 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 11:22:10.078 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 11:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T11:22:10.024+0800');
2020-08-07 11:22:12.497 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770346074_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:23:00.018 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:23:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 11:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:23:00.018+0800');
2020-08-07 11:23:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:23:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:23:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:23:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:23:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:23:10.100 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:23:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:23:10.104 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-07 11:23:10.109 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 11:23:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-08-07T11:23:10.050+0800');
2020-08-07 11:23:12.498 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770346074_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:24:00.054 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:24:00.060 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 11:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:24:00.054+0800');
2020-08-07 11:24:10.214 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:24:10.253 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:24:10 | 耗时 15 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:24:10.262 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:24:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:24:10.307 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:24:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:24:10.310 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：96 毫秒
2020-08-07 11:24:10.315 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 11:24:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 96, '2020-08-07T11:24:10.214+0800');
2020-08-07 11:24:11.375 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770346074 paused.
2020-08-07 11:24:11.387 febs [Thread-35] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:24:11.391 febs [Thread-35] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 11:24:11.391 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770346074 shutting down.
2020-08-07 11:24:11.391 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770346074 paused.
2020-08-07 11:24:11.392 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770346074 shutdown complete.
2020-08-07 11:24:11.399 febs [Thread-35] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 11:24:11.399 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 11:24:11.405 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 11:24:19.413 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17564 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 11:24:19.419 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 11:24:21.369 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 11:24:21.372 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 11:24:21.461 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71ms. Found 0 repository interfaces.
2020-08-07 11:24:22.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c3c3cc91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.460 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5a355bc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.496 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3e2dd2ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f2e323fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.559 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4beae1e3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.564 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$17b7c6ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:22.571 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:24:23.050 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 11:24:23.069 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 11:24:23.081 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 11:24:23.082 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 11:24:23.091 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 11:24:23.229 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 11:24:23.229 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3724 ms
2020-08-07 11:24:23.764 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 11:24:23.775 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 11:24:24.398 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 11:24:24.398 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 11:24:24.398 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 11:24:24.398 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 11:24:25.095 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 11:24:27.785 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 11:24:27.846 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 11:24:27.865 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 11:24:27.865 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 11:24:27.870 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 11:24:27.872 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 11:24:27.873 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596770667847'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 11:24:27.873 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 11:24:27.873 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 11:24:27.874 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@58e4aa67
2020-08-07 11:24:27.992 febs [main] INFO  p6spy - 2020-08-07 11:24:27 | 耗时 2 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 11:24:30.726 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 11:24:31.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 11:24:31.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 11:24:31.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:24:31.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 11:24:31.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 11:24:31.104 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 11:24:31.105 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 11:24:31.105 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 11:24:31.105 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 11:24:31.105 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 11:24:31.105 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 11:24:31.105 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 11:24:31.193 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22c0c0bc, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f70015, org.springframework.security.web.header.HeaderWriterFilter@26a004ed, org.springframework.security.web.authentication.logout.LogoutFilter@1a3272e0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3284de45, org.springframework.security.web.session.ConcurrentSessionFilter@341141ab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@613f48de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4eb3b690, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4fccdd1d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36a25457, org.springframework.security.web.session.SessionManagementFilter@75b6bd41, org.springframework.security.web.access.ExceptionTranslationFilter@36bd07ec, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29088d3d]
2020-08-07 11:24:31.271 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 11:24:31.293 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 11:24:31.296 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:24:31.838 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 11:24:32.801 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 11:24:32.821 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 11:24:32.908 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 11:24:32.934 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 11:24:32.949 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 11:24:32.991 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 11:24:32.996 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 14.566 seconds (JVM running for 15.917)
2020-08-07 11:24:33.028 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 11:24:33.028 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 11:24:33.028 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 11:24:33.028 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 11:24:33.028 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 11:24:33.595 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 11:24:33.595 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 11:24:33.618 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 11:24:33 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 11:24:33.620 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 25 ms
2020-08-07 11:24:33.936 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 11:24:33.948 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 11:24:33.948 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596770346074"'s failed in-progress jobs.
2020-08-07 11:24:33.965 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770667847 started.
2020-08-07 11:24:33.971 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:24:37.573 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:2EFFD9AE8633A72B369FDA073AAFA46B
2020-08-07 11:24:40.982 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:24:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:24:41.093 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:24:41.114 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:24:41.643 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:24:41.852 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T11:24:41.792+0800' WHERE (USERNAME = 'admin');
2020-08-07 11:24:41.875 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 11:24:41.882 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:24:41.885 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:24:41.893 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 11:24:41.900 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:24:41 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 11:24:43.158 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:24:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:24:43.176 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:24:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:24:44.144 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:24:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:24:44.162 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:24:44 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:24:44.175 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:24:44 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:25:00.049 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:25:00.074 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 6, '2020-08-07T11:25:00.048+0800');
2020-08-07 11:25:10.033 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:25:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:25:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:25:10.079 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:25:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:25:10.135 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:25:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:25:10.138 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：105 毫秒
2020-08-07 11:25:10.145 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:25:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 105, '2020-08-07T11:25:10.033+0800');
2020-08-07 11:25:21.973 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:26:00.030 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:26:00.038 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:26:00.030+0800');
2020-08-07 11:26:10.024 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:26:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:26:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:26:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:26:10.074 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：50 毫秒
2020-08-07 11:26:10.080 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:26:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 50, '2020-08-07T11:26:10.024+0800');
2020-08-07 11:26:21.974 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:27:00.030 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:27:00.038 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 11:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:27:00.030+0800');
2020-08-07 11:27:10.024 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:27:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:27:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:27:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:27:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:27:10.075 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:27:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:27:10.079 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-07 11:27:10.087 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 11:27:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-07T11:27:10.024+0800');
2020-08-07 11:27:21.975 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:28:00.029 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:28:00.045 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 11:28:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-07T11:28:00.029+0800');
2020-08-07 11:28:10.048 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:28:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:28:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:28:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:28:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:28:10.104 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:28:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:28:10.107 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-07 11:28:10.113 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 11:28:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 59, '2020-08-07T11:28:10.048+0800');
2020-08-07 11:28:21.977 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:29:00.051 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:29:00.058 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 11:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:29:00.050+0800');
2020-08-07 11:29:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:29:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:29:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:29:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:29:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:29:10.072 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：51 毫秒
2020-08-07 11:29:10.078 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 11:29:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 51, '2020-08-07T11:29:10.021+0800');
2020-08-07 11:29:21.979 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:30:00.027 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:30:00.036 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 11:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:30:00.027+0800');
2020-08-07 11:30:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:30:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:30:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:30:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:30:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:30:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:30:10.075 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-07 11:30:10.081 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 11:30:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 53, '2020-08-07T11:30:10.022+0800');
2020-08-07 11:30:21.984 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:31:00.028 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:31:00.035 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 11:31:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:31:00.028+0800');
2020-08-07 11:31:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:31:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:31:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:31:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:31:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:31:10.072 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:31:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:31:10.075 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：54 毫秒
2020-08-07 11:31:10.080 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 11:31:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 54, '2020-08-07T11:31:10.021+0800');
2020-08-07 11:31:21.989 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:32:00.050 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:32:00.057 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 11:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:32:00.050+0800');
2020-08-07 11:32:10.025 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:32:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:32:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:32:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:32:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:32:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:32:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:32:10.082 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：60 毫秒
2020-08-07 11:32:10.088 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 11:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 60, '2020-08-07T11:32:10.022+0800');
2020-08-07 11:32:21.993 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:33:00.025 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:33:00.032 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 11:33:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:33:00.025+0800');
2020-08-07 11:33:10.023 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:33:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:33:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:33:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:33:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:33:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:33:10.071 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 11:33:10.075 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 11:33:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T11:33:10.023+0800');
2020-08-07 11:33:21.996 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:34:00.025 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:34:00.034 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 11:34:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:34:00.025+0800');
2020-08-07 11:34:10.023 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:34:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:34:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:34:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:34:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:34:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:34:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:34:10.072 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 11:34:10.078 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 11:34:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T11:34:10.023+0800');
2020-08-07 11:34:22.069 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596770667847_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:34:25.087 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770667847 paused.
2020-08-07 11:34:25.100 febs [Thread-34] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:34:25.105 febs [Thread-34] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 11:34:25.105 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770667847 shutting down.
2020-08-07 11:34:25.105 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770667847 paused.
2020-08-07 11:34:25.106 febs [Thread-34] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596770667847 shutdown complete.
2020-08-07 11:34:25.112 febs [Thread-34] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 11:34:25.113 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 11:34:25.118 febs [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 11:34:35.279 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 15680 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 11:34:35.283 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 11:34:37.577 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 11:34:37.580 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 11:34:37.657 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58ms. Found 0 repository interfaces.
2020-08-07 11:34:38.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.791 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a5e18985] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.808 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.825 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3c5318b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$204b8fe3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.932 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d500e0ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6ac756b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.952 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f9d583a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:38.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 11:34:39.481 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 11:34:39.510 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 11:34:39.520 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 11:34:39.520 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 11:34:39.530 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 11:34:39.686 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 11:34:39.686 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4308 ms
2020-08-07 11:34:40.195 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 11:34:40.204 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 11:34:40.799 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 11:34:40.799 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 11:34:40.799 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 11:34:40.799 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 11:34:41.502 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 11:34:44.248 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 11:34:44.298 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 11:34:44.319 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 11:34:44.319 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 11:34:44.325 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 11:34:44.328 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 11:34:44.329 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596771284300'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 11:34:44.329 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 11:34:44.329 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 11:34:44.331 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3fd21272
2020-08-07 11:34:44.436 febs [main] INFO  p6spy - 2020-08-07 11:34:44 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 11:34:46.908 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 11:34:47.270 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 11:34:47.270 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 11:34:47.270 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:34:47.270 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 11:34:47.271 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 11:34:47.272 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 11:34:47.272 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 11:34:47.272 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 11:34:47.272 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 11:34:47.272 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 11:34:47.272 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 11:34:47.272 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 11:34:47.418 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3903cfc9, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a7f382, org.springframework.security.web.header.HeaderWriterFilter@615b1baf, org.springframework.security.web.authentication.logout.LogoutFilter@3f7f9d3f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6c75c5e8, org.springframework.security.web.session.ConcurrentSessionFilter@3687b83c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52e34db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@118f39f3, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@39c93af6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b1b1784, org.springframework.security.web.session.SessionManagementFilter@65dafe50, org.springframework.security.web.access.ExceptionTranslationFilter@70ebaa1e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5e8bc83e]
2020-08-07 11:34:47.509 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 11:34:47.539 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 11:34:47.542 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 11:34:48.111 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 11:34:49.143 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 11:34:49.172 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 11:34:49.285 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 11:34:49.311 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 11:34:49.327 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 11:34:49.369 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 11:34:49.377 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 15.364 seconds (JVM running for 16.812)
2020-08-07 11:34:49.417 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 11:34:49.418 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 11:34:49.418 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 11:34:49.418 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 11:34:49.418 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 11:34:49.924 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 11:34:49.924 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 11:34:49.945 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-07 11:34:49.946 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 11:34:49 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-07 11:34:50.312 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 11:34:50.328 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 11:34:50.328 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596770667847"'s failed in-progress jobs.
2020-08-07 11:34:50.340 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596771284300 started.
2020-08-07 11:34:50.353 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:35:00.054 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:35:00.122 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T11:35:00.054+0800');
2020-08-07 11:35:05.503 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:41BBD38A82E4F7B254B189C690FFD073
2020-08-07 11:35:10.029 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:35:10.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:35:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:35:10.131 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:35:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:35:10.172 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:35:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:35:10.175 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：146 毫秒
2020-08-07 11:35:10.180 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:35:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 146, '2020-08-07T11:35:10.029+0800');
2020-08-07 11:35:14.351 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:35:55.427 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:263D7181A0E9B887DA263AECCEFB1887
2020-08-07 11:35:58.945 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:35:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 11:35:59.096 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 11:35:59.113 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 11:35:59.705 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:35:59.878 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T11:35:59.862+0800' WHERE (USERNAME = 'admin');
2020-08-07 11:35:59.900 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 11:35:59.905 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:35:59.911 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 11:35:59.921 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 11:35:59.928 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:35:59 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 11:36:00.016 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:36:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:36:00.016+0800');
2020-08-07 11:36:02.419 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:36:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:36:02.438 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:36:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:36:03.505 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:36:03 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:36:03.523 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:36:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:36:03.536 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:36:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:36:10.027 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:36:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:36:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:36:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:36:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:36:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:36:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:36:10.083 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-07 11:36:10.090 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:36:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 56, '2020-08-07T11:36:10.027+0800');
2020-08-07 11:36:13.121 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:36:13 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 11:36:13.128 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:36:13 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 11:36:13.138 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:36:13 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 1, 1, '1', '2020-08-07T11:36:13.133', '1', '2020-08-07T11:36:13.133');
2020-08-07 11:36:13.157 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:36:13 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 11:36:13.162 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:36:13 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 3, 1, '1', '2020-08-07T11:36:13.158', '1', '2020-08-07T11:36:13.158');
2020-08-07 11:36:14.353 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:36:34.701 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:36:34 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:36:34.706 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:36:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:36:34.711 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:36:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:37:00.018 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:37:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 11:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:37:00.018+0800');
2020-08-07 11:37:10.025 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:37:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:37:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:37:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:37:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:37:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:37:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:37:10.081 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-07 11:37:10.090 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 11:37:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 56, '2020-08-07T11:37:10.025+0800');
2020-08-07 11:37:14.356 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:38:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:38:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 11:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:38:00.020+0800');
2020-08-07 11:38:10.024 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:38:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:38:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:38:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:38:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:38:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:38:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:38:10.085 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：61 毫秒
2020-08-07 11:38:10.090 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 11:38:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 61, '2020-08-07T11:38:10.024+0800');
2020-08-07 11:38:14.357 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:39:00.026 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:39:00.037 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 11:39:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T11:39:00.026+0800');
2020-08-07 11:39:10.013 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:39:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:39:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:39:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:39:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:39:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:39:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:39:10.071 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-07 11:39:10.077 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 11:39:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-08-07T11:39:10.013+0800');
2020-08-07 11:39:14.359 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:39:18.709 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:39:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:39:18.778 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:39:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:39:18.780 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:39:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:39:19.470 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:39:19 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:39:19.521 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:39:19 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:39:19.524 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:39:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:39:20.446 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:39:20 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:39:24.313 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:39:24 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:39:24.320 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:39:24 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:39:24.325 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:39:24 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:39:29.361 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:39:29 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:39:29.366 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:39:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:39:29.373 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:39:29 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:39:32.758 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:39:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:39:32.815 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:39:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:39:32.817 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:39:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:39:33.090 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:39:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:39:33.131 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:39:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:39:33.134 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:39:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:39:33.787 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:39:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:39:33.798 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:39:33 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:39:33.804 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:39:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:40:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:40:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 11:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:40:00.018+0800');
2020-08-07 11:40:10.024 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:40:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:40:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:40:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:40:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:40:10.076 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 11:40:10.082 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 11:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 52, '2020-08-07T11:40:10.024+0800');
2020-08-07 11:40:14.363 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:40:38.570 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:40:38 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 11:40:50.161 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:40:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:41:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:41:00.028 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 11:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-07T11:41:00.017+0800');
2020-08-07 11:41:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:41:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:41:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:41:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:41:10.062 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 11:41:10.067 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 11:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T11:41:10.019+0800');
2020-08-07 11:41:10.593 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:41:10.597 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:41:10.601 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:41:12.358 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:41:12 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:41:12.529 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:41:12 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:41:12.590 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:41:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:41:12.593 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:41:12 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:41:12.988 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:41:12 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:41:13.040 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:41:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:41:13.043 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:41:13 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:41:13.209 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 11:41:13 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:41:13.245 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:41:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:41:13.248 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:41:13 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:41:14.214 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:41:14 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:41:14.219 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:41:14 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:41:14.224 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:41:14 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:41:14.364 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:41:17.992 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:41:17 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:41:18.285 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:41:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:41:18.351 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:41:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:41:18.354 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:41:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:41:19.935 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:41:19 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:41:19.941 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:41:19 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:41:19.945 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:41:19 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:42:00.028 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:42:00.035 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 11:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:42:00.028+0800');
2020-08-07 11:42:10.025 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:42:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:42:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:42:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:42:10.082 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:42:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:42:10.086 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：61 毫秒
2020-08-07 11:42:10.090 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 11:42:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 61, '2020-08-07T11:42:10.025+0800');
2020-08-07 11:42:14.368 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:42:16.220 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:42:16 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:42:16.302 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:42:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:42:16.304 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:42:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:42:28.285 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:42:28 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:42:28.392 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:42:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:42:28.396 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:42:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:42:30.539 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:42:30 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 11:42:30.592 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:42:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 11:42:30.594 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:42:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 11:42:31.592 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:42:31 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:42:31.598 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:42:31 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:42:31.605 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:42:31 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:42:37.175 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:42:37 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:42:37.180 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:42:37 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:42:37.186 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:42:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:42:37.195 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:42:37 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:42:37.201 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:42:37 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:42:37.206 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:42:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:42:45.912 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:42:45 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:42:45.918 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:42:45 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:42:45.924 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:42:45 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:42:52.121 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:42:52 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:42:52.125 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:42:52.130 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:42:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:42:54.728 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:42:54 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:42:54.734 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:42:54 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:42:54.740 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 11:42:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:43:00.017 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:43:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 11:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:43:00.017+0800');
2020-08-07 11:43:01.258 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:43:01 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 11:43:01.265 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 11:43:01 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 11:43:03.100 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:43:03 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:43:03.107 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:43:03 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:43:03.113 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 11:43:03 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:43:03.117 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:43:03 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:43:03.121 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:43:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:43:03.127 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 11:43:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:43:08.219 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:43:08 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:43:08.223 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:43:08 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:43:08.227 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 11:43:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:43:08.227 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:43:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:43:08.231 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:43:08 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:43:08.236 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 11:43:08 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:43:10.024 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:43:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:43:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:43:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:43:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:43:10.093 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：69 毫秒
2020-08-07 11:43:10.098 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 11:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 69, '2020-08-07T11:43:10.024+0800');
2020-08-07 11:43:10.468 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:43:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:43:10.473 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:43:10.478 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 11:43:10 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:43:14.370 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:43:19.690 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 11:43:19 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 11:43:35.743 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:43:35 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 11:43:35.748 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:43:35 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 11:43:35.753 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 11:43:35 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 11:44:00.050 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:44:00.058 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 11:44:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:44:00.050+0800');
2020-08-07 11:44:10.023 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:44:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:44:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:44:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:44:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:44:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:44:10.071 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 11:44:10.077 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 11:44:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T11:44:10.023+0800');
2020-08-07 11:44:14.373 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:45:00.016 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:45:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-07T11:45:00.015+0800');
2020-08-07 11:45:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:45:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:45:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:45:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:45:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:45:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:45:10.068 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 11:45:10.073 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:45:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T11:45:10.020+0800');
2020-08-07 11:45:14.376 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:46:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:46:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:46:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:46:00.024+0800');
2020-08-07 11:46:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:46:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:46:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:46:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:46:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:46:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:46:10.070 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 11:46:10.075 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:46:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T11:46:10.021+0800');
2020-08-07 11:46:14.381 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:47:00.053 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:47:00.061 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 11:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:47:00.053+0800');
2020-08-07 11:47:10.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:47:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:47:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:47:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:47:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:47:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:47:10.067 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 11:47:10.071 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 11:47:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T11:47:10.022+0800');
2020-08-07 11:47:14.383 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:48:00.047 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:48:00.054 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 11:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:48:00.047+0800');
2020-08-07 11:48:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:48:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:48:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:48:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:48:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:48:10.068 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 11:48:10.075 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 11:48:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T11:48:10.020+0800');
2020-08-07 11:48:14.387 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:49:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:49:00.029 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 11:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:49:00.023+0800');
2020-08-07 11:49:10.011 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:49:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:49:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:49:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:49:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:49:10.067 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:49:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:49:10.071 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：60 毫秒
2020-08-07 11:49:10.077 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 11:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 60, '2020-08-07T11:49:10.011+0800');
2020-08-07 11:49:14.389 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:50:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:50:00.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 11:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:50:00.025+0800');
2020-08-07 11:50:10.013 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:50:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:50:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:50:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:50:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:50:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:50:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:50:10.062 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 11:50:10.067 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 11:50:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T11:50:10.013+0800');
2020-08-07 11:50:14.390 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:51:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:51:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 11:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:51:00.025+0800');
2020-08-07 11:51:10.022 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:51:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:51:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:51:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:51:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:51:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:51:10.068 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 11:51:10.075 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 11:51:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T11:51:10.022+0800');
2020-08-07 11:51:14.390 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:52:00.050 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:52:00.057 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 11:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:52:00.050+0800');
2020-08-07 11:52:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:52:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:52:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:52:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:52:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:52:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:52:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:52:10.094 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 11:52:10.099 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 11:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T11:52:10.046+0800');
2020-08-07 11:52:14.392 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:53:00.049 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:53:00.056 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 11:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:53:00.049+0800');
2020-08-07 11:53:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:53:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:53:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:53:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:53:10.091 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:53:10.094 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 11:53:10.099 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 11:53:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T11:53:10.047+0800');
2020-08-07 11:53:14.395 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:54:00.050 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:54:00.056 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 11:54:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:54:00.050+0800');
2020-08-07 11:54:10.022 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:54:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:54:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:54:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:54:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:54:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:54:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:54:10.069 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 11:54:10.075 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 11:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 47, '2020-08-07T11:54:10.022+0800');
2020-08-07 11:54:14.399 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:55:00.027 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:55:00.034 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 11:55:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:55:00.027+0800');
2020-08-07 11:55:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:55:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:55:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:55:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:55:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:55:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:55:10.069 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 11:55:10.074 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 11:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T11:55:10.022+0800');
2020-08-07 11:55:14.400 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:56:00.048 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:56:00.055 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 11:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:56:00.048+0800');
2020-08-07 11:56:10.047 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:56:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:56:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:56:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:56:10.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:56:10.092 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 11:56:10.096 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 11:56:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T11:56:10.047+0800');
2020-08-07 11:56:14.405 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:57:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:57:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 11:57:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:57:00.024+0800');
2020-08-07 11:57:10.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:57:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:57:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:57:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:57:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:57:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:57:10.068 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 11:57:10.073 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 11:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T11:57:10.022+0800');
2020-08-07 11:57:14.406 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:58:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:58:00.029 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 11:58:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T11:58:00.023+0800');
2020-08-07 11:58:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:58:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:58:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:58:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:58:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:58:10.067 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 11:58:10.072 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 11:58:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T11:58:10.021+0800');
2020-08-07 11:58:14.408 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 11:59:00.024 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 11:59:00.031 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 11:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T11:59:00.024+0800');
2020-08-07 11:59:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 11:59:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 11:59:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:59:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 11:59:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 11:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 11:59:10.068 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 11:59:10.073 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 11:59:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T11:59:10.021+0800');
2020-08-07 11:59:14.410 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:00:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:00:00.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 12:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:00:00.024+0800');
2020-08-07 12:00:10.011 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:00:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:00:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:00:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:00:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:00:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:00:10.057 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 12:00:10.062 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 12:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T12:00:10.011+0800');
2020-08-07 12:00:14.413 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:01:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:01:00.032 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 12:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:01:00.025+0800');
2020-08-07 12:01:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:01:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:01:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:01:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:01:10.091 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:01:10.094 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 12:01:10.099 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 12:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T12:01:10.046+0800');
2020-08-07 12:01:14.415 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:02:00.048 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:02:00.054 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 12:02:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:02:00.048+0800');
2020-08-07 12:02:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:02:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:02:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:02:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:02:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:02:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:02:10.068 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 12:02:10.073 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 12:02:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 48, '2020-08-07T12:02:10.020+0800');
2020-08-07 12:02:14.418 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:03:00.024 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:03:00.032 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 12:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T12:03:00.024+0800');
2020-08-07 12:03:10.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:03:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:03:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:03:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:03:10.092 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:03:10.096 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 12:03:10.101 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 12:03:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T12:03:10.048+0800');
2020-08-07 12:03:14.419 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:04:00.023 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:04:00.030 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 12:04:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T12:04:00.023+0800');
2020-08-07 12:04:10.021 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:04:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:04:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:04:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:04:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:04:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:04:10.070 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 12:04:10.075 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 12:04:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T12:04:10.021+0800');
2020-08-07 12:04:14.421 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:05:00.048 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:05:00.055 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 12:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:05:00.048+0800');
2020-08-07 12:05:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:05:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:05:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:05:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:05:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:05:10.066 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:05:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:05:10.070 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：48 毫秒
2020-08-07 12:05:10.075 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 12:05:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 48, '2020-08-07T12:05:10.022+0800');
2020-08-07 12:05:14.423 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:05:41.736 febs [Catalina-utility-1] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:41BBD38A82E4F7B254B189C690FFD073
2020-08-07 12:06:00.049 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:06:00.055 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 12:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:06:00.049+0800');
2020-08-07 12:06:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:06:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:06:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:06:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:06:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:06:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:06:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:06:10.065 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：49 毫秒
2020-08-07 12:06:10.070 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 12:06:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 49, '2020-08-07T12:06:10.016+0800');
2020-08-07 12:06:14.424 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:07:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:07:00.032 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 12:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:07:00.025+0800');
2020-08-07 12:07:10.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:07:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:07:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:07:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:07:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:07:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:07:10.067 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 12:07:10.073 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 12:07:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T12:07:10.022+0800');
2020-08-07 12:07:14.427 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:08:00.048 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:08:00.053 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 12:08:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:08:00.048+0800');
2020-08-07 12:08:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:08:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:08:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:08:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:08:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:08:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:08:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:08:10.068 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 12:08:10.073 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 12:08:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 46, '2020-08-07T12:08:10.022+0800');
2020-08-07 12:08:14.430 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:09:00.050 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:09:00.056 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 12:09:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:09:00.050+0800');
2020-08-07 12:09:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:09:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:09:10.060 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:09:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:09:10.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:09:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:09:10.092 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 12:09:10.098 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 12:09:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T12:09:10.047+0800');
2020-08-07 12:09:14.432 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:10:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:10:00.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 12:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T12:10:00.024+0800');
2020-08-07 12:10:10.021 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:10:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:10:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:10:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:10:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:10:10.063 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:10:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:10:10.066 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 12:10:10.070 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 12:10:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T12:10:10.021+0800');
2020-08-07 12:10:14.435 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:11:00.025 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:11:00.031 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 12:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:11:00.025+0800');
2020-08-07 12:11:10.022 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:11:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:11:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:11:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:11:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:11:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:11:10.068 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：46 毫秒
2020-08-07 12:11:10.074 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 12:11:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 46, '2020-08-07T12:11:10.022+0800');
2020-08-07 12:11:14.438 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:12:00.052 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:12:00.057 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 12:12:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:12:00.052+0800');
2020-08-07 12:12:10.015 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:12:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:12:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:12:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:12:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:12:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:12:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:12:10.060 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 12:12:10.065 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 12:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 45, '2020-08-07T12:12:10.015+0800');
2020-08-07 12:12:14.441 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:13:00.024 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:13:00.030 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 12:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:13:00.024+0800');
2020-08-07 12:13:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:13:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:13:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:13:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:13:10.089 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:13:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:13:10.092 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：47 毫秒
2020-08-07 12:13:10.098 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 12:13:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 47, '2020-08-07T12:13:10.045+0800');
2020-08-07 12:13:14.444 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:13:41.789 febs [Catalina-utility-1] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:FD57771CB08894D1A335FA7028551586
2020-08-07 12:14:00.024 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:14:00.030 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 12:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:14:00.024+0800');
2020-08-07 12:14:10.012 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:14:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:14:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:14:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:14:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:14:10.056 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：44 毫秒
2020-08-07 12:14:10.061 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 12:14:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 44, '2020-08-07T12:14:10.012+0800');
2020-08-07 12:14:14.448 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 12:14:21.800 febs [http-nio-8099-exec-7] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:07E412EF0BF381910ACD9BC86096626E
2020-08-07 12:15:00.026 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 12:15:00.033 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 12:15:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T12:15:00.026+0800');
2020-08-07 12:15:10.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 12:15:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 12:15:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:15:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 12:15:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 12:15:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 12:15:10.056 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：45 毫秒
2020-08-07 12:15:10.061 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 12:15:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 45, '2020-08-07T12:15:10.011+0800');
2020-08-07 12:15:14.449 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:35:15.724 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 13:35:15.740 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:07E412EF0BF381910ACD9BC86096626E
2020-08-07 13:35:16.332 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:35:36.402 febs [http-nio-8099-exec-8] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:FD526B93C86DD6D3F2FF175CFA0C4F0E
2020-08-07 13:35:39.533 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 13:35:39.538 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 13:35:39.544 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 13:35:39.884 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 13:35:39.921 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T13:35:39.916+0800' WHERE (USERNAME = 'admin');
2020-08-07 13:35:39.926 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 13:35:39.929 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 13:35:39.932 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 13:35:39.936 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 13:35:39.940 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:35:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 13:35:43.688 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 13:35:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 13:35:43.690 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 13:35:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 13:35:44.936 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 13:35:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 13:35:44.938 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 13:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 13:35:44.941 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 13:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 13:35:44.959 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:35:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 13:35:44.962 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 13:35:44.965 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:35:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 13:35:48.100 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 13:35:48 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 13:35:48.152 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:35:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 13:35:48.154 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:35:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 13:35:48.818 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:35:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 13:35:48.864 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 13:35:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 13:35:48.867 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 13:35:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 13:35:49.680 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 13:35:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 13:35:49.682 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 13:35:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 13:35:49.685 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 13:35:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 13:36:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:36:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 13:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:36:00.019+0800');
2020-08-07 13:36:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:36:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:36:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:36:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:36:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 13:36:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 13:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-07T13:36:10.016+0800');
2020-08-07 13:36:16.335 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:37:00.010 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:37:00.014 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 13:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:37:00.010+0800');
2020-08-07 13:37:10.007 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:37:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:37:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:37:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:37:10.033 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 13:37:10.035 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 13:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T13:37:10.007+0800');
2020-08-07 13:37:16.339 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:37:56.281 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 13:37:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 13:37:56.283 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 13:37:56 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 13:37:56.287 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 13:37:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 13:38:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:38:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 13:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:38:00.022+0800');
2020-08-07 13:38:10.006 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:38:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:38:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:38:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:38:10.031 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 13:38:10.034 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 13:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-07T13:38:10.006+0800');
2020-08-07 13:38:16.342 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:38:35.966 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:38:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 13:38:35.969 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:38:35 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 13:38:35.971 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 13:38:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 13:38:42.388 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:38:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 13:38:42.391 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:38:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 13:39:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:39:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 13:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:39:00.020+0800');
2020-08-07 13:39:05.264 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 13:39:05 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 13:39:05.267 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 13:39:05 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 13:39:05.270 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 13:39:05 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 13:39:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:39:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:39:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:39:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:39:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 13:39:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 13:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T13:39:10.019+0800');
2020-08-07 13:39:16.345 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:40:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:40:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 13:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:40:00.020+0800');
2020-08-07 13:40:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:40:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:40:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:40:10.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 13:40:10.045 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 13:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T13:40:10.016+0800');
2020-08-07 13:40:16.347 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:41:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:41:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 13:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:41:00.020+0800');
2020-08-07 13:41:10.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:41:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:41:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:41:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:41:10.032 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-07 13:41:10.035 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 13:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-07T13:41:10.008+0800');
2020-08-07 13:41:16.350 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:42:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:42:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 13:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:42:00.022+0800');
2020-08-07 13:42:10.009 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:42:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:42:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:42:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:42:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:42:10.036 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 13:42:10.039 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 13:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T13:42:10.009+0800');
2020-08-07 13:42:16.355 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:43:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:43:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 13:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:43:00.021+0800');
2020-08-07 13:43:10.017 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:43:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:43:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:43:10.044 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 13:43:10.047 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 13:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T13:43:10.017+0800');
2020-08-07 13:43:16.385 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:44:00.012 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:44:00.022 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 13:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T13:44:00.012+0800');
2020-08-07 13:44:10.007 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:44:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:44:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:44:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:44:10.040 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 13:44:10.043 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 13:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T13:44:10.007+0800');
2020-08-07 13:44:16.359 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:45:00.012 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:45:00.019 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 13:45:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T13:45:00.012+0800');
2020-08-07 13:45:10.008 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:45:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:45:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:45:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:45:10.035 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 13:45:10.038 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 13:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T13:45:10.008+0800');
2020-08-07 13:45:16.362 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:46:00.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:46:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 13:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:46:00.018+0800');
2020-08-07 13:46:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:46:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:46:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:46:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:46:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:46:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 13:46:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 13:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T13:46:10.018+0800');
2020-08-07 13:46:16.364 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:47:00.017 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:47:00.020 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 13:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:47:00.017+0800');
2020-08-07 13:47:10.006 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:47:10.009 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:47:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:47:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:47:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:47:10.034 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 13:47:10.037 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 13:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T13:47:10.006+0800');
2020-08-07 13:47:16.365 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:48:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:48:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 13:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:48:00.024+0800');
2020-08-07 13:48:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:48:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:48:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:48:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:48:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:48:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 13:48:10.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 13:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T13:48:10.018+0800');
2020-08-07 13:48:16.367 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:49:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:49:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 13:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:49:00.020+0800');
2020-08-07 13:49:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:49:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:49:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:49:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:49:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 13:49:10.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 13:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T13:49:10.017+0800');
2020-08-07 13:49:16.392 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596771284300_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:49:28.316 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596771284300 paused.
2020-08-07 13:49:28.329 febs [Thread-35] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 13:49:28.332 febs [Thread-35] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 13:49:28.332 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596771284300 shutting down.
2020-08-07 13:49:28.332 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596771284300 paused.
2020-08-07 13:49:28.334 febs [Thread-35] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596771284300 shutdown complete.
2020-08-07 13:49:28.339 febs [Thread-35] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 13:49:28.340 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 13:49:28.345 febs [Thread-35] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 13:49:37.198 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 15760 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 13:49:37.203 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 13:49:39.084 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 13:49:39.087 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 13:49:39.160 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-07 13:49:39.869 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$db835c23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71f4eb52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$55ed6281] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$aa2b38c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@63262071' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2f77563e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 13:49:40.675 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 13:49:40.692 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 13:49:40.704 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 13:49:40.704 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 13:49:40.712 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 13:49:40.842 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 13:49:40.843 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3554 ms
2020-08-07 13:49:41.308 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 13:49:41.318 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 13:49:41.862 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 13:49:41.862 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 13:49:41.862 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 13:49:41.862 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 13:49:42.479 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 13:49:44.889 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 13:49:44.931 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 13:49:44.945 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 13:49:44.945 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 13:49:44.950 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 13:49:44.953 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 13:49:44.954 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596779384932'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 13:49:44.954 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 13:49:44.954 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 13:49:44.956 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5c65fa69
2020-08-07 13:49:45.053 febs [main] INFO  p6spy - 2020-08-07 13:49:45 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 13:49:47.243 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 13:49:47.569 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 13:49:47.570 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 13:49:47.661 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7164e54, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a4c6e74, org.springframework.security.web.header.HeaderWriterFilter@4981b83, org.springframework.security.web.authentication.logout.LogoutFilter@72fa021, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4607cbe2, org.springframework.security.web.session.ConcurrentSessionFilter@7bdaf563, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51d6c42d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28705150, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3a22d69f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f36cd8f, org.springframework.security.web.session.SessionManagementFilter@2ef812b, org.springframework.security.web.access.ExceptionTranslationFilter@4110ffe5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77f95e19]
2020-08-07 13:49:47.723 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 13:49:47.743 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 13:49:47.745 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 13:49:48.258 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 13:49:49.104 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 13:49:49.123 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 13:49:49.201 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 13:49:49.227 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 13:49:49.243 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 13:49:49.286 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 13:49:49.291 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.08 seconds (JVM running for 14.427)
2020-08-07 13:49:49.326 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 13:49:49.326 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 13:49:49.326 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 13:49:49.327 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 13:49:49.327 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 13:49:49.886 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 13:49:49.886 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 13:49:49.906 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 13:49:49 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 13:49:49.909 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-08-07 13:49:50.229 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 13:49:50.249 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596779384932 started.
2020-08-07 13:49:50.255 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:49:54.785 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:0E5F263525F12A269D4EE2540461EFAB
2020-08-07 13:49:59.583 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 13:49:59 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 13:49:59.689 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 13:49:59 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 13:49:59.705 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 13:49:59 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 13:50:00.050 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:50:00.076 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T13:50:00.050+0800');
2020-08-07 13:50:00.151 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 13:50:00.377 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T13:50:00.326+0800' WHERE (USERNAME = 'admin');
2020-08-07 13:50:00.390 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 13:50:00.394 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 13:50:00.399 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 13:50:00.407 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 13:50:00.412 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 13:50:00 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 13:50:03.395 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:50:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 13:50:03.411 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 13:50:03 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 13:50:04.819 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 13:50:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 13:50:04.829 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 13:50:04 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 13:50:04.840 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 13:50:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 13:50:05.253 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 13:50:05.253 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596771284300"'s failed in-progress jobs.
2020-08-07 13:50:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:50:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:50:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:50:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:50:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:50:10.081 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：59 毫秒
2020-08-07 13:50:10.086 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 13:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 59, '2020-08-07T13:50:10.022+0800');
2020-08-07 13:50:12.387 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 13:50:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 13:50:12.394 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 13:50:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 13:50:12.398 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 13:50:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 13:50:14.254 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:51:00.025 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:51:00.035 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 13:51:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T13:51:00.025+0800');
2020-08-07 13:51:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:51:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:51:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:51:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:51:10.059 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 13:51:10.063 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 13:51:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 40, '2020-08-07T13:51:10.019+0800');
2020-08-07 13:51:14.256 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:52:00.025 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:52:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 13:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T13:52:00.025+0800');
2020-08-07 13:52:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:52:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:52:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:52:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:52:10.056 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-07 13:52:10.061 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 13:52:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-07T13:52:10.019+0800');
2020-08-07 13:52:14.258 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:53:00.049 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:53:00.055 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 13:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T13:53:00.049+0800');
2020-08-07 13:53:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:53:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:53:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:53:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:53:10.054 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 13:53:10.059 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 13:53:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-07T13:53:10.019+0800');
2020-08-07 13:53:14.260 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:54:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:54:00.032 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 13:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T13:54:00.022+0800');
2020-08-07 13:54:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:54:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:54:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:54:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:54:10.055 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-07 13:54:10.059 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 13:54:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-07T13:54:10.017+0800');
2020-08-07 13:54:14.261 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:55:00.012 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:55:00.017 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 13:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T13:55:00.012+0800');
2020-08-07 13:55:10.012 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:55:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:55:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:55:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:55:10.050 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-07 13:55:10.055 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 13:55:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-07T13:55:10.012+0800');
2020-08-07 13:55:14.261 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:56:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:56:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 13:56:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:56:00.020+0800');
2020-08-07 13:56:10.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:56:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:56:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:56:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:56:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:56:10.039 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 13:56:10.043 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 13:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T13:56:10.008+0800');
2020-08-07 13:56:14.266 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:57:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:57:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 13:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:57:00.021+0800');
2020-08-07 13:57:10.017 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:57:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:57:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:57:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:57:10.054 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-07 13:57:10.057 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 13:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-07T13:57:10.017+0800');
2020-08-07 13:57:14.269 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:58:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:58:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 13:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T13:58:00.020+0800');
2020-08-07 13:58:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:58:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:58:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:58:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:58:10.049 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 13:58:10.052 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 13:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T13:58:10.019+0800');
2020-08-07 13:58:14.270 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 13:59:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 13:59:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 13:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T13:59:00.019+0800');
2020-08-07 13:59:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 13:59:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 13:59:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 13:59:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 13:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 13:59:10.047 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 13:59:10.050 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 13:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T13:59:10.017+0800');
2020-08-07 13:59:14.273 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:00:00.012 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:00:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:00:00.012+0800');
2020-08-07 14:00:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:00:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:00:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:00:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:00:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:00:10.048 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 14:00:10.051 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T14:00:10.017+0800');
2020-08-07 14:00:14.276 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:01:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:01:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:01:00.023+0800');
2020-08-07 14:01:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:01:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:01:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:01:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:01:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 14:01:10.049 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T14:01:10.017+0800');
2020-08-07 14:01:14.279 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:02:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:02:00.016 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:02:00.012+0800');
2020-08-07 14:02:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:02:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:02:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:02:10.044 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 14:02:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 14:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T14:02:10.017+0800');
2020-08-07 14:02:14.282 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:03:00.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:03:00.020 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 14:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:03:00.012+0800');
2020-08-07 14:03:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:03:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:03:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:03:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:03:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 14:03:10.055 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 14:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-07T14:03:10.019+0800');
2020-08-07 14:03:14.285 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:04:00.044 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:04:00.047 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 14:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:04:00.044+0800');
2020-08-07 14:04:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:04:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:04:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:04:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:04:10.047 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 14:04:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 14:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T14:04:10.017+0800');
2020-08-07 14:04:14.288 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:05:00.009 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:05:00.014 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 14:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:05:00.009+0800');
2020-08-07 14:05:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:05:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:05:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:05:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:05:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 14:05:10.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 14:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T14:05:10.018+0800');
2020-08-07 14:05:14.291 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:05:47.367 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:05:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:05:47.371 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:05:47 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:05:47.374 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:05:47 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:05:51.367 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:05:51.375 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:05:51.379 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:05:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:06:00.009 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:06:00.014 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 14:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:06:00.009+0800');
2020-08-07 14:06:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:06:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:06:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:06:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:06:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:06:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 14:06:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 14:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T14:06:10.019+0800');
2020-08-07 14:06:14.293 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:07:00.011 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:07:00.015 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 14:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:07:00.011+0800');
2020-08-07 14:07:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:07:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:07:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:07:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:07:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 14:07:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 14:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T14:07:10.019+0800');
2020-08-07 14:07:14.296 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:08:00.010 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:08:00.014 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 14:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:08:00.010+0800');
2020-08-07 14:08:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:08:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:08:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:08:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:08:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 14:08:10.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 14:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T14:08:10.019+0800');
2020-08-07 14:08:14.301 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:09:00.012 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:09:00.017 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 14:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:09:00.012+0800');
2020-08-07 14:09:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:09:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:09:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:09:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:09:10.047 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 14:09:10.049 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 14:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T14:09:10.019+0800');
2020-08-07 14:09:14.303 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:10:00.024 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:10:00.030 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:10:00.024+0800');
2020-08-07 14:10:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:10:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:10:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:10:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:10:10.050 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 14:10:10.054 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T14:10:10.019+0800');
2020-08-07 14:10:14.305 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:11:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:11:00.022 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:11:00.019+0800');
2020-08-07 14:11:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:11:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:11:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:11:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:11:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 14:11:10.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T14:11:10.019+0800');
2020-08-07 14:11:14.306 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:12:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:12:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:12:00.023+0800');
2020-08-07 14:12:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:12:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:12:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:12:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 14:12:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 14:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T14:12:10.017+0800');
2020-08-07 14:12:14.308 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:13:00.009 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:13:00.013 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 14:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:13:00.009+0800');
2020-08-07 14:13:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:13:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:13:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:13:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:13:10.046 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 14:13:10.049 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 14:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T14:13:10.018+0800');
2020-08-07 14:13:14.312 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:14:00.009 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:14:00.013 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 14:14:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:14:00.009+0800');
2020-08-07 14:14:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:14:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:14:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 14:14:10.047 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 14:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T14:14:10.017+0800');
2020-08-07 14:14:14.313 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596779384932_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:14:51.911 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596779384932 paused.
2020-08-07 14:14:51.925 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:14:51.929 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 14:14:51.929 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596779384932 shutting down.
2020-08-07 14:14:51.929 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596779384932 paused.
2020-08-07 14:14:51.930 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596779384932 shutdown complete.
2020-08-07 14:14:51.936 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 14:14:51.936 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 14:14:51.942 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 14:15:00.132 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 10304 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 14:15:00.135 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 14:15:01.831 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 14:15:01.833 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 14:15:01.910 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62ms. Found 0 repository interfaces.
2020-08-07 14:15:02.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.732 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1cbf119f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.742 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.746 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.757 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b330a0ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$972917fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.843 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4bde6908] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.855 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@30798137' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$70b30bba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:02.866 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:15:03.309 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 14:15:03.325 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 14:15:03.334 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 14:15:03.334 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 14:15:03.342 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 14:15:03.459 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 14:15:03.459 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3249 ms
2020-08-07 14:15:03.890 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 14:15:03.902 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 14:15:04.416 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 14:15:04.416 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 14:15:04.417 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 14:15:04.417 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 14:15:04.985 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 14:15:07.266 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 14:15:07.303 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 14:15:07.317 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 14:15:07.317 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 14:15:07.321 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 14:15:07.324 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 14:15:07.325 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596780907304'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 14:15:07.325 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 14:15:07.325 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 14:15:07.326 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6b170692
2020-08-07 14:15:07.415 febs [main] INFO  p6spy - 2020-08-07 14:15:07 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 14:15:09.487 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 14:15:09.780 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 14:15:09.781 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 14:15:09.782 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 14:15:09.864 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5cf39df6, org.springframework.security.web.context.SecurityContextPersistenceFilter@2330c995, org.springframework.security.web.header.HeaderWriterFilter@77d42ed7, org.springframework.security.web.authentication.logout.LogoutFilter@796a7c9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3705a85c, org.springframework.security.web.session.ConcurrentSessionFilter@33cec966, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74130456, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@285ac29, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5b11d0d8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46ae897c, org.springframework.security.web.session.SessionManagementFilter@2d398cfb, org.springframework.security.web.access.ExceptionTranslationFilter@5625e7e1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55ba4bff]
2020-08-07 14:15:09.922 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 14:15:09.940 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 14:15:09.941 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:15:10.399 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 14:15:11.212 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 14:15:11.229 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 14:15:11.302 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 14:15:11.326 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 14:15:11.340 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 14:15:11.375 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 14:15:11.380 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.187 seconds (JVM running for 13.572)
2020-08-07 14:15:11.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 14:15:11.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 14:15:11.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 14:15:11.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 14:15:11.408 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 14:15:11.715 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 14:15:11.715 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 14:15:11.734 febs [RMI TCP Connection(1)-192.168.1.113] INFO  p6spy - 2020-08-07 14:15:11 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 14:15:11.737 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-07 14:15:12.328 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 14:15:12.341 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780907304 started.
2020-08-07 14:15:12.346 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596780907304_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 14:15:12.413 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596780907304_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:15:16.418 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:185335F713D824CA841E7DD8209D9EAC
2020-08-07 14:15:19.418 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:15:19 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 14:15:19.593 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:15:19 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 14:15:19.614 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:15:19 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 14:15:20.216 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:15:20 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:15:20.447 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:15:20 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T14:15:20.380+0800' WHERE (USERNAME = 'admin');
2020-08-07 14:15:20.463 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:15:20 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 14:15:20.468 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:15:20 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:15:20.474 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:15:20 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:15:20.481 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:15:20 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 14:15:20.487 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:15:20 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 14:15:21.570 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:15:21 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:15:21.597 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:15:21 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:15:22.720 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:15:22 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:15:22.733 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:15:22 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:15:22.749 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:15:22 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:15:27.344 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596780907304_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 14:15:27.344 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596780907304_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596779384932"'s failed in-progress jobs.
2020-08-07 14:15:28.152 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:15:28 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:15:28.161 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:15:28 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:16:00.039 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:16:00.057 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T14:16:00.039+0800');
2020-08-07 14:16:01.640 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780907304 paused.
2020-08-07 14:16:01.650 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:16:01.654 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 14:16:01.655 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780907304 shutting down.
2020-08-07 14:16:01.655 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780907304 paused.
2020-08-07 14:16:01.656 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780907304 shutdown complete.
2020-08-07 14:16:01.663 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 14:16:01.664 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 14:16:01.669 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 14:16:09.323 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 4736 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 14:16:09.327 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 14:16:11.006 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 14:16:11.009 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 14:16:11.079 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57ms. Found 0 repository interfaces.
2020-08-07 14:16:11.778 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:11.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6b7d01fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:11.964 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:11.968 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:11.979 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ee912b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:12.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e5e7085a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:12.067 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9a9c5965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:12.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:12.079 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2bdcfcf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:12.083 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bf70fc17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:12.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:16:12.529 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 14:16:12.545 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 14:16:12.556 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 14:16:12.556 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 14:16:12.563 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 14:16:12.685 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 14:16:12.685 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3283 ms
2020-08-07 14:16:13.111 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 14:16:13.120 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 14:16:13.648 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 14:16:13.648 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 14:16:13.649 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 14:16:13.649 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 14:16:14.225 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 14:16:16.509 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 14:16:16.546 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 14:16:16.560 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 14:16:16.560 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 14:16:16.564 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 14:16:16.566 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 14:16:16.567 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596780976548'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 14:16:16.567 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 14:16:16.567 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 14:16:16.569 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@71a7cf7c
2020-08-07 14:16:16.660 febs [main] INFO  p6spy - 2020-08-07 14:16:16 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 14:16:18.749 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 14:16:19.038 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 14:16:19.039 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 14:16:19.119 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f5a680, org.springframework.security.web.context.SecurityContextPersistenceFilter@70fcd3e5, org.springframework.security.web.header.HeaderWriterFilter@7f69c4c0, org.springframework.security.web.authentication.logout.LogoutFilter@70ebaa1e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@50331591, org.springframework.security.web.session.ConcurrentSessionFilter@7164e54, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9da386c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4509414e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@53fb3e1b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48a2b492, org.springframework.security.web.session.SessionManagementFilter@1cdb290c, org.springframework.security.web.access.ExceptionTranslationFilter@3feb93a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7364073b]
2020-08-07 14:16:19.177 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 14:16:19.196 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 14:16:19.198 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:16:19.659 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 14:16:20.462 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 14:16:20.479 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 14:16:20.551 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 14:16:20.577 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 14:16:20.591 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 14:16:20.627 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 14:16:20.631 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.221 seconds (JVM running for 13.505)
2020-08-07 14:16:20.657 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 14:16:20.657 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 14:16:20.657 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 14:16:20.657 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 14:16:20.657 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 14:16:21.032 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 14:16:21.032 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 14:16:21.047 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 14:16:21 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 14:16:21.049 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-07 14:16:21.579 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 14:16:21.593 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 14:16:21.593 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596780907304"'s failed in-progress jobs.
2020-08-07 14:16:21.611 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780976548 started.
2020-08-07 14:16:21.619 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596780976548_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:16:32.432 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:F7E8AB1269EAFEE6480134290584D22D
2020-08-07 14:16:35.361 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:16:35 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 14:16:35.542 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:16:35 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 14:16:35.562 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:16:35 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 14:16:36.148 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:16:36 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:16:36.361 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:16:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T14:16:36.300+0800' WHERE (USERNAME = 'admin');
2020-08-07 14:16:36.384 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:16:36 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 14:16:36.390 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:16:36 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:16:36.394 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:16:36 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:16:36.402 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:16:36 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 14:16:36.409 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:16:36 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 14:16:38.791 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:16:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:16:38.806 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:16:38 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:16:40.149 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:16:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:16:40.160 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:16:40 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:16:40.171 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:16:40 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:16:45.921 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:16:45 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:16:45.930 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:16:45 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:16:45.934 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:16:45 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:16:45.939 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:16:45 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:17:00.030 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:17:00.048 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:17:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T14:17:00.030+0800');
2020-08-07 14:17:10.021 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:17:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:17:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:17:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:17:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:17:10.079 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-07 14:17:10.083 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-08-07T14:17:10.021+0800');
2020-08-07 14:17:21.617 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596780976548_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:18:00.053 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:18:00.059 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:18:00.053+0800');
2020-08-07 14:18:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:18:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:18:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:18:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:18:10.054 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 14:18:10.058 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T14:18:10.019+0800');
2020-08-07 14:18:20.161 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780976548 paused.
2020-08-07 14:18:20.171 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:18:20.174 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 14:18:20.174 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780976548 shutting down.
2020-08-07 14:18:20.174 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780976548 paused.
2020-08-07 14:18:20.175 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596780976548 shutdown complete.
2020-08-07 14:18:20.180 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 14:18:20.180 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 14:18:20.185 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 14:18:27.938 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 17132 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 14:18:27.942 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 14:18:30.330 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 14:18:30.333 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 14:18:30.411 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-08-07 14:18:31.128 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$dbe4a427] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$72563356] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.379 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$564eaa85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.435 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b03fb90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@e3ed455' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2fd89e42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:18:31.956 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 14:18:31.976 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 14:18:31.986 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 14:18:31.986 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 14:18:31.995 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 14:18:32.125 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 14:18:32.125 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4100 ms
2020-08-07 14:18:32.611 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 14:18:32.622 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 14:18:33.154 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 14:18:33.154 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 14:18:33.154 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 14:18:33.154 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 14:18:33.737 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 14:18:36.027 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 14:18:36.065 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 14:18:36.079 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 14:18:36.080 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 14:18:36.085 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 14:18:36.087 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 14:18:36.088 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596781116067'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 14:18:36.088 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 14:18:36.088 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 14:18:36.089 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@72406594
2020-08-07 14:18:36.175 febs [main] INFO  p6spy - 2020-08-07 14:18:36 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 14:18:38.304 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 14:18:38.596 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 14:18:38.596 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 14:18:38.596 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 14:18:38.597 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 14:18:38.598 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 14:18:38.680 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e1d813a, org.springframework.security.web.context.SecurityContextPersistenceFilter@28da5c4d, org.springframework.security.web.header.HeaderWriterFilter@1c000c2f, org.springframework.security.web.authentication.logout.LogoutFilter@9fd5dd0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2b569858, org.springframework.security.web.session.ConcurrentSessionFilter@2b0d818d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bcca516, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cf1b5fb, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@41d8ac75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1964ef9, org.springframework.security.web.session.SessionManagementFilter@7f6936cc, org.springframework.security.web.access.ExceptionTranslationFilter@4a532271, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@58a0f75b]
2020-08-07 14:18:38.743 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 14:18:38.762 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 14:18:38.764 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:18:39.233 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 14:18:40.053 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 14:18:40.072 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 14:18:40.142 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 14:18:40.167 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 14:18:40.181 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 14:18:40.214 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 14:18:40.219 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.207 seconds (JVM running for 14.671)
2020-08-07 14:18:40.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 14:18:40.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 14:18:40.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 14:18:40.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 14:18:40.245 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 14:18:40.780 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 14:18:40.780 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 14:18:40.799 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 14:18:40 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 14:18:40.801 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-07 14:18:41.168 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 14:18:41.178 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 14:18:41.178 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596780976548"'s failed in-progress jobs.
2020-08-07 14:18:41.193 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781116067 started.
2020-08-07 14:18:41.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781116067_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:18:43.786 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:F76EBB99C900612EC9DE6673612F4138
2020-08-07 14:18:46.699 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:18:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 14:18:46.796 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:18:46 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 14:18:46.812 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:18:46 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 14:18:47.318 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:18:47 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:18:47.505 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:18:47 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T14:18:47.448+0800' WHERE (USERNAME = 'admin');
2020-08-07 14:18:47.529 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:18:47 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 14:18:47.534 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:18:47 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:18:47.539 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:18:47 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:18:47.546 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:18:47 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 14:18:47.551 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:18:47 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 14:18:48.708 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:18:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:18:48.724 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:18:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:18:49.903 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:18:49 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:18:49.913 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:18:49 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:18:49.924 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:18:49 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:18:55.584 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:18:55 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:18:55.592 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:18:55 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:18:55.597 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:18:55 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:19:00.036 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:19:00.054 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:19:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T14:19:00.036+0800');
2020-08-07 14:19:10.015 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:19:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:19:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:19:10.105 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:19:10.108 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：93 毫秒
2020-08-07 14:19:10.112 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:19:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 93, '2020-08-07T14:19:10.015+0800');
2020-08-07 14:19:17.199 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781116067_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:20:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:20:00.018 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:20:00.013+0800');
2020-08-07 14:20:10.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:20:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:20:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:20:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:20:10.046 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 14:20:10.050 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T14:20:10.011+0800');
2020-08-07 14:20:17.220 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781116067_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:21:00.013 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:21:00.018 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:21:00.013+0800');
2020-08-07 14:21:02.435 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781116067 paused.
2020-08-07 14:21:02.447 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:21:02.452 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 14:21:02.452 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781116067 shutting down.
2020-08-07 14:21:02.452 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781116067 paused.
2020-08-07 14:21:02.453 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781116067 shutdown complete.
2020-08-07 14:21:02.459 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 14:21:02.460 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 14:21:02.465 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 14:21:10.251 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18776 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 14:21:10.254 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 14:21:12.073 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 14:21:12.076 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 14:21:12.150 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55ms. Found 0 repository interfaces.
2020-08-07 14:21:13.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c4d89fdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.077 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5b4a2f0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$3f42a639] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f3f7f744] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5086623f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$18cc99f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:21:14.862 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 14:21:14.887 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 14:21:14.899 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 14:21:14.900 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 14:21:14.911 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 14:21:15.109 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 14:21:15.110 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4775 ms
2020-08-07 14:21:15.774 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 14:21:15.787 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 14:21:16.852 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 14:21:16.852 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 14:21:16.852 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 14:21:16.852 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 14:21:17.465 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 14:21:20.566 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 14:21:20.606 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 14:21:20.622 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 14:21:20.623 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 14:21:20.627 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 14:21:20.629 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 14:21:20.631 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596781280607'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 14:21:20.631 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 14:21:20.631 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 14:21:20.632 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5c65fa69
2020-08-07 14:21:20.722 febs [main] INFO  p6spy - 2020-08-07 14:21:20 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 14:21:22.922 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 14:21:23.231 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 14:21:23.231 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 14:21:23.231 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:21:23.231 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 14:21:23.232 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 14:21:23.340 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f5a680, org.springframework.security.web.context.SecurityContextPersistenceFilter@492a220e, org.springframework.security.web.header.HeaderWriterFilter@3a22d69f, org.springframework.security.web.authentication.logout.LogoutFilter@3d5e3f58, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5cfde2a4, org.springframework.security.web.session.ConcurrentSessionFilter@396f3bf2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f5fb335, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78a0d664, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@53fb3e1b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48a2b492, org.springframework.security.web.session.SessionManagementFilter@7164e54, org.springframework.security.web.access.ExceptionTranslationFilter@7ff40324, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50331591]
2020-08-07 14:21:23.402 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 14:21:23.420 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 14:21:23.422 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:21:23.894 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 14:21:24.686 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 14:21:24.703 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 14:21:24.781 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 14:21:24.808 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 14:21:24.823 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 14:21:24.862 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 14:21:24.865 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 15.541 seconds (JVM running for 16.879)
2020-08-07 14:21:24.896 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 14:21:24.896 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 14:21:24.896 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 14:21:24.896 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 14:21:24.896 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 14:21:25.250 febs [RMI TCP Connection(7)-192.168.1.113] INFO  p6spy - 2020-08-07 14:21:25 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-07 14:21:25.770 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 14:21:25.770 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 14:21:25.835 febs [RMI TCP Connection(9)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 65 ms
2020-08-07 14:21:25.951 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 14:21:25.970 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 14:21:25.970 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596781116067"'s failed in-progress jobs.
2020-08-07 14:21:25.979 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781280607 started.
2020-08-07 14:21:25.986 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:21:40.391 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:4BA2FD95DB51DD203BB0186764788529
2020-08-07 14:21:43.268 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:21:43 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 14:21:43.373 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:21:43 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 14:21:43.389 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:21:43 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 14:21:43.905 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:21:43 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:21:44.093 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:21:44 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T14:21:44.038+0800' WHERE (USERNAME = 'admin');
2020-08-07 14:21:44.117 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:21:44 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 14:21:44.122 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:21:44 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:21:44.126 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:21:44 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:21:44.134 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:21:44 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 14:21:44.139 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:21:44 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 14:21:45.158 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:21:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:21:45.175 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:21:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:21:46.973 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:21:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:21:46.984 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:21:46 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:21:46.995 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:21:46 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:21:52.027 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:21:52 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:21:52.036 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:21:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:22:00.040 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:22:00.058 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T14:22:00.040+0800');
2020-08-07 14:22:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:22:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:22:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:22:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:22:10.079 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：57 毫秒
2020-08-07 14:22:10.084 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 57, '2020-08-07T14:22:10.022+0800');
2020-08-07 14:22:13.985 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:23:00.047 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:23:00.053 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:23:00.047+0800');
2020-08-07 14:23:10.095 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:23:10.197 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:23:10.223 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:23:10 | 耗时 1 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:23:10.254 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:23:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:23:10.257 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：162 毫秒
2020-08-07 14:23:10.262 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:23:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 162, '2020-08-07T14:23:10.095+0800');
2020-08-07 14:23:13.988 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:24:00.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:24:00.050 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:24:00.045+0800');
2020-08-07 14:24:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:24:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:24:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:24:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:24:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:24:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 14:24:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 14:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-07T14:24:10.018+0800');
2020-08-07 14:24:13.991 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:25:00.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:25:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 14:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:25:00.014+0800');
2020-08-07 14:25:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:25:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:25:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:25:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:25:10.079 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 14:25:10.082 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 14:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-07T14:25:10.045+0800');
2020-08-07 14:25:13.996 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:26:00.012 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:26:00.016 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 14:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:26:00.012+0800');
2020-08-07 14:26:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:26:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:26:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:26:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:26:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 14:26:10.055 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 14:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-07T14:26:10.019+0800');
2020-08-07 14:26:13.996 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:27:00.013 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:27:00.018 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 14:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:27:00.013+0800');
2020-08-07 14:27:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:27:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:27:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:27:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:27:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 14:27:10.050 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 14:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T14:27:10.016+0800');
2020-08-07 14:27:13.999 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:28:00.011 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:28:00.016 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 14:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:28:00.011+0800');
2020-08-07 14:28:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:28:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:28:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:28:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:28:10.049 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 14:28:10.052 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 14:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T14:28:10.019+0800');
2020-08-07 14:28:14.008 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:29:00.012 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:29:00.017 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 14:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:29:00.012+0800');
2020-08-07 14:29:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:29:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:29:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:29:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:29:10.055 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 14:29:10.058 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 14:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T14:29:10.019+0800');
2020-08-07 14:29:14.011 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781280607_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:29:27.512 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781280607 paused.
2020-08-07 14:29:27.525 febs [Thread-33] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:29:27.530 febs [Thread-33] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 14:29:27.530 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781280607 shutting down.
2020-08-07 14:29:27.530 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781280607 paused.
2020-08-07 14:29:27.531 febs [Thread-33] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781280607 shutdown complete.
2020-08-07 14:29:27.537 febs [Thread-33] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 14:29:27.538 febs [Thread-33] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 14:29:27.545 febs [Thread-33] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 14:29:39.822 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 19812 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 14:29:39.826 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 14:29:41.484 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 14:29:41.487 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 14:29:41.555 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-08-07 14:29:42.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.408 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cfadcade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.417 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.421 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.432 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$661f5a0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$4a17d13c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fecd2247] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.535 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@377dbc50' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$23a1c4f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.543 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:29:42.988 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 14:29:43.004 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 14:29:43.013 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 14:29:43.014 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 14:29:43.021 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 14:29:43.140 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 14:29:43.140 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3234 ms
2020-08-07 14:29:43.548 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 14:29:43.578 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 14:29:44.091 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 14:29:44.091 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 14:29:44.091 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 14:29:44.091 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 14:29:44.671 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 14:29:46.978 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 14:29:47.016 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 14:29:47.031 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 14:29:47.031 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 14:29:47.035 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 14:29:47.037 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 14:29:47.038 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596781787018'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 14:29:47.038 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 14:29:47.039 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 14:29:47.040 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3b1895e
2020-08-07 14:29:47.123 febs [main] INFO  p6spy - 2020-08-07 14:29:47 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 14:29:49.209 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 14:29:49.515 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 14:29:49.515 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 14:29:49.516 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 14:29:49.596 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59043128, org.springframework.security.web.context.SecurityContextPersistenceFilter@47596e9, org.springframework.security.web.header.HeaderWriterFilter@5f5076f9, org.springframework.security.web.authentication.logout.LogoutFilter@1d82d35c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7f38545a, org.springframework.security.web.session.ConcurrentSessionFilter@76b6bad3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74cad577, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20524816, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@d03cdc7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@642334d6, org.springframework.security.web.session.SessionManagementFilter@6f53f5a4, org.springframework.security.web.access.ExceptionTranslationFilter@77902ed6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55e02661]
2020-08-07 14:29:49.658 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 14:29:49.677 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 14:29:49.679 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:29:50.156 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 14:29:51.039 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 14:29:51.057 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 14:29:51.130 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 14:29:51.154 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 14:29:51.168 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 14:29:51.204 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 14:29:51.208 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.294 seconds (JVM running for 13.586)
2020-08-07 14:29:51.234 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 14:29:51.234 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 14:29:51.234 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 14:29:51.234 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 14:29:51.234 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 14:29:51.505 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 14:29:51.506 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 14:29:51.524 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 14:29:51 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 14:29:51.528 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-07 14:29:52.155 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 14:29:52.170 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 14:29:52.170 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596781280607"'s failed in-progress jobs.
2020-08-07 14:29:52.191 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781787018 started.
2020-08-07 14:29:52.201 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781787018_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:29:58.437 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:4B114A49BA26AF05C02AF7352AEE7C78
2020-08-07 14:30:00.039 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:30:00.097 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T14:30:00.039+0800');
2020-08-07 14:30:02.132 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 15 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 14:30:02.229 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 14:30:02.245 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 14:30:02.742 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:30:02.931 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T14:30:02.881+0800' WHERE (USERNAME = 'admin');
2020-08-07 14:30:02.945 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 14:30:02.950 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:30:02.954 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:30:02.963 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 14:30:02.968 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:30:02 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 14:30:04.035 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:30:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:30:04.051 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:30:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:30:05.026 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:30:05 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:30:05.037 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:30:05 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:30:05.049 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:30:05 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:30:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:30:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:30:10.081 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:30:10.114 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:30:10.117 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：95 毫秒
2020-08-07 14:30:10.123 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:30:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 95, '2020-08-07T14:30:10.022+0800');
2020-08-07 14:30:10.984 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:30:10.991 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:30:10.995 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:30:11.000 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:30:11 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:30:12.419 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:30:12 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:30:12.424 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:30:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:30:12.428 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:30:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:30:12.430 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:30:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:30:12.434 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:30:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:30:12.441 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:30:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:30:16.195 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781787018_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:31:00.013 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:31:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:31:00.013+0800');
2020-08-07 14:31:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:31:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:31:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:31:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:31:10.056 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 14:31:10.060 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T14:31:10.021+0800');
2020-08-07 14:31:16.198 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781787018_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:31:31.777 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:31:31 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:31:31.783 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:31:31.789 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:31:31.792 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:31:31.795 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:31:31.801 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:31:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:31:52.792 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:31:52 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:31:52.862 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:31:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:31:52.865 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:31:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:31:53.483 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:31:53 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:31:53.537 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:31:53 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:31:53.540 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:31:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:31:54.360 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:31:54 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:31:54.363 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:31:54.367 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:31:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:32:00.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:32:00.051 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:32:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:32:00.045+0800');
2020-08-07 14:32:00.720 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:32:00 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:32:00.730 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:32:00 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:32:00.737 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:32:00 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2' AND myequipment_id = '1');
2020-08-07 14:32:00.742 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:32:00 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:32:10.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:32:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:32:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:32:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:32:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:32:10.061 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-07 14:32:10.067 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 14:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-07T14:32:10.022+0800');
2020-08-07 14:32:16.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781787018_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:33:00.012 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:33:00.017 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 14:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:33:00.012+0800');
2020-08-07 14:33:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:33:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:33:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:33:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 14:33:10.055 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 14:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-07T14:33:10.018+0800');
2020-08-07 14:33:16.200 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596781787018_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:33:48.050 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781787018 paused.
2020-08-07 14:33:48.063 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:33:48.067 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 14:33:48.067 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781787018 shutting down.
2020-08-07 14:33:48.067 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781787018 paused.
2020-08-07 14:33:48.068 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596781787018 shutdown complete.
2020-08-07 14:33:48.073 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 14:33:48.074 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 14:33:48.079 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 14:33:55.813 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 16976 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 14:33:55.818 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 14:33:58.659 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 14:33:58.664 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 14:33:58.784 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95ms. Found 0 repository interfaces.
2020-08-07 14:33:59.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ea392806] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.829 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.841 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$80aab735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$64a32e64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.930 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$19587f6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@31d4b3e8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3e2d2221] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:33:59.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:34:00.412 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 14:34:00.430 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 14:34:00.439 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 14:34:00.439 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 14:34:00.447 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 14:34:00.566 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 14:34:00.566 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4657 ms
2020-08-07 14:34:00.987 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 14:34:00.996 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 14:34:01.494 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 14:34:01.494 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 14:34:01.494 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 14:34:01.494 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 14:34:02.082 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 14:34:04.343 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 14:34:04.381 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 14:34:04.394 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 14:34:04.395 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 14:34:04.399 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 14:34:04.401 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 14:34:04.402 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596782044382'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 14:34:04.402 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 14:34:04.402 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 14:34:04.404 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@46610fc9
2020-08-07 14:34:04.490 febs [main] INFO  p6spy - 2020-08-07 14:34:04 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 14:34:06.580 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 14:34:06.868 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 14:34:06.869 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 14:34:06.869 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 14:34:06.869 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 14:34:06.869 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 14:34:06.869 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 14:34:06.949 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e9d6c78, org.springframework.security.web.context.SecurityContextPersistenceFilter@1cdb290c, org.springframework.security.web.header.HeaderWriterFilter@135f160e, org.springframework.security.web.authentication.logout.LogoutFilter@4131f6db, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@655b9169, org.springframework.security.web.session.ConcurrentSessionFilter@7adde776, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4607cbe2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9da386c, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@62536882, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27f4761b, org.springframework.security.web.session.SessionManagementFilter@7a41f4a7, org.springframework.security.web.access.ExceptionTranslationFilter@6956081d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f627a1a]
2020-08-07 14:34:07.009 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 14:34:07.029 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 14:34:07.031 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:34:07.490 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 14:34:08.305 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 14:34:08.322 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 14:34:08.396 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 14:34:08.419 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 14:34:08.434 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 14:34:08.467 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 14:34:08.472 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.587 seconds (JVM running for 14.85)
2020-08-07 14:34:08.500 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 14:34:08.500 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 14:34:08.500 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 14:34:08.500 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 14:34:08.500 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 14:34:08.952 febs [RMI TCP Connection(6)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 14:34:08.952 febs [RMI TCP Connection(6)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 14:34:08.968 febs [RMI TCP Connection(7)-192.168.1.113] INFO  p6spy - 2020-08-07 14:34:08 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 14:34:08.969 febs [RMI TCP Connection(6)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-07 14:34:09.420 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 14:34:09.429 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 14:34:09.432 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596781787018"'s failed in-progress jobs.
2020-08-07 14:34:09.442 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596782044382 started.
2020-08-07 14:34:09.447 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:34:09.485 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:34:09.536 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:34:09 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T14:34:09.485+0800');
2020-08-07 14:34:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:34:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:34:10.082 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:34:10.116 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:34:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:34:10.118 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：99 毫秒
2020-08-07 14:34:10.123 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:34:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 99, '2020-08-07T14:34:10.019+0800');
2020-08-07 14:34:13.872 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:D12F59A2C84552F08DF676FC4310C409
2020-08-07 14:34:16.620 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:34:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 14:34:16.721 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:34:16 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 14:34:16.736 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:34:16 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 14:34:17.223 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:34:17 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:34:17.372 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:34:17 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T14:34:17.358+0800' WHERE (USERNAME = 'admin');
2020-08-07 14:34:17.395 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:34:17 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 14:34:17.398 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:34:17 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:34:17.404 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:34:17 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:34:17.411 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:34:17 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 14:34:17.418 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:34:17 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 14:34:18.549 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:34:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:34:18.564 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:34:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:34:20.005 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:34:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:34:20.016 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:34:20 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:34:20.026 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:34:20 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:34:21.448 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:34:28.813 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:34:28 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:34:28.822 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:34:28 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:34:28.839 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:34:28 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:34:37.287 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:34:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:34:37.291 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:34:37 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:34:37.295 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:34:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:34:53.404 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:34:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:34:53.408 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:34:53 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:34:53.411 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:34:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:34:57.717 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:34:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:34:57.723 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:34:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:34:57.729 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:34:57 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 1, 1, '1', '2020-08-07T14:34:57.726', '1', '2020-08-07T14:34:57.726');
2020-08-07 14:34:57.745 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:34:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:34:57.749 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:34:57 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 2, 1, '1', '2020-08-07T14:34:57.747', '1', '2020-08-07T14:34:57.747');
2020-08-07 14:34:59.004 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:34:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:34:59.007 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:34:59 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:34:59.012 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:34:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:35:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:35:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:35:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:35:00.023+0800');
2020-08-07 14:35:02.661 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:35:02 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:35:02.666 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:35:02 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:35:02.673 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:35:02 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:35:04.107 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:35:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:35:04.111 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:35:04 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:35:04.115 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:35:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:35:08.173 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:35:08 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:35:08.178 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:35:08 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:35:09.674 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:35:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:35:09.677 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:35:09 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:35:09.680 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:35:09 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:35:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:35:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:35:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:35:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:35:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:35:10.060 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-07 14:35:10.063 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-07T14:35:10.021+0800');
2020-08-07 14:35:12.988 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:35:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:35:14.411 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:35:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:35:14.414 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:35:14 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:35:14.416 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:35:14 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:35:17.381 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:35:17 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:35:18.610 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:35:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:35:18.613 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:35:18 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:35:18.616 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:35:18 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:35:21.447 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:35:30.483 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:35:30 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:35:31.962 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:35:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:35:31.965 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:35:31 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:35:31.968 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:35:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:35:39.773 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:35:39 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:35:39.778 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:35:39 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:35:39.782 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:35:39 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 1, 1, '1', '2020-08-07T14:35:39.779', '1', '2020-08-07T14:35:39.779');
2020-08-07 14:36:00.016 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:36:00.021 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:36:00.016+0800');
2020-08-07 14:36:03.288 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:36:03.292 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:36:03.297 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:36:10.008 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:36:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:36:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:36:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:36:10.041 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 14:36:10.045 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-07T14:36:10.008+0800');
2020-08-07 14:36:10.517 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:36:10.524 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:36:10.528 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:36:10.530 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:36:10.533 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 2, 1, '1', '2020-08-07T14:36:10.529', '1', '2020-08-07T14:36:10.529');
2020-08-07 14:36:10.536 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:36:10.541 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:36:10.544 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:36:10 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 2, 1, '1', '2020-08-07T14:36:10.542', '1', '2020-08-07T14:36:10.542');
2020-08-07 14:36:11.979 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:36:11.981 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:36:11.985 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:36:11 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:36:16.123 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:36:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:36:16.127 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:36:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:36:16.131 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:36:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:36:16.134 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:36:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:36:16.138 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:36:16 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 3, 1, '1', '2020-08-07T14:36:16.135', '1', '2020-08-07T14:36:16.135');
2020-08-07 14:36:17.530 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:36:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:36:17.533 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:36:17 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:36:17.537 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:36:17 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:36:20.772 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:36:20 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:36:20.777 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:36:20 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:36:20.793 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:36:20 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:36:20.796 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:36:20 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:36:21.448 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:36:21.938 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:36:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:36:21.941 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:36:21 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:36:21.944 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:36:21 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:36:25.196 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:36:25 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:36:25.200 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:36:25 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:36:25.207 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:36:25 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 14:36:25.211 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:36:25 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:36:26.498 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:36:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:36:26.503 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:36:26 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:36:26.506 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:36:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:36:30.363 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:30 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:36:30.367 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:30 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:36:30.371 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:30 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 1, 1, '1', '2020-08-07T14:36:30.368', '1', '2020-08-07T14:36:30.368');
2020-08-07 14:36:30.387 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:30 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:36:30.390 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:36:30 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 3, 1, '1', '2020-08-07T14:36:30.388', '1', '2020-08-07T14:36:30.388');
2020-08-07 14:36:31.531 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:36:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:36:31.535 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:36:31 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:36:31.539 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:36:31 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:36:34.595 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:36:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:36:34.599 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:36:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 14:36:34.603 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:36:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 14:37:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:37:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 14:37:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:37:00.023+0800');
2020-08-07 14:37:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:37:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:37:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:37:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:37:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 14:37:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 14:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T14:37:10.021+0800');
2020-08-07 14:37:21.450 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:38:00.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:38:00.015 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 14:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:38:00.011+0800');
2020-08-07 14:38:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:38:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:38:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:38:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:38:10.056 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-07 14:38:10.060 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 14:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 37, '2020-08-07T14:38:10.019+0800');
2020-08-07 14:38:21.658 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:39:00.010 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:39:00.016 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 14:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:39:00.010+0800');
2020-08-07 14:39:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:39:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:39:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:39:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:39:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 14:39:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 14:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-07T14:39:10.010+0800');
2020-08-07 14:39:21.625 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:40:00.011 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:40:00.016 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 14:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:40:00.011+0800');
2020-08-07 14:40:10.007 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:40:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:40:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:40:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:40:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-07 14:40:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 14:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 38, '2020-08-07T14:40:10.007+0800');
2020-08-07 14:40:21.626 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:41:00.015 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:41:00.021 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 14:41:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:41:00.015+0800');
2020-08-07 14:41:10.007 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:41:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:41:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:41:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:41:10.039 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 14:41:10.042 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 14:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-07T14:41:10.007+0800');
2020-08-07 14:41:21.629 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:42:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:42:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 14:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:42:00.020+0800');
2020-08-07 14:42:10.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:42:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:42:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:42:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:42:10.037 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 14:42:10.040 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 14:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T14:42:10.009+0800');
2020-08-07 14:42:21.630 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:43:00.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:43:00.015 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 14:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:43:00.010+0800');
2020-08-07 14:43:10.007 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:43:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:43:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:43:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:43:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 14:43:10.038 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 14:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T14:43:10.007+0800');
2020-08-07 14:43:21.634 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:44:00.012 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:44:00.016 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:44:00.012+0800');
2020-08-07 14:44:10.007 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:44:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:44:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:44:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:44:10.035 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 14:44:10.038 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T14:44:10.007+0800');
2020-08-07 14:44:21.638 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:45:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:45:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:45:00.022+0800');
2020-08-07 14:45:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:45:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:45:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:45:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:45:10.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 14:45:10.054 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-07T14:45:10.018+0800');
2020-08-07 14:45:21.639 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:46:00.011 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:46:00.015 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:46:00.011+0800');
2020-08-07 14:46:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:46:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:46:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:46:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:46:10.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 14:46:10.052 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 14:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T14:46:10.019+0800');
2020-08-07 14:46:21.641 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:47:00.014 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:47:00.018 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 14:47:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:47:00.014+0800');
2020-08-07 14:47:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:47:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:47:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:47:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:47:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 14:47:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 14:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-07T14:47:10.008+0800');
2020-08-07 14:47:21.644 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:48:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:48:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 14:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:48:00.021+0800');
2020-08-07 14:48:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:48:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:48:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:48:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:48:10.056 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-07 14:48:10.059 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 14:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-07T14:48:10.017+0800');
2020-08-07 14:48:21.646 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:49:00.011 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:49:00.016 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 14:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:49:00.011+0800');
2020-08-07 14:49:10.024 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:49:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:49:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:49:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:49:10.052 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 14:49:10.054 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 14:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-07T14:49:10.024+0800');
2020-08-07 14:49:21.648 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:49:30.025 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:49:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:49:30.027 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:49:30 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:49:30.030 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:49:30 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:49:36.562 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:49:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:49:36.565 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:49:36 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:49:36.568 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:49:36 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:49:39.265 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:49:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:49:39.268 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:49:39 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:49:39.270 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:49:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:50:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:50:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 14:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:50:00.018+0800');
2020-08-07 14:50:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:50:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:50:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:50:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 14:50:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 14:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T14:50:10.019+0800');
2020-08-07 14:50:21.652 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:50:35.159 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:50:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:50:35.163 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:50:35 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:50:35.166 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:50:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:51:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:51:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 14:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T14:51:00.021+0800');
2020-08-07 14:51:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:51:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:51:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:51:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:51:10.048 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 14:51:10.051 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 14:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T14:51:10.018+0800');
2020-08-07 14:51:20.056 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 14:51:20.063 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '1');
2020-08-07 14:51:20.069 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:51:20 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (2, 1, 1, '1', '2020-08-07T14:51:20.064', '1', '2020-08-07T14:51:20.065');
2020-08-07 14:51:20.076 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '3');
2020-08-07 14:51:20.080 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:51:20 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (2, 3, 1, '1', '2020-08-07T14:51:20.077', '1', '2020-08-07T14:51:20.077');
2020-08-07 14:51:20.086 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:51:20 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '2');
2020-08-07 14:51:20.090 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 14:51:20 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (2, 2, 1, '1', '2020-08-07T14:51:20.087', '1', '2020-08-07T14:51:20.087');
2020-08-07 14:51:21.657 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:52:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:52:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 14:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:52:00.020+0800');
2020-08-07 14:52:10.019 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:52:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:52:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:52:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:52:10.046 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 14:52:10.049 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 14:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T14:52:10.019+0800');
2020-08-07 14:52:21.657 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:53:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:53:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 14:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:53:00.020+0800');
2020-08-07 14:53:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:53:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:53:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:53:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:53:10.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-07 14:53:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 14:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-07T14:53:10.019+0800');
2020-08-07 14:53:21.660 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:53:34.104 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:53:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:53:34.108 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:53:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:53:34.111 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:53:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:53:38.381 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:53:38 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 14:53:38.388 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:53:38 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '1');
2020-08-07 14:53:38.394 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:53:38 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '3');
2020-08-07 14:53:38.402 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:53:38 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '2');
2020-08-07 14:53:40.272 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:53:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:53:40.276 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:53:40.279 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:53:40 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:54:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:54:00.025 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:54:00.021+0800');
2020-08-07 14:54:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:54:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:54:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:54:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:54:10.041 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 14:54:10.044 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T14:54:10.016+0800');
2020-08-07 14:54:15.115 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:54:15 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:54:15.118 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:54:15 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:54:15.122 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:54:15 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:54:21.668 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:54:33.138 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:54:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:54:33.145 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:54:33 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 14:54:33.149 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:54:33 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:55:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:55:00.034 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 14:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-07T14:55:00.021+0800');
2020-08-07 14:55:10.017 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:55:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:55:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:55:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:55:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 14:55:10.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 14:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-07T14:55:10.017+0800');
2020-08-07 14:55:21.665 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:56:00.044 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:56:00.049 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 14:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:56:00.044+0800');
2020-08-07 14:56:10.009 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:56:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:56:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:56:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:56:10.034 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 14:56:10.037 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 14:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T14:56:10.009+0800');
2020-08-07 14:56:21.667 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:57:00.043 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:57:00.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 14:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:57:00.043+0800');
2020-08-07 14:57:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:57:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:57:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:57:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:57:10.034 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 14:57:10.037 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 14:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T14:57:10.008+0800');
2020-08-07 14:57:21.672 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596782044382_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:58:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:58:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 14:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T14:58:00.019+0800');
2020-08-07 14:58:08.460 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596782044382 paused.
2020-08-07 14:58:08.473 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:58:08.476 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 14:58:08.477 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596782044382 shutting down.
2020-08-07 14:58:08.477 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596782044382 paused.
2020-08-07 14:58:08.477 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596782044382 shutdown complete.
2020-08-07 14:58:08.482 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 14:58:08.483 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 14:58:08.488 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 14:58:16.220 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18684 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 14:58:16.224 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 14:58:18.134 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 14:58:18.137 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 14:58:18.204 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-08-07 14:58:19.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$129a2f58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.225 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.242 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a90bbe87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$8d0435b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$41b986c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@563172d3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.338 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$668e2973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 14:58:19.824 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 14:58:19.842 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 14:58:19.854 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 14:58:19.854 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 14:58:19.862 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 14:58:19.992 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 14:58:19.993 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3686 ms
2020-08-07 14:58:20.441 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 14:58:20.450 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 14:58:21.053 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 14:58:21.054 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 14:58:21.054 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 14:58:21.054 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 14:58:21.704 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 14:58:24.182 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 14:58:24.221 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 14:58:24.236 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 14:58:24.237 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 14:58:24.241 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 14:58:24.244 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 14:58:24.245 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596783504222'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 14:58:24.245 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 14:58:24.245 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 14:58:24.247 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7c07023
2020-08-07 14:58:24.333 febs [main] INFO  p6spy - 2020-08-07 14:58:24 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 14:58:26.446 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 14:58:26.763 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 14:58:26.764 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 14:58:26.764 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 14:58:26.764 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 14:58:26.859 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7af2ee23, org.springframework.security.web.context.SecurityContextPersistenceFilter@648f48d3, org.springframework.security.web.header.HeaderWriterFilter@7925e772, org.springframework.security.web.authentication.logout.LogoutFilter@4f2b1a2f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@e353e1d, org.springframework.security.web.session.ConcurrentSessionFilter@6fc3f1a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41041c31, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2709e075, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@d4dbb34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d10e2b6, org.springframework.security.web.session.SessionManagementFilter@240e61, org.springframework.security.web.access.ExceptionTranslationFilter@3891db3a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f2d0ca2]
2020-08-07 14:58:26.916 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 14:58:26.939 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 14:58:26.940 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 14:58:27.442 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 14:58:28.254 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 14:58:28.277 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 14:58:28.371 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 14:58:28.400 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 14:58:28.415 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 14:58:28.452 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 14:58:28.456 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 13.299 seconds (JVM running for 14.59)
2020-08-07 14:58:28.485 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 14:58:28.485 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 14:58:28.485 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 14:58:28.485 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 14:58:28.485 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 14:58:28.632 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 14:58:28.632 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 14:58:28.654 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-07 14:58:29.048 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 14:58:29 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 14:58:29.401 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 14:58:29.410 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 14:58:29.410 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596782044382"'s failed in-progress jobs.
2020-08-07 14:58:29.424 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596783504222 started.
2020-08-07 14:58:29.429 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 14:58:35.371 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:0E569E5F816BFEDE4315501FDE078AAC
2020-08-07 14:58:38.504 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:58:38 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 14:58:38.735 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:58:38 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 14:58:38.756 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 14:58:38 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 14:58:39.553 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 14:58:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 14:58:39.815 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:58:39 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T14:58:39.743+0800' WHERE (USERNAME = 'admin');
2020-08-07 14:58:39.839 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:58:39 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 14:58:39.845 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:58:39 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:58:39.850 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:58:39 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 14:58:39.859 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:58:39 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 14:58:39.865 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 14:58:39 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 14:58:41.453 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:58:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 14:58:41.471 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 14:58:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 14:58:42.720 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:58:42 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:58:42.734 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:58:42 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:58:42.747 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 14:58:42 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:58:45.855 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:58:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:58:45.860 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:58:45 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 14:58:45.864 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 14:58:45 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:58:50.764 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:58:50 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 14:58:50.771 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:58:50 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '1');
2020-08-07 14:58:50.778 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:58:50 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (2, 1, 1, '1', '2020-08-07T14:58:50.774', '1', '2020-08-07T14:58:50.774');
2020-08-07 14:58:50.798 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:58:50 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '2');
2020-08-07 14:58:50.803 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 14:58:50 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (2, 2, 1, '1', '2020-08-07T14:58:50.800', '1', '2020-08-07T14:58:50.800');
2020-08-07 14:58:52.450 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:58:52 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 14:58:52.455 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:58:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 14:58:52.459 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 14:58:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:58:55.347 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:58:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 14:58:55.352 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:58:55 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 14:58:55.356 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 14:58:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 14:59:00.031 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 14:59:00.050 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 14:59:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T14:59:00.031+0800');
2020-08-07 14:59:10.026 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 14:59:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:59:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 14:59:10.101 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 14:59:10.140 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 14:59:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 14:59:10.149 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：123 毫秒
2020-08-07 14:59:10.155 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 14:59:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 123, '2020-08-07T14:59:10.026+0800');
2020-08-07 14:59:17.429 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:00:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:00:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:00:00.014+0800');
2020-08-07 15:00:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:00:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:00:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:00:10.170 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:00:10.173 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：154 毫秒
2020-08-07 15:00:10.178 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 154, '2020-08-07T15:00:10.019+0800');
2020-08-07 15:00:17.434 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:01:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:01:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:01:00.022+0800');
2020-08-07 15:01:10.023 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:01:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:01:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:01:10.168 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:01:10.171 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：148 毫秒
2020-08-07 15:01:10.177 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 15:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 148, '2020-08-07T15:01:10.023+0800');
2020-08-07 15:01:17.460 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:02:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:02:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 15:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:02:00.020+0800');
2020-08-07 15:02:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:02:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:02:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:02:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:02:10.061 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-07 15:02:10.064 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 15:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 39, '2020-08-07T15:02:10.022+0800');
2020-08-07 15:02:17.442 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:03:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:03:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 15:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:03:00.022+0800');
2020-08-07 15:03:10.021 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:03:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:03:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:03:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:03:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:03:10.056 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 15:03:10.060 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 15:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-07T15:03:10.021+0800');
2020-08-07 15:03:17.445 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:04:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:04:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 15:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:04:00.021+0800');
2020-08-07 15:04:10.020 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:04:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:04:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:04:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:04:10.049 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 15:04:10.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 15:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T15:04:10.020+0800');
2020-08-07 15:04:17.447 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:05:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:05:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 15:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:05:00.021+0800');
2020-08-07 15:05:10.022 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:05:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:05:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:05:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:05:10.051 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 15:05:10.055 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 15:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T15:05:10.022+0800');
2020-08-07 15:05:17.449 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:06:00.020 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:06:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 15:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:06:00.020+0800');
2020-08-07 15:06:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:06:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:06:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:06:10.052 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 15:06:10.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 15:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-07T15:06:10.020+0800');
2020-08-07 15:06:17.452 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:07:00.011 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:07:00.016 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 15:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:07:00.011+0800');
2020-08-07 15:07:10.007 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:07:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:07:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:07:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:07:10.036 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 15:07:10.039 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 15:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T15:07:10.007+0800');
2020-08-07 15:07:17.455 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:08:00.013 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:08:00.018 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 15:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:08:00.013+0800');
2020-08-07 15:08:10.010 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:08:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:08:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:08:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:08:10.038 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 15:08:10.041 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 15:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-07T15:08:10.010+0800');
2020-08-07 15:08:17.460 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596783504222_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:08:53.351 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596783504222 paused.
2020-08-07 15:08:53.363 febs [Thread-32] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:08:53.367 febs [Thread-32] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:08:53.367 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596783504222 shutting down.
2020-08-07 15:08:53.367 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596783504222 paused.
2020-08-07 15:08:53.368 febs [Thread-32] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596783504222 shutdown complete.
2020-08-07 15:08:53.374 febs [Thread-32] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:08:53.374 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:08:53.379 febs [Thread-32] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:09:01.426 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6948 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:09:01.430 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:09:03.188 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:09:03.191 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:09:03.260 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-07 15:09:03.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.086 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e60aa678] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7c7c35a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$6074acd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1529fde1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@26463a6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$39fea093] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.223 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:09:04.678 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:09:04.694 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:09:04.703 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:09:04.704 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:09:04.711 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:09:04.831 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:09:04.831 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3323 ms
2020-08-07 15:09:05.260 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:09:05.269 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:09:05.776 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:09:05.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:09:05.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:09:05.776 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:09:06.361 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:09:08.594 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:09:08.631 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:09:08.646 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:09:08.646 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:09:08.650 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:09:08.652 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:09:08.654 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596784148632'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:09:08.654 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:09:08.654 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:09:08.655 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@70f8d217
2020-08-07 15:09:08.742 febs [main] INFO  p6spy - 2020-08-07 15:09:08 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:09:10.799 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:09:11.093 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:09:11.094 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:09:11.179 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@174aabb2, org.springframework.security.web.context.SecurityContextPersistenceFilter@7acf07b2, org.springframework.security.web.header.HeaderWriterFilter@72155315, org.springframework.security.web.authentication.logout.LogoutFilter@6a3c1b56, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@737ae41a, org.springframework.security.web.session.ConcurrentSessionFilter@5af47414, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54fbaa65, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9e092b5, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5f3fafca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@33b4c775, org.springframework.security.web.session.SessionManagementFilter@3bf4b018, org.springframework.security.web.access.ExceptionTranslationFilter@673e1cf2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ae85aad]
2020-08-07 15:09:11.239 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:09:11.259 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:09:11.260 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:09:11.715 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:09:12.516 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:09:12.532 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:09:12.600 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:09:12.623 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:09:12.638 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:09:12.672 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:09:12.677 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.098 seconds (JVM running for 13.457)
2020-08-07 15:09:12.702 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:09:12.702 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:09:12.702 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:09:12.702 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:09:12.702 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:09:13.187 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:09:13.188 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:09:13.205 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 15:09:13 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 15:09:13.209 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-07 15:09:13.624 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:09:13.637 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:09:13.637 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596783504222"'s failed in-progress jobs.
2020-08-07 15:09:13.654 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784148632 started.
2020-08-07 15:09:13.660 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784148632_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 15:09:13.730 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784148632_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:09:33.729 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:7FE7EECC2403FB5FE35C8D9A1A2FE98D
2020-08-07 15:09:37.387 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:BAF87D4FB1284CBDBA6437C503997E98
2020-08-07 15:09:40.609 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:09:40 | 耗时 14 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:09:40.703 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:09:40 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:09:40.719 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:09:40 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:09:41.225 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:09:41 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:09:41.413 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:09:41 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:09:41.359+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:09:41.437 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:09:41 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:09:41.442 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:09:41 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:09:41.446 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:09:41 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:09:41.453 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:09:41 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:09:41.459 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:09:41 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:09:42.667 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:09:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:09:42.720 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:09:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:09:54.795 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:09:54 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:09:54.810 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:09:54 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:09:54.822 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:09:54 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:09:54.829 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:09:54 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:09:54.834 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:09:54 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:10:00.038 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:10:00.056 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T15:10:00.038+0800');
2020-08-07 15:10:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:10:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:10:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:10:10.078 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:10:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:10:10.081 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：58 毫秒
2020-08-07 15:10:10.085 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 58, '2020-08-07T15:10:10.023+0800');
2020-08-07 15:10:13.730 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784148632_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:10:14.754 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:10:14 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:10:14.763 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:10:14 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '1');
2020-08-07 15:10:14.770 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:10:14 | 耗时 0 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '2');
2020-08-07 15:10:27.789 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:10:27 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:10:27.795 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:10:27 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:10:27.800 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:10:27 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:10:27.808 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:10:27 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:10:27.813 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:10:27 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:11:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:11:00.028 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:11:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:11:00.022+0800');
2020-08-07 15:11:10.022 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:11:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:11:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:11:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:11:10.057 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 15:11:10.061 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T15:11:10.022+0800');
2020-08-07 15:11:13.731 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784148632_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:12:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:12:00.033 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:12:00.024+0800');
2020-08-07 15:12:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:12:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:12:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:12:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:12:10.056 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 15:12:10.060 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 15:12:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-07T15:12:10.021+0800');
2020-08-07 15:12:13.732 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784148632_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:13:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:13:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 15:13:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:13:00.022+0800');
2020-08-07 15:13:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:13:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:13:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:13:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:13:10.048 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 15:13:10.051 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 15:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T15:13:10.018+0800');
2020-08-07 15:13:13.735 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784148632_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:13:46.611 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784148632 paused.
2020-08-07 15:13:46.626 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:13:46.629 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:13:46.630 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784148632 shutting down.
2020-08-07 15:13:46.630 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784148632 paused.
2020-08-07 15:13:46.631 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784148632 shutdown complete.
2020-08-07 15:13:46.636 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:13:46.637 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:13:46.642 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:13:54.306 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 15180 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:13:54.311 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:13:56.023 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:13:56.025 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:13:56.091 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51ms. Found 0 repository interfaces.
2020-08-07 15:13:56.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:56.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e7a8ca3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:56.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:56.912 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:56.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7e1a5969] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:56.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$6212d098] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:57.010 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$16c821a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:57.017 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:57.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@8383a14' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:57.024 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3b9cc455] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:57.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:13:57.462 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:13:57.478 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:13:57.487 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:13:57.488 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:13:57.495 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:13:57.614 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:13:57.614 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3215 ms
2020-08-07 15:13:58.022 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:13:58.033 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:13:58.541 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:13:58.542 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:13:58.542 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:13:58.542 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:13:59.131 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:14:01.380 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:14:01.417 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:14:01.432 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:14:01.432 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:14:01.436 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:14:01.438 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:14:01.439 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596784441418'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:14:01.439 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:14:01.439 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:14:01.440 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1231f25c
2020-08-07 15:14:01.530 febs [main] INFO  p6spy - 2020-08-07 15:14:01 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:14:03.595 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:14:03.886 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:14:03.887 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:14:03.887 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:14:03.887 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:14:03.887 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:14:03.966 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e21c6ed, org.springframework.security.web.context.SecurityContextPersistenceFilter@46067a74, org.springframework.security.web.header.HeaderWriterFilter@28effa3f, org.springframework.security.web.authentication.logout.LogoutFilter@e30a8ef, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@613f48de, org.springframework.security.web.session.ConcurrentSessionFilter@55a29589, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@362e6fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64a8851a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@d8751de, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75c30a4f, org.springframework.security.web.session.SessionManagementFilter@2db4a84a, org.springframework.security.web.access.ExceptionTranslationFilter@600a1270, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d5fc340]
2020-08-07 15:14:04.021 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:14:04.038 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:14:04.040 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:14:04.494 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:14:05.289 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:14:05.306 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:14:05.378 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:14:05.402 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:14:05.416 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:14:05.451 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:14:05.456 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.075 seconds (JVM running for 13.354)
2020-08-07 15:14:05.481 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:14:05.481 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:14:05.481 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:14:05.481 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:14:05.481 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:14:06.010 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:14:06.010 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:14:06.025 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 15:14:06 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 15:14:06.028 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-08-07 15:14:06.404 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:14:06.412 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:14:06.412 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596784148632"'s failed in-progress jobs.
2020-08-07 15:14:06.428 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784441418 started.
2020-08-07 15:14:06.434 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:14:06.473 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:14:06.524 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:14:06 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T15:14:06.473+0800');
2020-08-07 15:14:10.022 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:14:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:14:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:14:10.083 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:14:10.117 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:14:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:14:10.120 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：98 毫秒
2020-08-07 15:14:10.124 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 98, '2020-08-07T15:14:10.022+0800');
2020-08-07 15:14:18.433 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:14:19.253 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:8A45D21F528F09E3470AC7ECD1E2F68A
2020-08-07 15:14:22.826 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:14:22 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:14:22.923 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:14:22 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:14:22.939 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:14:22 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:14:23.435 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:14:23 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:14:23.587 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:23 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:14:23.573+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:14:23.611 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:23 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:14:23.615 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:14:23.619 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:23 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:14:23.628 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:14:23.635 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:14:25.094 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:14:25 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:14:25.110 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:14:25 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:14:26.113 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:14:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:14:26.126 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:14:26.136 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:14:26.141 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:14:26.145 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:14:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE id = 2;
2020-08-07 15:14:34.387 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:14:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:14:34.393 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:14:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '2');
2020-08-07 15:14:34.400 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:14:34 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (2, 2, 1, '1', '2020-08-07T15:14:34.396', '1', '2020-08-07T15:14:34.396');
2020-08-07 15:14:37.702 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:14:37.708 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:14:37.712 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:14:37.717 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:14:37.720 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:14:37.725 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:14:37.729 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:14:37.734 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:14:37 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:14:45.699 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:14:45 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:14:45.775 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:14:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:14:45.778 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:14:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:14:46.662 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:14:46.667 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:46 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:14:46.671 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:14:46.675 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:14:46 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:14:53.363 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:14:53 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:14:53.369 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:14:53 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:14:53.373 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:14:53 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:14:53.378 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:14:53 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:15:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:15:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:15:00.023+0800');
2020-08-07 15:15:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:15:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:15:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:15:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:15:10.050 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:15:10.054 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:15:10.019+0800');
2020-08-07 15:15:18.435 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:16:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:16:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:16:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:16:00.020+0800');
2020-08-07 15:16:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:16:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:16:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:16:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:16:10.050 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 15:16:10.055 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 15:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T15:16:10.018+0800');
2020-08-07 15:16:18.437 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:17:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:17:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 15:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:17:00.022+0800');
2020-08-07 15:17:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:17:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:17:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:17:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:17:10.053 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 15:17:10.058 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 15:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-07T15:17:10.019+0800');
2020-08-07 15:17:18.443 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:17:34.097 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:17:34 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:17:34.175 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:17:34 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:17:34.178 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:17:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:17:35.192 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:17:35.197 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:17:35.200 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:17:35.203 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:17:35.204 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:17:35.208 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:17:35.212 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:17:35.217 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:17:35 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:17:37.985 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:17:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:17:37.991 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:17:37 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:17:37.994 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:17:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:17:38.001 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:17:38 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:18:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:18:00.028 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 15:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:18:00.023+0800');
2020-08-07 15:18:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:18:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:18:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:18:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:18:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 15:18:10.056 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 15:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T15:18:10.020+0800');
2020-08-07 15:18:18.443 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:19:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:19:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 15:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:19:00.020+0800');
2020-08-07 15:19:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:19:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:19:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:19:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:19:10.050 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 15:19:10.054 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 15:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T15:19:10.017+0800');
2020-08-07 15:19:18.444 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:20:00.015 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:20:00.022 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 15:20:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:20:00.015+0800');
2020-08-07 15:20:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:20:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:20:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:20:10.057 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:20:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:20:10.060 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：39 毫秒
2020-08-07 15:20:10.065 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 15:20:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 39, '2020-08-07T15:20:10.021+0800');
2020-08-07 15:20:18.447 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784441418_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:21:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:21:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 15:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:21:00.021+0800');
2020-08-07 15:21:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:21:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:21:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:21:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:21:10.049 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:21:10.053 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 15:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:21:10.018+0800');
2020-08-07 15:21:17.091 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784441418 paused.
2020-08-07 15:21:17.103 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:21:17.107 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:21:17.107 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784441418 shutting down.
2020-08-07 15:21:17.107 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784441418 paused.
2020-08-07 15:21:17.108 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784441418 shutdown complete.
2020-08-07 15:21:17.114 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:21:17.115 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:21:17.120 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:21:26.895 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 18180 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:21:26.899 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:21:28.579 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:21:28.583 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:21:28.649 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-08-07 15:21:29.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.486 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bcf86bea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.497 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.513 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5369fb19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$37627248] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.599 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ec17c353] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49c83262' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$10ec6605] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:29.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:21:30.068 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:21:30.088 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:21:30.099 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:21:30.099 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:21:30.107 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:21:30.238 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:21:30.238 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3259 ms
2020-08-07 15:21:30.681 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:21:30.691 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:21:31.203 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:21:31.204 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:21:31.204 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:21:31.204 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:21:31.825 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:21:34.117 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:21:34.157 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:21:34.170 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:21:34.171 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:21:34.174 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:21:34.176 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:21:34.177 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596784894158'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:21:34.178 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:21:34.178 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:21:34.180 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1a73f3d1
2020-08-07 15:21:34.273 febs [main] INFO  p6spy - 2020-08-07 15:21:34 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:21:36.399 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:21:36.705 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:21:36.791 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4767be27, org.springframework.security.web.context.SecurityContextPersistenceFilter@60e5db1d, org.springframework.security.web.header.HeaderWriterFilter@5ee76cf2, org.springframework.security.web.authentication.logout.LogoutFilter@6debf1b8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6e5df971, org.springframework.security.web.session.ConcurrentSessionFilter@487ee2a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32eac39b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26b150cd, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2ca464bb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46f041cb, org.springframework.security.web.session.SessionManagementFilter@4fce655d, org.springframework.security.web.access.ExceptionTranslationFilter@4a5c6b30, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@53570fff]
2020-08-07 15:21:36.853 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:21:36.874 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:21:36.875 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:21:37.337 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:21:38.282 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:21:38.324 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:21:38.451 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:21:38.538 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:21:38.564 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:21:38.703 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:21:38.711 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.717 seconds (JVM running for 14.003)
2020-08-07 15:21:38.762 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:21:38.762 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:21:38.762 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:21:38.762 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:21:38.762 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:21:39.074 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:21:39.074 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:21:39.098 febs [RMI TCP Connection(4)-192.168.1.113] INFO  p6spy - 2020-08-07 15:21:39 | 耗时 1 ms | SQL 语句：
select 1;
2020-08-07 15:21:39.100 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 26 ms
2020-08-07 15:21:39.555 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:21:39.567 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:21:39.567 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596784441418"'s failed in-progress jobs.
2020-08-07 15:21:39.583 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784894158 started.
2020-08-07 15:21:39.589 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784894158_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:21:42.078 febs [http-nio-8099-exec-9] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:DD506D8F896D7C5A55D07F6C47947C30
2020-08-07 15:21:46.803 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:21:46 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:21:46.921 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:21:46 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:21:46.936 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:21:46 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:21:47.460 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:21:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:21:47.655 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:21:47 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:21:47.600+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:21:47.715 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:21:47 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:21:47.722 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:21:47 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:21:47.727 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:21:47 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:21:47.736 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:21:47 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:21:47.741 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:21:47 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:21:49.421 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:21:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:21:49.437 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:21:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:21:50.554 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:21:50 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:21:50.568 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:21:50 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:21:50.577 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:21:50 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:21:50.585 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:21:50 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:21:50.590 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:21:50 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:00.041 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:22:00.060 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:22:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T15:22:00.041+0800');
2020-08-07 15:22:03.086 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:22:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:22:03.092 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:22:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:22:03.096 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:22:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:03.101 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:22:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:22:03.106 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:22:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:22:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:22:10.039 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:22:10.044 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:22:10.050 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:22:10.054 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:22:10.059 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:10.090 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:22:10.093 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：73 毫秒
2020-08-07 15:22:10.100 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 73, '2020-08-07T15:22:10.020+0800');
2020-08-07 15:22:15.587 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784894158_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:22:26.448 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:22:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:22:26.465 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:22:26 | 耗时 10 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:22:26.471 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:22:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:26.474 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:22:26 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:22:26.480 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:22:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:29.697 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:22:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:22:29.704 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:22:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 15:22:29.708 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:22:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 15:22:29.712 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:22:29 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 15:22:29.719 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:22:29 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 2, 1, '1', '2020-08-07T15:22:29.715', '1', '2020-08-07T15:22:29.715');
2020-08-07 15:22:47.723 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:22:47 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:22:47.730 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:22:47 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:22:47.736 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:22:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:22:47.743 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:22:47 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:22:47.749 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:22:47 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:23:00.026 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:23:00.031 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:23:00.026+0800');
2020-08-07 15:23:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:23:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:23:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:23:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:23:10.051 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:23:10.055 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:23:10.019+0800');
2020-08-07 15:23:15.590 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784894158_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:23:28.833 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:23:28 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:23:28.841 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:23:28 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:23:28.848 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:23:28 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:23:28.855 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:23:28 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:23:28.862 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:23:28 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:23:47.067 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:23:47 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:23:47.077 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:23:47 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '2');
2020-08-07 15:23:49.841 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:23:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:23:49.847 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:23:49.852 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:23:49 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:23:49.855 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:23:49.860 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:23:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:23:56.284 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:23:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:23:56.290 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:23:56 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:23:56.294 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:23:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:23:56.299 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:23:56 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:23:56.305 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:23:56 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:24:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:24:00.027 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:24:00.022+0800');
2020-08-07 15:24:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:24:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:24:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:24:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:24:10.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 15:24:10.054 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 15:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T15:24:10.019+0800');
2020-08-07 15:24:15.592 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784894158_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:25:00.026 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:25:00.033 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 15:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:25:00.026+0800');
2020-08-07 15:25:10.016 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:25:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:25:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:25:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:25:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:25:10.051 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 15:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:25:10.016+0800');
2020-08-07 15:25:15.607 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784894158_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:26:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:26:00.029 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 15:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:26:00.023+0800');
2020-08-07 15:26:10.012 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:26:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:26:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:26:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:26:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:26:10.055 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 15:26:10.060 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 15:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 43, '2020-08-07T15:26:10.012+0800');
2020-08-07 15:26:15.609 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784894158_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:27:00.045 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:27:00.049 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 15:27:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:27:00.045+0800');
2020-08-07 15:27:10.010 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:27:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:27:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:27:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:27:10.043 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 15:27:10.046 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 15:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T15:27:10.010+0800');
2020-08-07 15:27:15.611 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596784894158_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:27:59.483 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784894158 paused.
2020-08-07 15:27:59.496 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:27:59.501 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:27:59.501 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784894158 shutting down.
2020-08-07 15:27:59.501 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784894158 paused.
2020-08-07 15:27:59.502 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596784894158 shutdown complete.
2020-08-07 15:27:59.507 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:27:59.507 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:27:59.512 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:28:09.804 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 20640 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:28:09.809 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:28:11.486 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:28:11.489 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:28:11.562 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-08-07 15:28:12.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ab3b3462] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$41acc391] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$25a53ac0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.545 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$da5a8bcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.552 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5d221b20' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ff2f2e7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:12.567 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:28:13.004 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:28:13.022 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:28:13.032 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:28:13.032 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:28:13.041 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:28:13.164 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:28:13.164 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3278 ms
2020-08-07 15:28:13.599 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:28:13.608 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:28:14.129 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:28:14.129 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:28:14.130 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:28:14.130 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:28:14.704 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:28:17.031 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:28:17.071 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:28:17.085 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:28:17.085 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:28:17.090 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:28:17.092 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:28:17.093 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596785297072'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:28:17.093 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:28:17.093 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:28:17.094 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1bcf2c64
2020-08-07 15:28:17.182 febs [main] INFO  p6spy - 2020-08-07 15:28:17 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:28:19.289 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:28:19.585 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:28:19.586 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:28:19.668 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c81e7c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d0ce151, org.springframework.security.web.header.HeaderWriterFilter@4fe9fb65, org.springframework.security.web.authentication.logout.LogoutFilter@6bf34912, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3b171fbd, org.springframework.security.web.session.ConcurrentSessionFilter@7962a364, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b569858, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@240e61, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@20dc763b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fe8e318, org.springframework.security.web.session.SessionManagementFilter@6fb51e17, org.springframework.security.web.access.ExceptionTranslationFilter@6debf1b8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74130456]
2020-08-07 15:28:19.734 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:28:19.753 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:28:19.754 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:28:20.225 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:28:21.031 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:28:21.049 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:28:21.124 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:28:21.148 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:28:21.163 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:28:21.198 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:28:21.203 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.454 seconds (JVM running for 13.738)
2020-08-07 15:28:21.232 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:28:21.232 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:28:21.232 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:28:21.232 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:28:21.232 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:28:22.054 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:28:22.054 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:28:22.074 febs [RMI TCP Connection(4)-192.168.1.113] INFO  p6spy - 2020-08-07 15:28:22 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 15:28:22.076 febs [RMI TCP Connection(5)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-07 15:28:22.149 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:28:22.159 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:28:22.160 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596784894158"'s failed in-progress jobs.
2020-08-07 15:28:22.180 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785297072 started.
2020-08-07 15:28:22.196 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 15:28:22.315 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:28:40.254 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:4D600173B6B85D5BA87AD7FEA7B31587
2020-08-07 15:28:57.567 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:7BBFA36CAFE393812A32D12885F1EBC7
2020-08-07 15:29:00.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:29:00.095 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:29:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 5, '2020-08-07T15:29:00.042+0800');
2020-08-07 15:29:00.990 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:29:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:29:01.095 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:29:01.112 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:29:01.613 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:29:01.794 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:29:01.746+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:29:01.817 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:29:01.823 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:29:01.827 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:29:01.836 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:29:01.841 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:29:01 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:29:03.287 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:29:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:29:03.304 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:29:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:29:04.958 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:29:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:29:04.971 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:29:04 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:29:04.982 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:29:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:29:04.987 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:29:04 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:29:04.991 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:29:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:29:10.015 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:29:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:29:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:29:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:29:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:29:10.076 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：61 毫秒
2020-08-07 15:29:10.081 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 61, '2020-08-07T15:29:10.015+0800');
2020-08-07 15:29:10.316 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:29:12.783 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:29:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:29:12.787 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:29:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:29:12.791 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:29:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:29:12.797 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:29:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:29:12.803 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:29:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:30:00.023 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:30:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:30:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:30:00.023+0800');
2020-08-07 15:30:10.011 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:30:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:30:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:30:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:30:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:30:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 15:30:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T15:30:10.010+0800');
2020-08-07 15:30:10.319 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:31:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:31:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:31:00.021+0800');
2020-08-07 15:31:10.011 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:31:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:31:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:31:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:31:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 15:31:10.047 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 15:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T15:31:10.011+0800');
2020-08-07 15:31:10.320 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:32:00.023 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:32:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 15:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:32:00.023+0800');
2020-08-07 15:32:10.008 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:32:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:32:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:32:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:32:10.039 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:32:10.043 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 15:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:32:10.008+0800');
2020-08-07 15:32:10.321 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:33:00.046 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:33:00.050 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 15:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:33:00.046+0800');
2020-08-07 15:33:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:33:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:33:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:33:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:33:10.050 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 15:33:10.054 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 15:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T15:33:10.018+0800');
2020-08-07 15:33:10.325 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:34:00.024 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:34:00.029 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 15:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:34:00.024+0800');
2020-08-07 15:34:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:34:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:34:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:34:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:34:10.050 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 15:34:10.053 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 15:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T15:34:10.017+0800');
2020-08-07 15:34:10.325 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:35:00.045 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:35:00.050 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 15:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:35:00.045+0800');
2020-08-07 15:35:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:35:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:35:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:35:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:35:10.048 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 15:35:10.051 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 15:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T15:35:10.019+0800');
2020-08-07 15:35:10.330 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:36:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:36:00.026 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 15:36:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:36:00.022+0800');
2020-08-07 15:36:10.010 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:36:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:36:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:36:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:36:10.041 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:36:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 15:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:36:10.010+0800');
2020-08-07 15:36:10.331 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:37:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:37:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 15:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:37:00.022+0800');
2020-08-07 15:37:10.008 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:37:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:37:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:37:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:37:10.036 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 15:37:10.039 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 15:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T15:37:10.008+0800');
2020-08-07 15:37:10.332 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:38:00.019 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:38:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 15:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:38:00.018+0800');
2020-08-07 15:38:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:38:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:38:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:38:10.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 15:38:10.052 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 15:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T15:38:10.019+0800');
2020-08-07 15:38:10.334 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:39:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:39:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:39:00.022+0800');
2020-08-07 15:39:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:39:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:39:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:39:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:39:10.054 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 15:39:10.057 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 34, '2020-08-07T15:39:10.020+0800');
2020-08-07 15:39:10.338 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785297072_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:39:25.739 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785297072 paused.
2020-08-07 15:39:25.751 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:39:25.755 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:39:25.755 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785297072 shutting down.
2020-08-07 15:39:25.756 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785297072 paused.
2020-08-07 15:39:25.757 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785297072 shutdown complete.
2020-08-07 15:39:25.763 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:39:25.763 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:39:25.769 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:39:33.540 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 6832 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:39:33.544 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:39:35.318 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:39:35.321 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:39:35.388 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-08-07 15:39:36.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2b14270d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.303 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c185b63c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$a57e2d6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5a337e76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.398 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4e6cbdf1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7f082128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:39:36.870 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:39:36.888 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:39:36.899 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:39:36.899 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:39:36.907 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:39:37.030 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:39:37.030 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3406 ms
2020-08-07 15:39:37.493 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:39:37.502 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:39:38.070 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:39:38.071 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:39:38.071 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:39:38.071 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:39:38.660 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:39:41.042 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:39:41.089 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:39:41.104 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:39:41.104 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:39:41.109 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:39:41.111 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:39:41.112 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596785981090'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:39:41.112 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:39:41.112 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:39:41.114 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@71817f66
2020-08-07 15:39:41.204 febs [main] INFO  p6spy - 2020-08-07 15:39:41 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:39:43.329 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:39:43.634 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:39:43.635 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:39:43.635 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:39:43.635 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:39:43.635 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:39:43.635 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:39:43.635 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:39:43.717 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77a1df4d, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ae91bcc, org.springframework.security.web.header.HeaderWriterFilter@4767be27, org.springframework.security.web.authentication.logout.LogoutFilter@1ece052b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@471d6571, org.springframework.security.web.session.ConcurrentSessionFilter@93c66ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5625e7e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@643fed50, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5692863, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5bbb0a25, org.springframework.security.web.session.SessionManagementFilter@46baac0d, org.springframework.security.web.access.ExceptionTranslationFilter@3c7787a7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@73502d5e]
2020-08-07 15:39:43.777 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:39:43.795 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:39:43.796 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:39:44.269 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:39:45.091 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:39:45.108 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:39:45.179 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:39:45.203 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:39:45.218 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:39:45.253 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:39:45.259 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.648 seconds (JVM running for 14.068)
2020-08-07 15:39:45.286 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:39:45.286 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:39:45.286 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:39:45.286 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:39:45.286 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:39:45.763 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:39:45.763 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:39:45.783 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 15:39:45 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 15:39:45.784 febs [RMI TCP Connection(3)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-07 15:39:46.205 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:39:46.214 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:39:46.215 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596785297072"'s failed in-progress jobs.
2020-08-07 15:39:46.229 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785981090 started.
2020-08-07 15:39:46.235 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785981090_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:40:00.043 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:40:00.097 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:40:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T15:40:00.043+0800');
2020-08-07 15:40:06.259 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:ACD088C49DCC06C78A6406B36D66D769
2020-08-07 15:40:10.026 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:40:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:40:10.110 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:40:10.152 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:40:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:40:10.155 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：129 毫秒
2020-08-07 15:40:10.163 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:40:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 129, '2020-08-07T15:40:10.026+0800');
2020-08-07 15:40:10.235 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785981090_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:40:10.287 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:9AFEFFB484229C0063E8E6147C478063
2020-08-07 15:40:13.299 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:40:13 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:40:13.411 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:40:13 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:40:13.426 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:40:13 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:40:13.924 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:40:13 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:40:14.069 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:40:14 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:40:14.056+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:40:14.082 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:40:14 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:40:14.086 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:40:14 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:40:14.091 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:40:14 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:40:14.099 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:40:14 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:40:14.106 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:40:14 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:40:15.355 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:40:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:40:15.371 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:40:15 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:40:16.463 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:40:16.476 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:40:16.486 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:40:16.490 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:40:16.494 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:40:16.502 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-07 15:40:16.507 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 15:40:16.511 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:40:16 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 15:41:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:41:00.026 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:41:00.022+0800');
2020-08-07 15:41:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:41:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:41:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:41:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:41:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:41:10.053 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 15:41:10.057 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-07T15:41:10.018+0800');
2020-08-07 15:41:10.238 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596785981090_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:42:00.023 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:42:00.028 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:42:00.023+0800');
2020-08-07 15:42:08.684 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785981090 paused.
2020-08-07 15:42:08.696 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:42:08.701 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:42:08.701 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785981090 shutting down.
2020-08-07 15:42:08.701 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785981090 paused.
2020-08-07 15:42:08.702 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596785981090 shutdown complete.
2020-08-07 15:42:08.710 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:42:08.711 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:42:08.716 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:42:16.174 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8044 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:42:16.177 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:42:17.878 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:42:17.882 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:42:17.954 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-07 15:42:18.572 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e63a3f9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.755 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.759 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.772 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7cabceca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$60a445f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.863 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$15599704] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6f24ce45' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3a2e39b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:18.885 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:42:19.322 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:42:19.338 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:42:19.348 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:42:19.348 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:42:19.355 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:42:19.470 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:42:19.470 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3216 ms
2020-08-07 15:42:19.924 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:42:19.934 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:42:20.453 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:42:20.454 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:42:20.454 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:42:20.454 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:42:21.019 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:42:23.257 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:42:23.294 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:42:23.310 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:42:23.310 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:42:23.314 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:42:23.317 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:42:23.318 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596786143295'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:42:23.318 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:42:23.318 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:42:23.319 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@637c8632
2020-08-07 15:42:23.407 febs [main] INFO  p6spy - 2020-08-07 15:42:23 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:42:25.480 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:42:25.771 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:42:25.771 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:42:25.771 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:42:25.771 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:42:25.771 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:42:25.771 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:42:25.771 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:42:25.772 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:42:25.855 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21f9a305, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d01fa0c, org.springframework.security.web.header.HeaderWriterFilter@1d5fc340, org.springframework.security.web.authentication.logout.LogoutFilter@b0e6d4e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1eda12b3, org.springframework.security.web.session.ConcurrentSessionFilter@1b0fc8b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e3acd7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78723798, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@193792e6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ff87203, org.springframework.security.web.session.SessionManagementFilter@33ce081a, org.springframework.security.web.access.ExceptionTranslationFilter@edb8f0c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@a165c11]
2020-08-07 15:42:25.914 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:42:25.933 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:42:25.934 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:42:26.397 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:42:27.176 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:42:27.198 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:42:27.280 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:42:27.305 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:42:27.319 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:42:27.354 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:42:27.359 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.083 seconds (JVM running for 13.341)
2020-08-07 15:42:27.387 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:42:27.387 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:42:27.387 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:42:27.387 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:42:27.387 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:42:27.716 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:42:27.716 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:42:27.737 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 15:42:27 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 15:42:27.739 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-07 15:42:28.306 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:42:28.316 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:42:28.317 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596785981090"'s failed in-progress jobs.
2020-08-07 15:42:28.331 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786143295 started.
2020-08-07 15:42:28.338 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786143295_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:42:32.968 febs [http-nio-8099-exec-3] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:E948DC365C7F1148B583A16FB3B715C5
2020-08-07 15:42:36.186 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:42:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:42:36.290 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:42:36 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:42:36.305 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:42:36 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:42:36.805 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:42:36 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:42:36.993 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:42:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:42:36.940+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:42:37.017 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:42:37 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:42:37.022 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:42:37 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:42:37.026 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:42:37 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:42:37.035 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:42:37 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:42:37.039 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:42:37 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:42:38.472 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:42:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:42:38.488 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:42:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:42:39.649 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:42:39.662 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:42:39.672 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:42:39.679 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:42:39.684 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:42:39.691 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-07 15:42:39.696 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 15:42:39.700 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:42:39 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 15:42:49.603 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:42:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:42:49.612 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:42:49 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 15:42:49.616 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:42:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 15:42:49.621 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:42:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 15:42:52.172 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:42:52.177 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:42:52.183 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:42:52.187 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:42:52.191 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:42:52.196 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-07 15:42:52.200 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 15:42:52.205 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:42:52 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 15:43:00.039 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:43:00.057 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:43:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T15:43:00.039+0800');
2020-08-07 15:43:00.108 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:43:00 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:43:00.120 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:43:00 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 15:43:00.130 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:43:00 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 15:43:00.134 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:43:00 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 15:43:01.504 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:43:01.510 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:43:01.514 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:43:01.518 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:43:01.522 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:43:01.530 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-07 15:43:01.536 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 15:43:01.540 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:43:01 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 15:43:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:43:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:43:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:43:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:43:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:43:10.079 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：56 毫秒
2020-08-07 15:43:10.084 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:43:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 56, '2020-08-07T15:43:10.023+0800');
2020-08-07 15:43:12.288 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:43:12.293 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:43:12.298 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:43:12.304 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:43:12.307 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:43:12.313 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 1);
2020-08-07 15:43:12.317 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 2);
2020-08-07 15:43:12.321 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:43:12 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 3);
2020-08-07 15:43:16.336 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786143295_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:44:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:44:00.027 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:44:00.022+0800');
2020-08-07 15:44:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:44:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:44:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:44:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:44:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 15:44:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 35, '2020-08-07T15:44:10.020+0800');
2020-08-07 15:44:16.339 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786143295_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:45:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:45:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:45:00.021+0800');
2020-08-07 15:45:10.022 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:45:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:45:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:45:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:45:10.053 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:45:10.058 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 15:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:45:10.022+0800');
2020-08-07 15:45:16.341 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786143295_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:46:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:46:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 15:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:46:00.022+0800');
2020-08-07 15:46:10.022 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:46:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:46:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:46:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:46:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 15:46:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 15:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T15:46:10.022+0800');
2020-08-07 15:46:16.343 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786143295_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:47:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:47:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 15:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:47:00.019+0800');
2020-08-07 15:47:10.022 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:47:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:47:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:47:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:47:10.052 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 15:47:10.055 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 15:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T15:47:10.022+0800');
2020-08-07 15:47:16.345 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786143295_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:47:58.933 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786143295 paused.
2020-08-07 15:47:58.945 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:47:58.949 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:47:58.950 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786143295 shutting down.
2020-08-07 15:47:58.950 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786143295 paused.
2020-08-07 15:47:58.950 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786143295 shutdown complete.
2020-08-07 15:47:58.956 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:47:58.956 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:47:58.961 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:48:07.176 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 11112 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:48:07.180 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:48:08.809 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:48:08.811 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:48:08.879 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-08-07 15:48:09.509 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.677 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6736aa94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.686 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fda839c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.733 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e1a0b0f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.781 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$965601fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.793 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@24aedcc5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.796 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bb2aa4af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:09.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:48:10.243 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:48:10.259 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:48:10.269 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:48:10.269 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:48:10.277 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:48:10.399 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:48:10.399 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3151 ms
2020-08-07 15:48:10.810 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:48:10.820 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:48:11.352 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:48:11.352 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:48:11.352 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:48:11.352 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:48:11.944 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:48:14.169 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:48:14.206 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:48:14.220 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:48:14.220 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:48:14.224 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:48:14.226 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:48:14.227 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596786494207'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:48:14.227 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:48:14.227 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:48:14.228 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@64a4739
2020-08-07 15:48:14.316 febs [main] INFO  p6spy - 2020-08-07 15:48:14 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:48:16.383 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:48:16.674 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:48:16.675 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:48:16.675 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:48:16.675 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:48:16.758 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6414eb98, org.springframework.security.web.context.SecurityContextPersistenceFilter@19b4dd60, org.springframework.security.web.header.HeaderWriterFilter@4687fee7, org.springframework.security.web.authentication.logout.LogoutFilter@6e0dec27, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1f4fa465, org.springframework.security.web.session.ConcurrentSessionFilter@2b370ca9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4138af7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5692863, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6b888692, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61a17f3, org.springframework.security.web.session.SessionManagementFilter@207f7baa, org.springframework.security.web.access.ExceptionTranslationFilter@376bae20, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@768f2398]
2020-08-07 15:48:16.822 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:48:16.843 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:48:16.845 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:48:17.343 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:48:18.666 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:48:18.699 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:48:18.887 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:48:18.940 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:48:18.987 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:48:19.071 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:48:19.084 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.791 seconds (JVM running for 14.084)
2020-08-07 15:48:19.143 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:48:19.144 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:48:19.144 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:48:19.144 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:48:19.144 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:48:19.360 febs [http-nio-8099-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:48:19.360 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:48:19.382 febs [http-nio-8099-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-08-07 15:48:19.456 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:91833C88F0B87902893E4C30F5F154B2
2020-08-07 15:48:19.777 febs [RMI TCP Connection(5)-192.168.1.113] INFO  p6spy - 2020-08-07 15:48:19 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 15:48:19.971 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:48:19.987 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786494207 started.
2020-08-07 15:48:19.999 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling the first 1 triggers that missed their scheduled fire-time.  More misfired triggers remain to be processed.
2020-08-07 15:48:20.070 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:48:22.503 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:48:22 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:48:22.603 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:48:22 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:48:22.618 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:48:22 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:48:23.095 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:48:23 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:48:23.285 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:48:23 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:48:23.232+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:48:23.343 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:48:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:48:23.347 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:48:23 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:48:23.352 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:48:23 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:48:23.360 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:48:23 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:48:23.366 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:48:23 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:48:25.649 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:48:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:48:25.667 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:48:25 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:48:26.928 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:48:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:48:26.941 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:48:26 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:48:26.952 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:48:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:48:26.958 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:48:26 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:48:26.963 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:48:26 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:48:34.997 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:48:34.997 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596786143295"'s failed in-progress jobs.
2020-08-07 15:48:36.849 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:48:36 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:48:36.856 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:48:36 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 15:48:36.860 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:48:36 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 15:48:36.865 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:48:36 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 15:48:36.872 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 15:48:36 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 1, 1, '1', '2020-08-07T15:48:36.868', '1', '2020-08-07T15:48:36.868');
2020-08-07 15:48:37.969 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:48:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:48:37.973 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:48:37 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:48:37.979 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:48:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:48:37.983 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:48:37 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:48:37.987 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:48:37 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:48:44.061 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:48:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:48:44.066 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:48:44.070 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:48:44.075 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:48:44 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:48:44.081 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:48:44 | 耗时 1 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:49:00.037 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:49:00.054 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:49:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T15:49:00.037+0800');
2020-08-07 15:49:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:49:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:49:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:49:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:49:10.072 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：52 毫秒
2020-08-07 15:49:10.076 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 52, '2020-08-07T15:49:10.020+0800');
2020-08-07 15:49:20.072 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:50:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:50:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 15:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:50:00.014+0800');
2020-08-07 15:50:10.008 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:50:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:50:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:50:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:50:10.043 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 15:50:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 15:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T15:50:10.008+0800');
2020-08-07 15:50:20.073 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:51:00.047 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:51:00.051 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 15:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:51:00.047+0800');
2020-08-07 15:51:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:51:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:51:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:51:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:51:10.051 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 15:51:10.056 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 15:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-07T15:51:10.018+0800');
2020-08-07 15:51:20.075 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:52:00.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:52:00.048 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 15:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:52:00.044+0800');
2020-08-07 15:52:10.020 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:52:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:52:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:52:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 15:52:10.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 15:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T15:52:10.020+0800');
2020-08-07 15:52:20.079 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:53:00.014 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:53:00.019 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 15:53:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:53:00.014+0800');
2020-08-07 15:53:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:53:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:53:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:53:10.059 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:53:10.062 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 15:53:10.065 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 15:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-07T15:53:10.020+0800');
2020-08-07 15:53:20.082 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:54:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:54:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 15:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:54:00.021+0800');
2020-08-07 15:54:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:54:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:54:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:54:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:54:10.048 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 15:54:10.052 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 15:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T15:54:10.017+0800');
2020-08-07 15:54:20.084 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:55:00.019 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:55:00.025 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 15:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T15:55:00.019+0800');
2020-08-07 15:55:04.711 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:55:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:55:04.717 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:55:04 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:55:04.721 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:55:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:55:04.724 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:55:04 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:55:04.727 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:55:04 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:55:10.023 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:55:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:55:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:55:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:55:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:55:10.051 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 15:55:10.055 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 15:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T15:55:10.023+0800');
2020-08-07 15:55:20.085 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:55:57.925 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:55:57 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:55:57.931 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:55:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:55:57.934 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:55:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:55:57.937 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:55:57 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:55:57.941 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:55:57 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:56:50.346 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:56:50.346 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:57:01.780 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 15:57:01 | 耗时 7693 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1406, '2020-08-07T15:56:50.346+0800');
2020-08-07 15:57:08.239 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:57:08.246 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 15:57:08 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:57:08.239+0800');
2020-08-07 15:57:10.007 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:57:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:57:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:57:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:57:10.040 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 15:57:10.044 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 15:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T15:57:10.007+0800');
2020-08-07 15:57:16.188 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:57:49.752 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:57:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:57:49.756 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:57:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:57:49.760 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:57:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:57:49.764 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:57:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:57:49.768 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:57:49 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:58:26.818 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596786494207_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:58:26.819 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:58:26.825 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 15:58:26 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T15:58:26.819+0800');
2020-08-07 15:58:26.854 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786494207 paused.
2020-08-07 15:58:26.866 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:58:26.870 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 15:58:26.870 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786494207 shutting down.
2020-08-07 15:58:26.870 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786494207 paused.
2020-08-07 15:58:26.872 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596786494207 shutdown complete.
2020-08-07 15:58:26.879 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 15:58:26.879 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 15:58:26.888 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 15:58:34.330 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 1908 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 15:58:34.334 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 15:58:36.015 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 15:58:36.018 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 15:58:36.089 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 0 repository interfaces.
2020-08-07 15:58:36.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:36.925 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9a41c50e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:36.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:36.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:36.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$30b3543d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:36.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$14abcb6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:37.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c9611c77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:37.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:37.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@53f495f0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:37.047 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ee35bf29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:37.055 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 15:58:37.486 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 15:58:37.505 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 15:58:37.515 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 15:58:37.515 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 15:58:37.522 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 15:58:37.643 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 15:58:37.644 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3227 ms
2020-08-07 15:58:38.092 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 15:58:38.103 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 15:58:38.634 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 15:58:38.634 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 15:58:38.635 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 15:58:38.635 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 15:58:39.206 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 15:58:41.448 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 15:58:41.485 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 15:58:41.500 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 15:58:41.500 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 15:58:41.504 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 15:58:41.507 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 15:58:41.508 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596787121486'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 15:58:41.508 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 15:58:41.508 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 15:58:41.510 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7bd7c4cf
2020-08-07 15:58:41.597 febs [main] INFO  p6spy - 2020-08-07 15:58:41 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 15:58:43.789 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 15:58:44.102 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 15:58:44.103 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 15:58:44.185 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ad4ef13, org.springframework.security.web.context.SecurityContextPersistenceFilter@230dd372, org.springframework.security.web.header.HeaderWriterFilter@5b312863, org.springframework.security.web.authentication.logout.LogoutFilter@eb66b47, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7236213e, org.springframework.security.web.session.ConcurrentSessionFilter@3074575a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51c15508, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@280f061e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4b20a8e4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29280ca6, org.springframework.security.web.session.SessionManagementFilter@4b6fc231, org.springframework.security.web.access.ExceptionTranslationFilter@24be6e34, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f09cb98]
2020-08-07 15:58:44.245 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 15:58:44.263 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 15:58:44.265 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 15:58:44.730 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 15:58:45.530 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 15:58:45.548 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 15:58:45.618 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 15:58:45.642 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 15:58:45.655 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 15:58:45.691 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 15:58:45.696 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.291 seconds (JVM running for 13.591)
2020-08-07 15:58:45.723 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 15:58:45.723 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 15:58:45.723 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 15:58:45.723 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 15:58:45.723 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 15:58:46.396 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 15:58:46.396 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 15:58:46.413 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 15:58:46 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 15:58:46.413 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-08-07 15:58:46.644 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 15:58:46.665 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787121486 started.
2020-08-07 15:58:46.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:58:49.179 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:1273E8CAB9E978FA3945CC3447D13F1C
2020-08-07 15:58:52.164 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:58:52.164 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 15:58:52.270 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:58:52.270 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 0 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 15:58:52.287 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:58:52.287 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 15:58:52.791 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 15:58:52.986 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:52 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T15:58:52.928+0800' WHERE (USERNAME = 'admin');
2020-08-07 15:58:53.010 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:53 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 15:58:53.014 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:53 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:58:53.018 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:53 | 耗时 1 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 15:58:53.025 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:53 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 15:58:53.030 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 15:58:53 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 15:58:54.525 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:58:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 15:58:54.542 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 15:58:54 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 15:58:55.840 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:58:55 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:58:55.853 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:58:55 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:58:55.862 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:58:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:58:55.868 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:58:55 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:58:55.872 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:58:55 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:14.058 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 15:59:14.058 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_ClusterManager] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596786494207"'s failed in-progress jobs.
2020-08-07 15:59:14.072 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 15:59:14.092 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 15:59:14.092 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 15:59:14 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T15:59:14.072+0800');
2020-08-07 15:59:14.106 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:59:14 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 15:59:14.121 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:59:14 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 15:59:14.121 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:59:14 | 耗时 11 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 1);
2020-08-07 15:59:23.143 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:59:23 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 2);
2020-08-07 15:59:24.509 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 15:59:24 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 3);
2020-08-07 15:59:24.532 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 15:59:24 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 15:59:24.536 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：10444 毫秒
2020-08-07 15:59:24.542 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 15:59:24 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 10444, '2020-08-07T15:59:14.092+0800');
2020-08-07 15:59:26.045 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 15:59:34.390 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:59:34.395 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:59:34.399 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:34.404 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:59:34.409 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:34 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:40.052 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-07 15:59:40.058 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 15:59:40.063 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 15:59:40 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 15:59:44.841 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:59:44 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:59:44.849 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:59:44 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 15:59:44.867 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:59:44 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 15:59:44.873 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 15:59:44 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 15:59:46.316 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:59:46.320 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:59:46.324 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:46.328 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:59:46.331 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:46.338 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 2);
2020-08-07 15:59:46.342 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 15:59:46 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 3);
2020-08-07 15:59:49.846 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:59:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:59:49.849 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:59:49 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '1');
2020-08-07 15:59:49.856 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 15:59:49 | 耗时 0 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (2, 1, 1, '1', '2020-08-07T15:59:49.853', '1', '2020-08-07T15:59:49.853');
2020-08-07 15:59:51.073 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 15:59:51.078 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 15:59:51.082 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:51.086 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:59:51.091 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:51.097 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-07 15:59:51.102 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 15:59:51.106 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 15:59:51 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 15:59:59.166 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 15:59:59.170 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 15:59:59.173 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:59.177 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 15:59:59.180 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 15:59:59.184 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 1);
2020-08-07 15:59:59.188 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 2);
2020-08-07 15:59:59.192 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 15:59:59 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 3);
2020-08-07 16:00:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:00:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 16:00:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:00:00.014+0800');
2020-08-07 16:00:02.070 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:00:02 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 16:00:02.075 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:00:02 | 耗时 1 ms | SQL 语句：
DELETE FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = '1');
2020-08-07 16:00:03.296 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:00:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 16:00:03.300 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:00:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 16:00:03.302 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:00:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:00:03.306 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:00:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 16:00:03.309 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:00:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:00:03.313 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:00:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 16:00:03.317 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:00:03 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 16:00:06.941 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:00:06 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 16:00:06.945 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:00:06 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '2');
2020-08-07 16:00:06.948 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:00:06 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '3');
2020-08-07 16:00:06.952 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:00:06 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = '1');
2020-08-07 16:00:06.956 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:00:06 | 耗时 1 ms | SQL 语句：
INSERT INTO a_user_myequipment (user_id, myequipment_id, state, creator, create_date, modifier, mod_date) VALUES (1, 1, 1, '1', '2020-08-07T16:00:06.953', '1', '2020-08-07T16:00:06.953');
2020-08-07 16:00:07.918 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 16:00:07.922 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 16:00:07.925 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:00:07.929 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 16:00:07.932 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:00:07.937 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 1);
2020-08-07 16:00:07.941 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 2);
2020-08-07 16:00:07.944 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:00:07 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 3);
2020-08-07 16:00:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:00:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:00:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:00:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:00:10.054 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 16:00:10.058 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 16:00:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T16:00:10.019+0800');
2020-08-07 16:00:16.049 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:01:00.012 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:01:00.016 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 16:01:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:01:00.011+0800');
2020-08-07 16:01:10.020 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:01:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:01:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:01:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:01:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:01:10.075 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-07 16:01:10.081 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 16:01:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-07T16:01:10.020+0800');
2020-08-07 16:01:16.051 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:02:00.022 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:02:00.027 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 16:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:02:00.022+0800');
2020-08-07 16:02:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:02:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:02:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:02:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:02:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:02:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 16:02:10.056 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 16:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T16:02:10.019+0800');
2020-08-07 16:02:16.053 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:03:00.030 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:03:00.042 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 16:03:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:03:00.030+0800');
2020-08-07 16:03:03.726 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:03:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_myequipment;
2020-08-07 16:03:03.728 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:03:03 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment ORDER BY id ASC LIMIT 0,10;
2020-08-07 16:03:08.902 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:03:08 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment WHERE id = 2;
2020-08-07 16:03:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:03:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:03:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:03:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:03:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 16:03:10.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 16:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-07T16:03:10.018+0800');
2020-08-07 16:03:14.601 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:03:14 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:03:14.615 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:03:14 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:03:16.056 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:03:22.894 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:03:22 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:03:25.650 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:03:25 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:04:00.013 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:04:00.017 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 16:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:04:00.013+0800');
2020-08-07 16:04:10.042 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:04:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:04:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:04:10.074 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:04:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:04:10.077 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：35 毫秒
2020-08-07 16:04:10.081 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 16:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 35, '2020-08-07T16:04:10.042+0800');
2020-08-07 16:04:16.057 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787121486_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:04:50.710 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:04:50 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:04:50.792 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:04:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:04:50.795 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:04:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:04:51.657 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:04:51 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:04:54.919 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:04:54 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:04:59.697 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:04:59 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:04:59.748 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:04:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:04:59.751 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:04:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:05:00.013 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:05:00.019 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 16:05:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:05:00.013+0800');
2020-08-07 16:05:00.049 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:05:00 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:05:00.094 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:05:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:05:00.096 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:05:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:05:01.355 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787121486 paused.
2020-08-07 16:05:01.379 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 16:05:01.384 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 16:05:01.384 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787121486 shutting down.
2020-08-07 16:05:01.384 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787121486 paused.
2020-08-07 16:05:01.385 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787121486 shutdown complete.
2020-08-07 16:05:01.393 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 16:05:01.394 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 16:05:01.431 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 16:05:06.582 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 14352 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 16:05:06.585 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 16:05:08.283 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 16:05:08.285 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 16:05:08.353 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54ms. Found 0 repository interfaces.
2020-08-07 16:05:09.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6b10bf81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1824eb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$e57ac5df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.308 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9a3016ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.316 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b3518e1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bf04b99c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:05:09.764 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 16:05:09.781 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 16:05:09.791 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 16:05:09.791 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 16:05:09.799 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 16:05:09.921 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 16:05:09.922 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3262 ms
2020-08-07 16:05:10.323 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 16:05:10.333 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 16:05:10.875 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 16:05:10.875 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 16:05:10.876 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 16:05:10.876 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 16:05:11.496 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 16:05:13.755 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 16:05:13.793 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 16:05:13.807 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 16:05:13.807 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 16:05:13.811 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 16:05:13.813 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 16:05:13.814 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596787513794'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 16:05:13.814 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 16:05:13.815 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 16:05:13.817 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@192ecf8
2020-08-07 16:05:13.905 febs [main] INFO  p6spy - 2020-08-07 16:05:13 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 16:05:16.066 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 16:05:16.369 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 16:05:16.370 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 16:05:16.452 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44103266, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e484bd, org.springframework.security.web.header.HeaderWriterFilter@1c96bf1e, org.springframework.security.web.authentication.logout.LogoutFilter@4eb3b690, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@34766f4b, org.springframework.security.web.session.ConcurrentSessionFilter@85b9f9c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e0600a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d8751de, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@6600d07d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@439b0198, org.springframework.security.web.session.SessionManagementFilter@14764fdd, org.springframework.security.web.access.ExceptionTranslationFilter@25093079, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1516f497]
2020-08-07 16:05:16.515 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 16:05:16.533 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 16:05:16.535 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 16:05:17.001 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 16:05:17.768 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 16:05:17.784 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 16:05:17.855 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 16:05:17.880 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 16:05:17.896 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 16:05:17.931 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 16:05:17.935 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.24 seconds (JVM running for 13.527)
2020-08-07 16:05:17.963 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 16:05:17.964 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 16:05:17.964 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 16:05:17.964 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 16:05:17.964 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 16:05:18.426 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 16:05:18.426 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 16:05:18.444 febs [RMI TCP Connection(3)-192.168.1.113] INFO  p6spy - 2020-08-07 16:05:18 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 16:05:18.445 febs [RMI TCP Connection(2)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-08-07 16:05:18.882 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 16:05:18.893 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 16:05:18.893 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596787121486"'s failed in-progress jobs.
2020-08-07 16:05:18.915 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787513794 started.
2020-08-07 16:05:18.939 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:05:41.757 febs [http-nio-8099-exec-2] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:C73707447F24729F0962089CAB895BBA
2020-08-07 16:05:41.929 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:AE1CCFD5A3FEF43614540556B213EC93
2020-08-07 16:05:44.765 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:05:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 16:05:44.765 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:05:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 16:05:44.871 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:05:44 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 16:05:44.871 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:05:44 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 16:05:44.888 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:05:44 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 16:05:44.888 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:05:44 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 16:05:44.990 febs [http-nio-8099-exec-6] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:C5AA4EDE93A9CFCB6A4C5584F11B57E7
2020-08-07 16:05:47.470 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:05:47 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 16:05:47.476 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:05:47 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 16:05:47.483 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:05:47 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 16:05:47.921 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:05:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:05:48.118 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:05:48 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T16:05:48.062+0800' WHERE (USERNAME = 'admin');
2020-08-07 16:05:48.141 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:05:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 16:05:48.146 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:05:48 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 16:05:48.150 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:05:48 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 16:05:48.159 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:05:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 16:05:48.165 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:05:48 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 16:05:49.865 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:05:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:05:49.880 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:05:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:05:50.876 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:05:50 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:05:56.279 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:05:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 16:06:00.030 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:06:00.048 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 16:06:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T16:06:00.030+0800');
2020-08-07 16:06:02.393 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:06:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 16:06:10.011 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:06:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:06:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:06:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:06:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:06:10.073 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：62 毫秒
2020-08-07 16:06:10.077 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 16:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 62, '2020-08-07T16:06:10.011+0800');
2020-08-07 16:06:14.231 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:06:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:06:14.234 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:06:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:06:16.883 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:06:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:06:16.886 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:06:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:06:18.933 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:07:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:07:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 16:07:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:07:00.024+0800');
2020-08-07 16:07:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:07:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:07:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:07:10.052 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:07:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:07:10.055 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 16:07:10.059 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 16:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-07T16:07:10.021+0800');
2020-08-07 16:07:18.936 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:08:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:08:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 16:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:08:00.021+0800');
2020-08-07 16:08:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:08:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:08:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:08:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:08:10.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 16:08:10.053 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 16:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-07T16:08:10.018+0800');
2020-08-07 16:08:18.937 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:09:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:09:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 16:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:09:00.021+0800');
2020-08-07 16:09:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:09:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:09:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:09:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:09:10.048 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 16:09:10.051 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 16:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T16:09:10.018+0800');
2020-08-07 16:09:18.939 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:09:27.564 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:09:27 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:10:00.023 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:10:00.030 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 16:10:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 2, '2020-08-07T16:10:00.023+0800');
2020-08-07 16:10:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:10:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:10:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:10:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:10:10.051 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 16:10:10.056 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 16:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-07T16:10:10.018+0800');
2020-08-07 16:10:18.941 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:11:00.025 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:11:00.031 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 16:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:11:00.025+0800');
2020-08-07 16:11:10.017 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:11:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:11:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:11:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:11:10.050 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 16:11:10.054 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 16:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T16:11:10.017+0800');
2020-08-07 16:11:18.941 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:11:21.216 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:11:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:11:21.295 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:11:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:11:21.298 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:11:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:11:22.286 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:11:22 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:11:42.233 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 16:11:42.251 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2);
2020-08-07 16:11:42.265 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:11:42.270 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 16:11:42.278 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:11:42.290 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 1 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 1);
2020-08-07 16:11:42.296 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 2);
2020-08-07 16:11:42.300 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:11:42 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 2 AND myequipment_id = 3);
2020-08-07 16:12:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:12:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 16:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:12:00.021+0800');
2020-08-07 16:12:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:12:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:12:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:12:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:12:10.052 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 16:12:10.056 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 16:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T16:12:10.020+0800');
2020-08-07 16:12:18.944 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:12:44.871 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:12:44 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:12:44.938 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:12:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:12:44.940 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:12:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:12:45.259 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:12:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:12:45.327 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:12:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:12:45.330 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:12:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:12:45.959 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:12:45 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:13:00.024 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:13:00.030 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 16:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:13:00.024+0800');
2020-08-07 16:13:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:13:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:13:10.030 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:13:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:13:10.051 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 16:13:10.055 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 16:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 33, '2020-08-07T16:13:10.018+0800');
2020-08-07 16:13:18.947 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:13:30.532 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:13:30 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:13:30.591 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:13:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:13:30.594 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:13:30 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:13:31.283 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:13:31 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:13:31.332 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:13:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:13:31.334 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:13:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:13:32.019 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:13:32 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:14:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:14:00.027 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 16:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:14:00.022+0800');
2020-08-07 16:14:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:14:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:14:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:14:10.050 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:14:10.052 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 16:14:10.056 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 16:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T16:14:10.020+0800');
2020-08-07 16:14:18.949 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:15:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:15:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 16:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:15:00.020+0800');
2020-08-07 16:15:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:15:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:15:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:15:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:15:10.051 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 16:15:10.055 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 16:15:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T16:15:10.020+0800');
2020-08-07 16:15:18.951 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:16:00.022 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:16:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 16:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:16:00.022+0800');
2020-08-07 16:16:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:16:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:16:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:16:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:16:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 16:16:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 16:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T16:16:10.018+0800');
2020-08-07 16:16:18.958 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:17:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:17:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 16:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:17:00.019+0800');
2020-08-07 16:17:10.021 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:17:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:17:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:17:10.061 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:17:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:17:10.064 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：43 毫秒
2020-08-07 16:17:10.069 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 16:17:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 43, '2020-08-07T16:17:10.021+0800');
2020-08-07 16:17:18.957 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:18:00.024 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:18:00.031 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 16:18:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:18:00.024+0800');
2020-08-07 16:18:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:18:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:18:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:18:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:18:10.045 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:18:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 16:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T16:18:10.018+0800');
2020-08-07 16:18:18.959 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:19:00.057 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:19:00.066 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 16:19:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:19:00.057+0800');
2020-08-07 16:19:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:19:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:19:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:19:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:19:10.076 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：34 毫秒
2020-08-07 16:19:10.079 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 16:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 34, '2020-08-07T16:19:10.042+0800');
2020-08-07 16:19:18.961 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:20:00.045 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:20:00.049 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 16:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:20:00.045+0800');
2020-08-07 16:20:10.017 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:20:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:20:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:20:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:20:10.048 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 16:20:10.050 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 16:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-07T16:20:10.017+0800');
2020-08-07 16:20:18.964 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596787513794_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:20:31.445 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787513794 paused.
2020-08-07 16:20:31.458 febs [Thread-30] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 16:20:31.462 febs [Thread-30] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 16:20:31.462 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787513794 shutting down.
2020-08-07 16:20:31.462 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787513794 paused.
2020-08-07 16:20:31.463 febs [Thread-30] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596787513794 shutdown complete.
2020-08-07 16:20:31.469 febs [Thread-30] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 16:20:31.469 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 16:20:31.474 febs [Thread-30] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
2020-08-07 16:20:37.081 febs [main] INFO  com.cx.AppApplication - Starting AppApplication on LAPTOP-R0RM3FEG with PID 8408 (F:\ideaWorkSpace\xczg_app\target\classes started by zyh in F:\ideaWorkSpace\xczg_app)
2020-08-07 16:20:37.086 febs [main] INFO  com.cx.AppApplication - The following profiles are active: pro
2020-08-07 16:20:38.842 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-07 16:20:38.845 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-07 16:20:38.920 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57ms. Found 0 repository interfaces.
2020-08-07 16:20:39.581 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8153b858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.768 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.772 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$17c54787] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.822 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfigure' of type [com.cx.common.configure.RedisConfigure$$EnhancerBySpringCGLIB$$fbbdbeb6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.875 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b0730fc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.885 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.889 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6aa6c17' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.893 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d547b273] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:39.903 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-07 16:20:40.346 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8099 (http)
2020-08-07 16:20:40.362 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8099"]
2020-08-07 16:20:40.372 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-08-07 16:20:40.373 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16]
2020-08-07 16:20:40.380 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\JDK\bin;D:\Program Files\Git\cmd;D:\mysql-8.0.20-winx64\bin;D:\Program Files\nodejs\;D:\mysql-8.0.20-winx64\bin;D:\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;D:\Readis\Redis-x64-3.2.100;D:\Program Files\nodejs\node_global;C:\Users\zyh\AppData\Local\Microsoft\WindowsApps;;D:\Program Files\JetBrains\IntelliJ IDEA 2019.3\bin;;C:\Users\zyh\AppData\Roaming\npm;.]
2020-08-07 16:20:40.498 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-08-07 16:20:40.498 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3329 ms
2020-08-07 16:20:40.916 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2020-08-07 16:20:40.926 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Starting...
2020-08-07 16:20:41.467 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - base - Start completed.
2020-08-07 16:20:41.467 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2020-08-07 16:20:41.467 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 base 成功
2020-08-07 16:20:41.467 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 base
2020-08-07 16:20:42.090 febs [main] INFO  com.cx.common.xss.XssFilter - ------------ xss filter init ------------
2020-08-07 16:20:44.414 febs [main] INFO  c.cx.job.configure.ScheduleConfigure - ------
2020-08-07 16:20:44.451 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-08-07 16:20:44.465 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-08-07 16:20:44.465 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2020-08-07 16:20:44.471 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2020-08-07 16:20:44.473 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2020-08-07 16:20:44.475 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'aps_Scheduler' with instanceId 'LAPTOP-R0RM3FEG1596788444452'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-08-07 16:20:44.475 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'aps_Scheduler' initialized from an externally provided properties instance.
2020-08-07 16:20:44.475 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2020-08-07 16:20:44.477 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@406decb2
2020-08-07 16:20:44.561 febs [main] INFO  p6spy - 2020-08-07 16:20:44 | 耗时 1 ms | SQL 语句：
SELECT job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime FROM t_job ORDER BY job_id;
2020-08-07 16:20:46.691 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/test/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/common/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.js'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/font/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/images/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/img/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/lay/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/layui/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/json/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/app/**'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
2020-08-07 16:20:46.994 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger/**'], []
2020-08-07 16:20:46.995 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
2020-08-07 16:20:46.995 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/webjars/**'], []
2020-08-07 16:20:46.995 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/v2/api-docs'], []
2020-08-07 16:20:46.995 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/403'], []
2020-08-07 16:20:46.995 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/401'], []
2020-08-07 16:20:46.995 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/views/404'], []
2020-08-07 16:20:47.084 febs [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68423388, org.springframework.security.web.context.SecurityContextPersistenceFilter@50b78155, org.springframework.security.web.header.HeaderWriterFilter@5935eb9c, org.springframework.security.web.authentication.logout.LogoutFilter@3bf4b018, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1a4c6e74, org.springframework.security.web.session.ConcurrentSessionFilter@41ae9f11, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61c11339, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1dc28c66, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@51d6c42d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1104cf3a, org.springframework.security.web.session.SessionManagementFilter@538d2308, org.springframework.security.web.access.ExceptionTranslationFilter@352d3749, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@40ef385f]
2020-08-07 16:20:47.147 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-08-07 16:20:47.166 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService
2020-08-07 16:20:47.168 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'apsAsyncThreadPool'
2020-08-07 16:20:47.687 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2020-08-07 16:20:48.506 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-08-07 16:20:48.525 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-08-07 16:20:48.606 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-08-07 16:20:48.629 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [aps_Scheduler] in 1 seconds
2020-08-07 16:20:48.643 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8099"]
2020-08-07 16:20:48.678 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8099 (http) with context path ''
2020-08-07 16:20:48.683 febs [main] INFO  com.cx.AppApplication - Started AppApplication in 12.616 seconds (JVM running for 13.985)
2020-08-07 16:20:48.709 febs [main] INFO  com.cx.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2020-08-07 16:20:48.709 febs [main] INFO  com.cx.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-08-07 16:20:48.709 febs [main] INFO  com.cx.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-08-07 16:20:48.709 febs [main] INFO  com.cx.common.runner.StartedUpRunner -                                                       
2020-08-07 16:20:48.709 febs [main] INFO  com.cx.common.runner.StartedUpRunner - 智工系统启动完毕，地址：http://192.168.1.113:8099/login
2020-08-07 16:20:49.072 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-07 16:20:49.072 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-08-07 16:20:49.092 febs [RMI TCP Connection(2)-192.168.1.113] INFO  p6spy - 2020-08-07 16:20:49 | 耗时 0 ms | SQL 语句：
select 1;
2020-08-07 16:20:49.093 febs [RMI TCP Connection(1)-192.168.1.113] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-08-07 16:20:49.631 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2020-08-07 16:20:49.642 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2020-08-07 16:20:49.642 febs [Quartz Scheduler [aps_Scheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "LAPTOP-R0RM3FEG1596787513794"'s failed in-progress jobs.
2020-08-07 16:20:49.657 febs [Quartz Scheduler [aps_Scheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596788444452 started.
2020-08-07 16:20:49.662 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:20:54.750 febs [http-nio-8099-exec-1] INFO  c.c.c.a.s.HttpSessionCreatedEventListener - 新建session:80EE644B847EBDE24A33A6C47938210D
2020-08-07 16:20:58.054 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.THEME, u.IS_TAB, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar;
2020-08-07 16:20:58.157 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-08-07 16:20:58.173 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 1 ms | SQL 语句：
SELECT m.perms FROM t_role r LEFT JOIN t_user_role ur ON (r.role_id = ur.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) LEFT JOIN t_role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN t_menu m ON (m.menu_id = rm.menu_id) WHERE m.perms IS NOT NULL AND m.perms <> '' AND u.username = 'admin';
2020-08-07 16:20:58.608 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:20:58.785 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET LAST_LOGIN_TIME = '2020-08-07T16:20:58.734+0800' WHERE (USERNAME = 'admin');
2020-08-07 16:20:58.806 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log;
2020-08-07 16:20:58.812 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 0 ms | SQL 语句：
SELECT count(1) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 16:20:58.817 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 0 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM t_login_log WHERE datediff(login_time, now()) = 0;
2020-08-07 16:20:58.824 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 0 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-08-07 16:20:58.830 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:20:58 | 耗时 1 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM t_login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-08-07 16:21:00.042 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:21:00.059 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 16:21:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 4, '2020-08-07T16:21:00.042+0800');
2020-08-07 16:21:00.249 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:21:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:21:00.265 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:21:00 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:21:03.022 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:21:03 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:21:03.023 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:21:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:21:10.023 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:21:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:21:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:21:10.080 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:21:10.083 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：60 毫秒
2020-08-07 16:21:10.088 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 16:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 60, '2020-08-07T16:21:10.023+0800');
2020-08-07 16:21:13.662 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:21:38.099 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:21:38 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:21:38.175 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:21:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:21:38.178 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:21:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:21:39.249 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:21:39 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:21:39.249 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:21:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:21:39.282 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:21:39 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:21:39.283 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:21:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:22:00.024 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:22:00.029 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 16:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:22:00.024+0800');
2020-08-07 16:22:10.025 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:22:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:22:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:22:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:22:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:22:10.061 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-07 16:22:10.065 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 16:22:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-07T16:22:10.025+0800');
2020-08-07 16:22:13.664 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:22:34.373 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:22:34 | 耗时 1 ms | SQL 语句：
INSERT INTO t_user (USERNAME, PASSWORD, dept_name, MOBILE, idcard_num, wechart, account_name, open, CREATE_TIME, state, creator, create_date, modifier, mod_date) VALUES ('zyh', '$2a$10$kf7M47flKc6pzuzdOHibd.BSo.F99GYq.7VCJ/eM1.m.jnJeCwNPe', '', '15230236987', 412702199707156931, '123', '张予辉', '2020-09-01T16:22:34.280', '2020-08-07T16:22:34.279', 1, '1', '2020-08-07T16:22:34.370', '1', '2020-08-07T16:22:34.370');
2020-08-07 16:22:34.392 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:22:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE (USERNAME = 'zyh' AND account_name = '张予辉' AND idcard_num = 412702199707156931);
2020-08-07 16:22:34.401 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:22:34 | 耗时 2 ms | SQL 语句：
INSERT INTO t_user_role (USER_ID, ROLE_ID) VALUES (20, 1);
2020-08-07 16:22:34.422 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:22:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:22:34.424 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:22:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:23:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:23:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 16:23:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:23:00.021+0800');
2020-08-07 16:23:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:23:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:23:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:23:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:23:10.049 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 16:23:10.054 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 16:23:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-07T16:23:10.017+0800');
2020-08-07 16:23:13.667 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:24:00.024 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:24:00.031 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 16:24:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:24:00.024+0800');
2020-08-07 16:24:10.021 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:24:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:24:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:24:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:24:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 16:24:10.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 16:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T16:24:10.021+0800');
2020-08-07 16:24:13.666 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:24:28.879 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 20;
2020-08-07 16:24:28.891 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 20);
2020-08-07 16:24:28.900 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:24:28.904 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 16:24:28.910 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 16:24:28.918 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 20 AND myequipment_id = 1);
2020-08-07 16:24:28.922 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 20 AND myequipment_id = 2);
2020-08-07 16:24:28.925 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:24:28 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 20 AND myequipment_id = 3);
2020-08-07 16:24:38.021 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:24:38 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 20;
2020-08-07 16:24:44.551 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:24:44 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:24:44.551 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:24:44 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:24:50.319 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:24:50 | 耗时 0 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID = 20;
2020-08-07 16:24:50.343 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:24:50 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:24:50.345 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:24:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:24:52.319 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:24:52 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:24:52.320 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:24:52 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:24:59.616 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:24:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:24:59.616 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:24:59 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:25:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:25:00.027 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 16:25:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:25:00.022+0800');
2020-08-07 16:25:05.919 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:25:05 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:25:05.971 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:25:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:25:05.973 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:25:05 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:25:06.786 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:25:06 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:25:06.786 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:25:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:25:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:25:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:25:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:25:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:25:10.057 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：40 毫秒
2020-08-07 16:25:10.061 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 16:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 40, '2020-08-07T16:25:10.017+0800');
2020-08-07 16:25:13.669 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:25:16.127 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:25:16 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:25:16.195 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:25:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:25:16.198 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:25:16 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:25:18.794 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:25:18 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:25:18.795 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:25:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:25:40.662 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:25:40 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:25:40.737 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:25:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:25:40.740 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:25:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:25:42.898 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:25:42 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:25:42.903 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:25:42 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:26:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:26:00.030 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 16:26:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:26:00.022+0800');
2020-08-07 16:26:10.022 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:26:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:26:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:26:10.056 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:26:10.058 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：36 毫秒
2020-08-07 16:26:10.062 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 16:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 36, '2020-08-07T16:26:10.022+0800');
2020-08-07 16:26:13.672 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:26:18.796 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:26:18 | 耗时 0 ms | SQL 语句：
INSERT INTO t_user (USERNAME, PASSWORD, DEPT_ID, dept_name, MOBILE, idcard_num, wechart, account_name, open, CREATE_TIME, state, creator, create_date, modifier, mod_date) VALUES ('zyh', '$2a$10$dz3VcIw5afJezMXRMAwbduuVuVl5k1jaAEIdEhCHjeBDGFnb0cB36', 1, '', '15238203915', 412702199707156961, '玛卡阿布', '张予辉', '2020-08-17T16:26:18.709', '2020-08-07T16:26:18.709', 1, '1', '2020-08-07T16:26:18.793', '1', '2020-08-07T16:26:18.793');
2020-08-07 16:26:18.813 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:26:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE (USERNAME = 'zyh' AND account_name = '张予辉' AND idcard_num = 412702199707156961);
2020-08-07 16:26:18.819 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:26:18 | 耗时 2 ms | SQL 语句：
INSERT INTO t_user_role (USER_ID, ROLE_ID) VALUES (21, 1);
2020-08-07 16:26:18.841 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:26:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:26:18.845 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:26:18 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:27:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:27:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 16:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:27:00.023+0800');
2020-08-07 16:27:10.021 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:27:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:27:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:27:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:27:10.050 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 16:27:10.054 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 16:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T16:27:10.021+0800');
2020-08-07 16:27:13.672 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:27:32.088 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:27:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:27:32.186 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:27:32 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:27:32.189 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:27:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:27:33.063 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:27:33 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:27:33.066 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:27:33 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:28:00.023 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:28:00.029 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 16:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:28:00.023+0800');
2020-08-07 16:28:10.015 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:28:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:28:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:28:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:28:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 16:28:10.050 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 16:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T16:28:10.015+0800');
2020-08-07 16:28:13.675 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:29:00.018 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:29:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 16:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:29:00.018+0800');
2020-08-07 16:29:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:29:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:29:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:29:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:29:10.050 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 16:29:10.054 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 16:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T16:29:10.020+0800');
2020-08-07 16:29:13.679 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:30:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:30:00.024 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 16:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:30:00.020+0800');
2020-08-07 16:30:05.239 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:30:05 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:30:05.334 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:30:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:30:05.337 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:30:05 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:30:06.486 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:30:06 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:30:06.488 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:30:06 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:30:10.020 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:30:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:30:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:30:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:30:10.049 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 16:30:10.052 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 16:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T16:30:10.020+0800');
2020-08-07 16:30:13.679 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:31:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:31:00.024 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 16:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:31:00.021+0800');
2020-08-07 16:31:02.801 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:31:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:31:02.887 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:31:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:31:02.890 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:31:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:31:04.472 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:31:04 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:31:04.473 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:31:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:31:10.018 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:31:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:31:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:31:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:31:10.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 16:31:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 16:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T16:31:10.018+0800');
2020-08-07 16:31:13.682 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:32:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:32:00.044 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 16:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 17, '2020-08-07T16:32:00.022+0800');
2020-08-07 16:32:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:32:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:32:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:32:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:32:10.061 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：42 毫秒
2020-08-07 16:32:10.064 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 16:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 42, '2020-08-07T16:32:10.019+0800');
2020-08-07 16:32:13.683 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:33:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:33:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 16:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:33:00.021+0800');
2020-08-07 16:33:10.017 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:33:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:33:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:33:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:33:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:33:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 16:33:10.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 16:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T16:33:10.017+0800');
2020-08-07 16:33:13.686 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:33:37.516 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:33:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:33:37.591 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:33:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:33:37.595 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:33:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:33:47.512 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:33:47 | 耗时 3 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:33:47.581 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:33:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:33:47.584 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:33:47 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:33:49.200 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:33:49 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:33:49.203 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:33:49 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:34:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:34:00.028 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 16:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:34:00.021+0800');
2020-08-07 16:34:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:34:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:34:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:34:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:34:10.049 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 16:34:10.052 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 16:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T16:34:10.019+0800');
2020-08-07 16:34:13.688 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:35:00.021 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:35:00.024 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 16:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:35:00.021+0800');
2020-08-07 16:35:10.018 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:35:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:35:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:35:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:35:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 16:35:10.053 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 16:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T16:35:10.018+0800');
2020-08-07 16:35:13.691 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:35:14.288 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:35:14 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:35:14.365 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:35:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:35:14.368 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:35:14 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:35:15.622 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:35:15 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:35:15.624 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:35:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:35:15.665 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:35:15 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:35:15.667 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:35:15 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:36:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:36:00.025 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 16:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:36:00.021+0800');
2020-08-07 16:36:10.018 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:36:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:36:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:36:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:36:10.044 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 16:36:10.047 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 16:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T16:36:10.018+0800');
2020-08-07 16:36:13.693 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:37:00.023 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:37:00.027 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 16:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:37:00.023+0800');
2020-08-07 16:37:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:37:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:37:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:37:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:37:10.046 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 16:37:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 16:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T16:37:10.016+0800');
2020-08-07 16:37:13.696 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:38:00.035 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:38:00.042 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 16:38:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:38:00.035+0800');
2020-08-07 16:38:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:38:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:38:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:38:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:38:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 16:38:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 16:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T16:38:10.018+0800');
2020-08-07 16:38:13.699 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:38:24.597 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:38:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:38:24.679 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:38:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:38:24.682 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:38:24 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:38:26.115 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:38:26 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:38:26.116 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:38:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:38:56.823 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:38:56 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:38:56.928 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:38:56 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:38:56.932 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:38:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:38:57.994 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:38:57 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:38:57.994 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:38:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:39:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:39:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 16:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:39:00.020+0800');
2020-08-07 16:39:10.020 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:39:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:39:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:39:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:39:10.051 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 16:39:10.053 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 16:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T16:39:10.020+0800');
2020-08-07 16:39:13.701 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:39:34.576 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:39:34 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:39:34.647 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:39:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:39:34.649 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:39:34 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:39:36.286 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:39:36 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:39:36.287 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:39:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:39:36.316 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:39:36 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:39:36.317 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:39:36 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:40:00.010 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:40:00.014 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 16:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T16:40:00.010+0800');
2020-08-07 16:40:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:40:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:40:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:40:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:40:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 16:40:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 16:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T16:40:10.019+0800');
2020-08-07 16:40:13.703 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:40:17.460 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:40:17 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:40:17.525 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:40:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:40:17.527 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:40:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:40:18.466 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:40:18 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:40:18.467 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:40:18 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:41:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:41:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 16:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:41:00.020+0800');
2020-08-07 16:41:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:41:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:41:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:41:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:41:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:41:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 16:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T16:41:10.019+0800');
2020-08-07 16:41:13.707 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:41:56.466 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:41:56 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:41:56.534 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:41:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:41:56.537 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:41:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:41:59.163 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:41:59 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:41:59.164 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:41:59 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:42:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:42:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 16:42:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:42:00.020+0800');
2020-08-07 16:42:10.020 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:42:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:42:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:42:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:42:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 16:42:10.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 16:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T16:42:10.020+0800');
2020-08-07 16:42:13.709 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:42:21.142 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:42:21 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:42:21.206 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:42:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:42:21.208 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:42:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:42:24.493 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:42:24 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:42:24.493 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:42:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:42:48.826 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:42:48 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:42:48.929 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:42:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:42:48.931 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:42:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:42:50.105 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:42:50 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:42:50.108 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:42:50 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:43:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:43:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 16:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:43:00.020+0800');
2020-08-07 16:43:03.506 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:43:03 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:43:03.585 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:43:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:43:03.588 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:43:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:43:04.720 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:43:04 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:43:04.721 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:43:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:43:10.016 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:43:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:43:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:43:10.043 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:43:10.046 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 16:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T16:43:10.016+0800');
2020-08-07 16:43:13.711 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:43:24.965 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:43:24 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:43:25.043 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:43:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:43:25.046 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:43:25 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:43:26.584 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:43:26 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:43:26.592 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:43:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:43:45.867 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:43:45 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:43:45.942 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:43:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:43:45.944 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:43:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:43:47.072 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:43:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:43:47.178 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:43:47 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:43:47.180 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:43:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:43:47.786 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:43:47 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:43:47.788 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:43:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:44:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:44:00.024 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 16:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:44:00.021+0800');
2020-08-07 16:44:10.025 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:44:10.054 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:44:10.058 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:44:10.077 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:44:10.080 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：55 毫秒
2020-08-07 16:44:10.083 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 16:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 55, '2020-08-07T16:44:10.025+0800');
2020-08-07 16:44:13.715 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:44:32.972 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:44:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:44:33.071 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:44:33 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:44:33.074 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:44:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:44:35.445 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:44:35 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:44:35.448 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:44:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:45:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:45:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 16:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:45:00.019+0800');
2020-08-07 16:45:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:45:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:45:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:45:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:45:10.046 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:45:10.049 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 16:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T16:45:10.019+0800');
2020-08-07 16:45:13.719 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:45:47.731 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:45:47 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:45:47.731 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:45:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:46:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:46:00.026 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 16:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:46:00.022+0800');
2020-08-07 16:46:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:46:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:46:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:46:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:46:10.035 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:46:10.038 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 16:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T16:46:10.008+0800');
2020-08-07 16:46:13.722 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:46:39.858 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:46:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:46:39.944 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:46:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:46:39.947 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:46:39 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:46:41.808 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:46:41 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:46:41.809 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:46:41 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:47:00.011 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:47:00.015 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 16:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:47:00.011+0800');
2020-08-07 16:47:10.019 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:47:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:47:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:47:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:47:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 16:47:10.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 16:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T16:47:10.019+0800');
2020-08-07 16:47:13.727 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:47:27.092 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:47:27 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:47:27.162 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:47:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:47:27.165 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:47:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:47:28.330 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:47:28 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:47:28.332 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:47:28 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:48:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:48:00.023 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 16:48:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:48:00.019+0800');
2020-08-07 16:48:10.015 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:48:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:48:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:48:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:48:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:48:10.042 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:48:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 16:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T16:48:10.015+0800');
2020-08-07 16:48:13.729 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:49:00.019 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:49:00.022 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 16:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:49:00.019+0800');
2020-08-07 16:49:08.194 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:49:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:49:08.266 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:49:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:49:08.269 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:49:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:49:10.022 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:49:10.025 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:49:10.028 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:49:10.064 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:49:10.069 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:49:10.074 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:49:10.078 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:49:10.097 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:49:10.100 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：78 毫秒
2020-08-07 16:49:10.104 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 16:49:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 78, '2020-08-07T16:49:10.022+0800');
2020-08-07 16:49:13.731 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:49:47.805 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:49:47 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:49:47.895 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:49:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:49:47.897 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:49:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:49:51.074 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:49:51 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:49:51.075 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:49:51 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:50:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:50:00.023 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 16:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:50:00.020+0800');
2020-08-07 16:50:10.019 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:50:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:50:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 16:50:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 16:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T16:50:10.019+0800');
2020-08-07 16:50:13.733 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:51:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:51:00.026 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 16:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:51:00.021+0800');
2020-08-07 16:51:10.017 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:51:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:51:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:51:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:51:10.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 16:51:10.048 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 16:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 28, '2020-08-07T16:51:10.017+0800');
2020-08-07 16:51:13.736 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:51:29.198 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:51:29 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:51:29.266 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:51:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:51:29.269 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:51:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:51:30.067 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:51:30 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:51:30.068 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:51:30 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:52:00.014 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:52:00.019 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 16:52:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:52:00.014+0800');
2020-08-07 16:52:02.534 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:52:02 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:52:02.612 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:52:02 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:52:02.616 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:52:02 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:52:03.583 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:52:03 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:52:03.584 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:52:03 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:52:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:52:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:52:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:52:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:52:10.044 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 16:52:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 16:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T16:52:10.018+0800');
2020-08-07 16:52:13.738 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:53:00.022 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:53:00.026 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 16:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:53:00.022+0800');
2020-08-07 16:53:03.723 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:53:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:53:03.800 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:53:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:53:03.803 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:53:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:53:04.964 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:53:04 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:53:04.967 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:53:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:53:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:53:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:53:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:53:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:53:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:53:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:53:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 16:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T16:53:10.019+0800');
2020-08-07 16:53:12.101 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:53:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:53:12.162 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:53:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:53:12.164 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:53:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:53:13.563 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 16:53:13 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:53:13.564 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:53:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:53:13.605 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:53:13 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:53:13.607 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 16:53:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:53:13.740 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:53:22.351 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:53:22 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:53:22.352 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:53:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:54:00.021 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:54:00.025 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 16:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:54:00.021+0800');
2020-08-07 16:54:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:54:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:54:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:54:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:54:10.050 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 16:54:10.053 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 16:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-07T16:54:10.019+0800');
2020-08-07 16:54:13.742 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:55:00.022 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:55:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 16:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:55:00.022+0800');
2020-08-07 16:55:10.019 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:55:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:55:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:55:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:55:10.045 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 16:55:10.048 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 16:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T16:55:10.019+0800');
2020-08-07 16:55:13.744 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:56:00.021 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:56:00.024 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 16:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:56:00.021+0800');
2020-08-07 16:56:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:56:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:56:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:56:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:56:10.046 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:56:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 16:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T16:56:10.019+0800');
2020-08-07 16:56:13.746 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:57:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:57:00.026 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 16:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:57:00.021+0800');
2020-08-07 16:57:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:57:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:57:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:57:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:57:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:57:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:57:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:57:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 16:57:10.050 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 16:57:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T16:57:10.017+0800');
2020-08-07 16:57:13.748 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:57:46.386 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:57:46 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:57:46.467 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:57:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:57:46.469 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 16:57:46 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:57:47.509 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:57:47 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:57:47.509 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:57:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:58:00.022 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:58:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 16:58:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:58:00.022+0800');
2020-08-07 16:58:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:58:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:58:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:58:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:58:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:58:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:58:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:58:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:58:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 16:58:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T16:58:10.018+0800');
2020-08-07 16:58:13.750 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:58:43.437 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 16:58:43 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:58:43.509 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:58:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:58:43.511 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:58:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:58:50.698 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:58:50 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:58:50.770 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:58:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:58:50.772 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:58:50 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:58:52.103 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:58:52 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:58:52.104 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:58:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:59:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 16:59:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 16:59:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T16:59:00.020+0800');
2020-08-07 16:59:06.330 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:59:06 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:59:06.405 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:59:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:59:06.408 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 16:59:06 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:59:09.673 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 16:59:09 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:59:09.673 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:59:09 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 16:59:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 16:59:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:59:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 16:59:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:59:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 16:59:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 16:59:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 16:59:10.045 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 16:59:10.048 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 16:59:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T16:59:10.018+0800');
2020-08-07 16:59:13.753 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 16:59:33.644 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 16:59:33 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 16:59:33.737 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:59:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 16:59:33.740 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 16:59:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 16:59:35.508 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 16:59:35 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 16:59:35.511 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 16:59:35 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:00:00.020 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:00:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 17:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T17:00:00.020+0800');
2020-08-07 17:00:10.023 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:00:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:00:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:00:10.073 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:00:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:00:10.076 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：53 毫秒
2020-08-07 17:00:10.081 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 17:00:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 53, '2020-08-07T17:00:10.023+0800');
2020-08-07 17:00:10.781 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:00:10 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:00:10.856 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:00:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:00:10.859 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:00:10 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:00:12.122 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:00:12 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:00:12.124 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:00:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:00:13.757 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:00:32.664 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:00:32 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:00:32.738 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:00:32 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:00:32.740 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:00:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:00:33.755 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:00:33 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:00:33.758 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:00:33 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:00:39.270 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:00:39 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:00:39.352 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:00:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:00:39.355 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:00:39 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:00:40.927 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:00:40 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:00:40.928 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:00:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:01:00.021 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:01:00.025 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 17:01:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:01:00.021+0800');
2020-08-07 17:01:10.009 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:01:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:01:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:01:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:01:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:01:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:01:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:01:10.038 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:01:10.041 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 17:01:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T17:01:10.009+0800');
2020-08-07 17:01:13.759 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:01:28.020 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:01:28 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:01:28.090 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:01:28 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:01:28.092 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:01:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:01:29.550 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:01:29 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:01:29.551 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:01:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:02:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:02:00.024 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 17:02:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:02:00.020+0800');
2020-08-07 17:02:00.626 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:02:00 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:02:00.697 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:02:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:02:00.700 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:02:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:02:01.913 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:02:01 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:02:01.915 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:02:01 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:02:10.018 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:02:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:02:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:02:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:02:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:02:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:02:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 17:02:10.048 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 17:02:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T17:02:10.018+0800');
2020-08-07 17:02:13.761 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:02:45.145 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:02:45 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:02:45.229 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:02:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:02:45.232 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:02:45 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:02:46.406 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:02:46 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:02:46.408 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:02:46 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:02:55.092 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:02:55 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:02:55.171 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:02:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:02:55.174 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:02:55 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:02:56.133 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:02:56 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:02:56.136 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:02:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:03:00.011 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:03:00.015 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 17:03:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T17:03:00.011+0800');
2020-08-07 17:03:10.008 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:03:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:03:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:03:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:03:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:03:10.032 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:03:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:03:10.035 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 17:03:10.037 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 17:03:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T17:03:10.008+0800');
2020-08-07 17:03:13.763 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:03:18.823 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:03:18 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:03:18.890 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:03:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:03:18.892 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:03:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:03:20.199 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:03:20 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:03:20.200 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:03:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:04:00.011 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:04:00.014 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 17:04:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:04:00.011+0800');
2020-08-07 17:04:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:04:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:04:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:04:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:04:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:04:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:04:10.052 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：33 毫秒
2020-08-07 17:04:10.055 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 17:04:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 33, '2020-08-07T17:04:10.018+0800');
2020-08-07 17:04:12.898 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:04:12 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:04:12.978 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:04:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:04:12.980 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:04:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:04:13.767 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:04:13.892 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:04:13 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:04:13.893 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:04:13 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:05:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:05:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 17:05:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:05:00.020+0800');
2020-08-07 17:05:10.020 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:05:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:05:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:05:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:05:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:05:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:05:10.049 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:05:10.052 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 17:05:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T17:05:10.020+0800');
2020-08-07 17:05:13.769 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:06:00.018 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:06:00.021 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 17:06:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:06:00.018+0800');
2020-08-07 17:06:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:06:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:06:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:06:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:06:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:06:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:06:10.047 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 17:06:10.049 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 17:06:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 31, '2020-08-07T17:06:10.016+0800');
2020-08-07 17:06:13.770 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:06:29.432 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:06:29 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:06:29.506 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:06:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:06:29.508 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:06:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:06:30.351 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:06:30 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:06:30.409 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:06:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:06:30.411 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:06:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:06:31.111 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:06:31 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM t_role;
2020-08-07 17:06:31.112 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:06:31 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:06:41.071 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 17:06:41.074 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1);
2020-08-07 17:06:41.078 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 17:06:41.081 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment;
2020-08-07 17:06:41.085 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT id, eq_name, eq_code, eq_type, eq_ledger, eq_pm_two, eq_pm_ten, eq_co, eq_so2, sq_no2, sq_o3, eq_address, eq_add_time, eq_supplier, eq_overhaul, state, creator, create_date, modifier, mod_date FROM a_myequipment;
2020-08-07 17:06:41.088 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 1);
2020-08-07 17:06:41.092 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 2);
2020-08-07 17:06:41.095 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:06:41 | 耗时 0 ms | SQL 语句：
SELECT id, user_id, myequipment_id, state, creator, create_date, modifier, mod_date FROM a_user_myequipment WHERE (user_id = 1 AND myequipment_id = 3);
2020-08-07 17:06:48.162 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:06:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 17:07:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:07:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 17:07:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:07:00.021+0800');
2020-08-07 17:07:10.016 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:07:10.019 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:07:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:07:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:07:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:07:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:07:10.047 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 17:07:10.049 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 17:07:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T17:07:10.016+0800');
2020-08-07 17:07:13.773 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:08:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:08:00.025 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 17:08:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:08:00.021+0800');
2020-08-07 17:08:10.020 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:08:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:08:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:08:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:08:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:08:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:08:10.045 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:08:10.048 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 17:08:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T17:08:10.020+0800');
2020-08-07 17:08:13.775 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:08:34.140 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:08:34 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:08:34.249 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:08:34 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:08:34.252 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:08:34 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:08:35.642 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:08:35 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 17:08:35.678 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:08:35 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:09:00.021 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:09:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 17:09:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T17:09:00.021+0800');
2020-08-07 17:09:10.014 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:09:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:09:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:09:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:09:10.036 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:09:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:09:10.038 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-07 17:09:10.041 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 17:09:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 24, '2020-08-07T17:09:10.014+0800');
2020-08-07 17:09:13.778 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:10:00.045 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:10:00.049 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 17:10:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:10:00.045+0800');
2020-08-07 17:10:10.007 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:10:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:10:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:10:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:10:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:10:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:10:10.034 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 17:10:10.036 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 17:10:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T17:10:10.007+0800');
2020-08-07 17:10:13.781 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:11:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:11:00.023 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 17:11:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:11:00.020+0800');
2020-08-07 17:11:10.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:11:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:11:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:11:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:11:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:11:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:11:10.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:11:10.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 17:11:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T17:11:10.010+0800');
2020-08-07 17:11:13.784 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:12:00.086 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:12:00.089 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 17:12:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T17:12:00.085+0800');
2020-08-07 17:12:10.009 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:12:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:12:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:12:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:12:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:12:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:12:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:12:10.033 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-07 17:12:10.036 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 17:12:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-07T17:12:10.009+0800');
2020-08-07 17:12:13.787 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:12:39.284 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:12:39 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:12:39.362 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:12:39 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:12:39.365 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:12:39 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:12:40.484 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:12:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:12:40.510 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:12:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:12:40.527 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:12:40 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:12:40.570 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:12:40 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:12:52.665 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:12:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:12:52.691 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:12:52 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:12:52.700 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:12:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:12:52.730 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:12:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:13:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:13:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 17:13:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:13:00.020+0800');
2020-08-07 17:13:10.006 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:13:10.010 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:13:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:13:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:13:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:13:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:13:10.031 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:13:10.033 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 17:13:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-07T17:13:10.006+0800');
2020-08-07 17:13:13.790 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:14:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:14:00.026 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 17:14:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:14:00.020+0800');
2020-08-07 17:14:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:14:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:14:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:14:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:14:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:14:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:14:10.043 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:14:10.046 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 17:14:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T17:14:10.018+0800');
2020-08-07 17:14:13.793 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:14:49.516 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:14:49 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:14:49.598 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:14:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:14:49.600 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:14:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:14:52.516 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:14:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:14:52.546 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:14:52 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:15:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:15:00.025 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 17:15:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:15:00.020+0800');
2020-08-07 17:15:02.295 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:15:02 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:15:02.376 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:15:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:15:02.379 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:15:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:15:03.410 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:15:03 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:15:03.471 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:15:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:15:03.473 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:15:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:15:04.765 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:15:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:15:04.793 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:15:04 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:15:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:15:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:15:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:15:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:15:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:15:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:15:10.038 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:15:10.043 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 17:15:10 | 耗时 2 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T17:15:10.009+0800');
2020-08-07 17:15:13.802 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:15:37.742 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:15:37 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:15:37.828 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:15:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:15:37.831 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:15:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:15:39.370 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:15:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:15:39.396 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:15:39 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:16:00.022 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:16:00.027 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 17:16:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:16:00.022+0800');
2020-08-07 17:16:10.008 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:16:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:16:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:16:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:16:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:16:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:16:10.033 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:16:10.035 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 17:16:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T17:16:10.008+0800');
2020-08-07 17:16:13.805 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:17:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:17:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 17:17:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:17:00.020+0800');
2020-08-07 17:17:10.008 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:17:10.012 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:17:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:17:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:17:10.031 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:17:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:17:10.033 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:17:10.035 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 17:17:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-07T17:17:10.008+0800');
2020-08-07 17:17:13.805 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:18:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:18:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 17:18:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:18:00.019+0800');
2020-08-07 17:18:10.011 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:18:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:18:10.018 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:18:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:18:10.037 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:18:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:18:10.039 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：28 毫秒
2020-08-07 17:18:10.042 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 17:18:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 28, '2020-08-07T17:18:10.011+0800');
2020-08-07 17:18:13.808 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:18:45.928 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:18:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:18:45.931 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:18:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:18:45.935 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:18:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:18:45.937 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:18:45 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:18:47.818 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:18:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-07 17:18:47.839 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:18:47 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-07 17:18:55.763 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:18:55 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 2;
2020-08-07 17:19:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:19:00.023 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 17:19:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:19:00.020+0800');
2020-08-07 17:19:10.009 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:19:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:19:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:19:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:19:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:19:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:19:10.047 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：38 毫秒
2020-08-07 17:19:10.050 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 17:19:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 38, '2020-08-07T17:19:10.009+0800');
2020-08-07 17:19:13.810 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:20:00.044 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:20:00.049 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 17:20:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:20:00.044+0800');
2020-08-07 17:20:08.196 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:20:08 | 耗时 2 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:20:08.290 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:20:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:20:08.294 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:20:08 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:20:08.300 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:20:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:20:08.303 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:20:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:20:09.235 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:20:09 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 7;
2020-08-07 17:20:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:20:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:20:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:20:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:20:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:20:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:20:10.045 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 17:20:10.048 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 17:20:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 27, '2020-08-07T17:20:10.018+0800');
2020-08-07 17:20:12.153 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:20:12 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 4;
2020-08-07 17:20:13.814 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:20:14.701 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:20:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 2;
2020-08-07 17:20:14.714 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:20:14 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 2;
2020-08-07 17:20:19.430 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:20:19 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 2;
2020-08-07 17:20:21.934 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:20:21 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 3;
2020-08-07 17:20:23.923 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:20:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 4;
2020-08-07 17:20:23.938 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:20:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 4;
2020-08-07 17:21:00.020 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:21:00.025 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 17:21:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:21:00.020+0800');
2020-08-07 17:21:10.016 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:21:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:21:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:21:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:21:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:21:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:21:10.045 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:21:10.047 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 17:21:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T17:21:10.016+0800');
2020-08-07 17:21:13.814 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:21:22.189 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:21:22 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:21:22.271 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:21:22 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:21:22.273 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:21:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:21:22.279 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:21:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:21:22.282 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:21:22 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:21:23.188 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:21:23 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 7;
2020-08-07 17:21:27.131 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:21:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 4;
2020-08-07 17:21:27.154 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:21:27 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 4;
2020-08-07 17:21:56.044 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:21:56 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:21:56.126 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:21:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:21:56.129 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:21:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:21:56.149 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:21:56 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:21:56.152 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:21:56 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:21:57.611 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:21:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-07 17:22:00.019 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:22:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 17:22:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:22:00.019+0800');
2020-08-07 17:22:00.421 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:22:00 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 2;
2020-08-07 17:22:00.435 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:22:00 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 2;
2020-08-07 17:22:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:22:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:22:10 | 耗时 2 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:22:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:22:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:22:10.076 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:22:10 | 耗时 1 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:22:10.079 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：63 毫秒
2020-08-07 17:22:10.083 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 17:22:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 63, '2020-08-07T17:22:10.016+0800');
2020-08-07 17:22:13.816 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:22:15.962 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:22:15 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:22:16.032 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:22:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:22:16.035 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:22:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:22:16.040 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:22:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:22:16.043 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:22:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:22:16.869 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:22:16 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 3;
2020-08-07 17:22:20.139 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:22:20 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 4;
2020-08-07 17:22:22.323 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:22:22 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 7;
2020-08-07 17:22:24.577 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:22:24 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-07 17:22:24.593 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:22:24 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept WHERE id = 1;
2020-08-07 17:23:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:23:00.025 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 17:23:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:23:00.021+0800');
2020-08-07 17:23:08.166 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:23:08 | 耗时 1 ms | SQL 语句：
SELECT m.* FROM t_menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM t_role_menu rm LEFT JOIN t_role r ON (rm.role_id = r.role_id) LEFT JOIN t_user_role ur ON (ur.role_id = r.role_id) LEFT JOIN t_user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-08-07 17:23:08.246 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:23:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:23:08.249 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:23:08 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:23:08.254 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:23:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM a_mydept;
2020-08-07 17:23:08.256 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:23:08 | 耗时 1 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept ORDER BY id ASC LIMIT 0,10;
2020-08-07 17:23:09.760 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:23:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_user;
2020-08-07 17:23:09.763 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:23:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user ORDER BY user_id ASC LIMIT 0,10;
2020-08-07 17:23:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:23:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:23:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:23:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:23:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:23:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:23:10.048 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:23:10.051 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 17:23:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T17:23:10.019+0800');
2020-08-07 17:23:11.892 febs [http-nio-8099-exec-10] INFO  p6spy - 2020-08-07 17:23:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:23:11.914 febs [http-nio-8099-exec-5] INFO  p6spy - 2020-08-07 17:23:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:23:11.932 febs [http-nio-8099-exec-1] INFO  p6spy - 2020-08-07 17:23:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:23:11.962 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:23:11 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:23:13.818 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:23:26.284 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:23:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:23:26.314 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:23:26 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:23:29.681 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:23:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 17:23:29.700 febs [http-nio-8099-exec-3] INFO  p6spy - 2020-08-07 17:23:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 17:23:29.716 febs [http-nio-8099-exec-4] INFO  p6spy - 2020-08-07 17:23:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:23:29.747 febs [http-nio-8099-exec-8] INFO  p6spy - 2020-08-07 17:23:29 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:24:00.020 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:24:00.023 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 17:24:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:24:00.020+0800');
2020-08-07 17:24:10.019 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:24:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:24:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:24:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:24:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:24:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:24:10.045 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:24:10.048 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 17:24:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T17:24:10.019+0800');
2020-08-07 17:24:13.821 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:25:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:25:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 17:25:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:25:00.020+0800');
2020-08-07 17:25:10.016 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:25:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:25:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:25:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:25:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:25:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:25:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:25:10.045 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 17:25:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T17:25:10.016+0800');
2020-08-07 17:25:13.823 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:25:57.649 febs [http-nio-8099-exec-9] INFO  p6spy - 2020-08-07 17:25:57 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 1;
2020-08-07 17:25:57.675 febs [http-nio-8099-exec-6] INFO  p6spy - 2020-08-07 17:25:57 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:26:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:26:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 17:26:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:26:00.020+0800');
2020-08-07 17:26:01.065 febs [http-nio-8099-exec-2] INFO  p6spy - 2020-08-07 17:26:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID, USERNAME, PASSWORD, DEPT_ID, dept_name, EMAIL, MOBILE, idcard_num, wechart, remaing, account_name, STATUS, open, CREATE_TIME, MODIFY_TIME, LAST_LOGIN_TIME, SSEX, IS_TAB, THEME, AVATAR, DESCRIPTION, state, creator, create_date, modifier, mod_date FROM t_user WHERE USER_ID = 2;
2020-08-07 17:26:01.089 febs [http-nio-8099-exec-7] INFO  p6spy - 2020-08-07 17:26:01 | 耗时 0 ms | SQL 语句：
SELECT id, name, head, address, category, state, creator, create_date, modifier, mod_date FROM a_mydept;
2020-08-07 17:26:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:26:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:26:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:26:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:26:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:26:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:26:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:26:10.051 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 17:26:10.054 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 17:26:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T17:26:10.019+0800');
2020-08-07 17:26:13.826 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:27:00.021 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:27:00.024 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 17:27:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:27:00.021+0800');
2020-08-07 17:27:10.020 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:27:10.035 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:27:10.038 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:27:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:27:10.055 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:27:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:27:10.057 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：37 毫秒
2020-08-07 17:27:10.060 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 17:27:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 37, '2020-08-07T17:27:10.020+0800');
2020-08-07 17:27:13.830 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:28:00.021 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:28:00.024 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 17:28:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:28:00.021+0800');
2020-08-07 17:28:10.019 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:28:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:28:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:28:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:28:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:28:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:28:10.043 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：24 毫秒
2020-08-07 17:28:10.045 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 17:28:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 24, '2020-08-07T17:28:10.019+0800');
2020-08-07 17:28:13.832 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:29:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:29:00.023 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 17:29:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:29:00.020+0800');
2020-08-07 17:29:10.018 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:29:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:29:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:29:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:29:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:29:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:29:10.041 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-07 17:29:10.044 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 17:29:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-07T17:29:10.018+0800');
2020-08-07 17:29:13.835 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:30:00.017 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:30:00.020 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 17:30:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:30:00.017+0800');
2020-08-07 17:30:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:30:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:30:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:30:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:30:10.041 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:30:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:30:10.043 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:30:10.046 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 17:30:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T17:30:10.017+0800');
2020-08-07 17:30:13.838 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:31:00.010 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:31:00.015 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 17:31:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T17:31:00.010+0800');
2020-08-07 17:31:10.020 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:31:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:31:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:31:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:31:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:31:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:31:10.047 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 17:31:10.050 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 17:31:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T17:31:10.020+0800');
2020-08-07 17:31:13.839 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:32:00.018 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:32:00.021 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 17:32:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:32:00.018+0800');
2020-08-07 17:32:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:32:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:32:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:32:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:32:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:32:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:32:10.041 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-07 17:32:10.043 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 17:32:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-07T17:32:10.019+0800');
2020-08-07 17:32:13.844 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:33:00.021 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:33:00.024 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 17:33:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:33:00.021+0800');
2020-08-07 17:33:10.019 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:33:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:33:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:33:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:33:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:33:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:33:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:33:10.042 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：23 毫秒
2020-08-07 17:33:10.044 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 17:33:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 23, '2020-08-07T17:33:10.019+0800');
2020-08-07 17:33:13.848 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:34:00.010 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:34:00.014 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 17:34:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:34:00.010+0800');
2020-08-07 17:34:10.018 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:34:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:34:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:34:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:34:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:34:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:34:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:34:10.047 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:34:10.050 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 17:34:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T17:34:10.018+0800');
2020-08-07 17:34:13.848 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:35:00.011 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:35:00.014 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 17:35:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:35:00.011+0800');
2020-08-07 17:35:10.009 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:35:10.013 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:35:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:35:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:35:10.033 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:35:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:35:10.035 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:35:10.038 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 17:35:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T17:35:10.009+0800');
2020-08-07 17:35:13.852 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:36:00.046 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:36:00.049 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 17:36:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:36:00.046+0800');
2020-08-07 17:36:10.019 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:36:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:36:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:36:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:36:10.039 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:36:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:36:10.041 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-07 17:36:10.044 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 17:36:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-07T17:36:10.019+0800');
2020-08-07 17:36:13.852 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:37:00.020 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:37:00.023 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 17:37:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:37:00.020+0800');
2020-08-07 17:37:10.017 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:37:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:37:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:37:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:37:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:37:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:37:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:37:10.042 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:37:10.045 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 17:37:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-07T17:37:10.017+0800');
2020-08-07 17:37:13.856 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:38:00.046 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:38:00.049 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 17:38:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:38:00.046+0800');
2020-08-07 17:38:10.018 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:38:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:38:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:38:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:38:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:38:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:38:10.047 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:38:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 17:38:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T17:38:10.018+0800');
2020-08-07 17:38:13.860 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:39:00.020 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:39:00.024 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 17:39:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 1, '2020-08-07T17:39:00.020+0800');
2020-08-07 17:39:10.006 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:39:10.011 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:39:10.015 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:39:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:39:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:39:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:39:10.036 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 17:39:10.039 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 17:39:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 30, '2020-08-07T17:39:10.006+0800');
2020-08-07 17:39:13.864 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:40:00.044 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:40:00.048 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 17:40:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:40:00.044+0800');
2020-08-07 17:40:10.017 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:40:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:40:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:40:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:40:10.040 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:40:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:40:10.042 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:40:10.044 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 17:40:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 25, '2020-08-07T17:40:10.017+0800');
2020-08-07 17:40:13.866 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:41:00.046 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:41:00.049 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 17:41:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:41:00.046+0800');
2020-08-07 17:41:10.019 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:41:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:41:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:41:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:41:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:41:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:41:10.046 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 17:41:10.049 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 17:41:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T17:41:10.019+0800');
2020-08-07 17:41:13.868 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:42:00.022 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:42:00.025 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 17:42:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:42:00.022+0800');
2020-08-07 17:42:10.016 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:42:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:42:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:42:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:42:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:42:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:42:10.045 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:42:10.047 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 17:42:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T17:42:10.016+0800');
2020-08-07 17:42:13.870 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:43:00.045 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:43:00.048 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 17:43:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:43:00.045+0800');
2020-08-07 17:43:10.018 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:43:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:43:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:43:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:43:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:43:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:43:10.047 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:43:10.049 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 17:43:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 29, '2020-08-07T17:43:10.018+0800');
2020-08-07 17:43:13.873 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:44:00.044 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:44:00.047 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 17:44:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:44:00.044+0800');
2020-08-07 17:44:10.042 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:44:10.045 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:44:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:44:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:44:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:44:10.065 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:44:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:44:10.068 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:44:10.071 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 17:44:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T17:44:10.042+0800');
2020-08-07 17:44:13.876 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:45:00.019 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:45:00.022 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 17:45:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:45:00.019+0800');
2020-08-07 17:45:10.044 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:45:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:45:10.051 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:45:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:45:10.068 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:45:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:45:10.070 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:45:10.072 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 17:45:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T17:45:10.044+0800');
2020-08-07 17:45:13.880 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:46:00.044 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:46:00.047 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 17:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:46:00.044+0800');
2020-08-07 17:46:10.016 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:46:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:46:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:46:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:46:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:46:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:46:10.045 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：29 毫秒
2020-08-07 17:46:10.048 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 17:46:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 29, '2020-08-07T17:46:10.016+0800');
2020-08-07 17:46:13.883 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:47:00.018 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:47:00.021 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 17:47:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:47:00.018+0800');
2020-08-07 17:47:10.018 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:47:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:47:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:47:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:47:10.043 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:47:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:47:10.045 febs [aps_Scheduler_Worker-14] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：27 毫秒
2020-08-07 17:47:10.048 febs [aps_Scheduler_Worker-14] INFO  p6spy - 2020-08-07 17:47:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 27, '2020-08-07T17:47:10.018+0800');
2020-08-07 17:47:13.884 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:48:00.019 febs [aps_Scheduler_Worker-15] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:48:00.022 febs [aps_Scheduler_Worker-15] INFO  p6spy - 2020-08-07 17:48:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:48:00.019+0800');
2020-08-07 17:48:10.016 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:48:10.021 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:48:10.026 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:48:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:48:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:48:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:48:10.046 febs [aps_Scheduler_Worker-16] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 17:48:10.049 febs [aps_Scheduler_Worker-16] INFO  p6spy - 2020-08-07 17:48:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T17:48:10.016+0800');
2020-08-07 17:48:13.886 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:49:00.022 febs [aps_Scheduler_Worker-17] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:49:00.025 febs [aps_Scheduler_Worker-17] INFO  p6spy - 2020-08-07 17:49:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:49:00.022+0800');
2020-08-07 17:49:10.016 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:49:10.023 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:49:10 | 耗时 1 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:49:10.027 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:49:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:49:10.046 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:49:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:49:10.048 febs [aps_Scheduler_Worker-18] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 17:49:10.051 febs [aps_Scheduler_Worker-18] INFO  p6spy - 2020-08-07 17:49:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 32, '2020-08-07T17:49:10.016+0800');
2020-08-07 17:49:13.888 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:50:00.021 febs [aps_Scheduler_Worker-19] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:50:00.026 febs [aps_Scheduler_Worker-19] INFO  p6spy - 2020-08-07 17:50:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:50:00.021+0800');
2020-08-07 17:50:10.018 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:50:10.022 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:50:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:50:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:50:10.042 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:50:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:50:10.044 febs [aps_Scheduler_Worker-20] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:50:10.047 febs [aps_Scheduler_Worker-20] INFO  p6spy - 2020-08-07 17:50:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 26, '2020-08-07T17:50:10.018+0800');
2020-08-07 17:50:13.891 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:51:00.019 febs [aps_Scheduler_Worker-1] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:51:00.022 febs [aps_Scheduler_Worker-1] INFO  p6spy - 2020-08-07 17:51:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:51:00.019+0800');
2020-08-07 17:51:10.010 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:51:10.014 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:51:10.016 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:51:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:51:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:51:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:51:10.036 febs [aps_Scheduler_Worker-2] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：26 毫秒
2020-08-07 17:51:10.039 febs [aps_Scheduler_Worker-2] INFO  p6spy - 2020-08-07 17:51:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 26, '2020-08-07T17:51:10.010+0800');
2020-08-07 17:51:13.893 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:52:00.020 febs [aps_Scheduler_Worker-3] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:52:00.023 febs [aps_Scheduler_Worker-3] INFO  p6spy - 2020-08-07 17:52:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:52:00.020+0800');
2020-08-07 17:52:10.019 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:52:10.024 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:52:10.028 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:52:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:52:10.047 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:52:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:52:10.049 febs [aps_Scheduler_Worker-4] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：30 毫秒
2020-08-07 17:52:10.052 febs [aps_Scheduler_Worker-4] INFO  p6spy - 2020-08-07 17:52:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 30, '2020-08-07T17:52:10.019+0800');
2020-08-07 17:52:13.896 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:53:00.020 febs [aps_Scheduler_Worker-5] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:53:00.023 febs [aps_Scheduler_Worker-5] INFO  p6spy - 2020-08-07 17:53:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:53:00.020+0800');
2020-08-07 17:53:10.021 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:53:10.025 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:53:10.029 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:53:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:53:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:53:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:53:10.046 febs [aps_Scheduler_Worker-6] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：25 毫秒
2020-08-07 17:53:10.048 febs [aps_Scheduler_Worker-6] INFO  p6spy - 2020-08-07 17:53:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 25, '2020-08-07T17:53:10.021+0800');
2020-08-07 17:53:13.898 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:54:00.011 febs [aps_Scheduler_Worker-7] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:54:00.014 febs [aps_Scheduler_Worker-7] INFO  p6spy - 2020-08-07 17:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:54:00.011+0800');
2020-08-07 17:54:10.014 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:54:10.017 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:54:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:54:10.020 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:54:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:54:10.034 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:54:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:54:10.036 febs [aps_Scheduler_Worker-8] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：22 毫秒
2020-08-07 17:54:10.039 febs [aps_Scheduler_Worker-8] INFO  p6spy - 2020-08-07 17:54:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 22, '2020-08-07T17:54:10.014+0800');
2020-08-07 17:54:13.900 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:55:00.020 febs [aps_Scheduler_Worker-9] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:55:00.023 febs [aps_Scheduler_Worker-9] INFO  p6spy - 2020-08-07 17:55:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:55:00.020+0800');
2020-08-07 17:55:10.042 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:55:10.048 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:55:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:55:10.053 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:55:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:55:10.071 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:55:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '1', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:55:10.073 febs [aps_Scheduler_Worker-10] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：31 毫秒
2020-08-07 17:55:10.076 febs [aps_Scheduler_Worker-10] INFO  p6spy - 2020-08-07 17:55:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '2', '0', 31, '2020-08-07T17:55:10.042+0800');
2020-08-07 17:55:13.901 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:56:00.020 febs [aps_Scheduler_Worker-11] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 17:56:00.023 febs [aps_Scheduler_Worker-11] INFO  p6spy - 2020-08-07 17:56:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T17:56:00.020+0800');
2020-08-07 17:56:10.041 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：2
2020-08-07 17:56:10.044 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:56:10 | 耗时 0 ms | SQL 语句：
SELECT id, sb_code, plc_address, function_code, qs_address, jcqnum, unit_type, gs, command, remark, state, creator, create_date, modifier, mod_date FROM a_send_command;
2020-08-07 17:56:10.049 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:56:10 | 耗时 0 ms | SQL 语句：
SELECT JOB_ID, bean_name, method_name, params, cron_expression, status, remark, create_time FROM t_job WHERE (bean_name = 'commonTask' AND method_name = 'send');
2020-08-07 17:56:10.070 febs [example-schedule-pool-1] INFO  p6spy - 2020-08-07 17:56:10 | 耗时 0 ms | SQL 语句：
UPDATE t_job SET bean_name = 'commonTask', method_name = 'send', params = '2', cron_expression = '10 */1 * * * ?', status = '0', remark = '发送报文数据', create_time = '2020-05-19T16:23:23.000+0800' WHERE JOB_ID = 2;
2020-08-07 17:56:10.073 febs [aps_Scheduler_Worker-12] INFO  com.cx.job.util.ScheduleJob - 任务执行完毕，任务ID：2 总共耗时：32 毫秒
2020-08-07 17:56:10.075 febs [aps_Scheduler_Worker-12] INFO  p6spy - 2020-08-07 17:56:10 | 耗时 0 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, times, create_time) VALUES (2, 'commonTask', 'send', '1', '0', 32, '2020-08-07T17:56:10.041+0800');
2020-08-07 17:56:13.905 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 17:56:42.668 febs [Catalina-utility-2] INFO  c.c.c.a.s.SessionDestroyedEventListener - 失效session:0D3CEDB2C8014D5311B9C253866EB98A
2020-08-07 18:17:01.536 febs [QuartzScheduler_aps_Scheduler-LAPTOP-R0RM3FEG1596788444452_MisfireHandler] INFO  o.s.s.quartz.LocalDataSourceJobStore - Handling 1 trigger(s) that missed their scheduled fire-time.
2020-08-07 18:17:01.560 febs [aps_Scheduler_Worker-13] INFO  com.cx.job.util.ScheduleJob - 任务准备执行，任务ID：1
2020-08-07 18:17:01.564 febs [aps_Scheduler_Worker-13] INFO  p6spy - 2020-08-07 18:17:01 | 耗时 1 ms | SQL 语句：
INSERT INTO t_job_log (job_id, bean_name, method_name, params, status, error, times, create_time) VALUES (1, 'testTask', 'test1', '1', '1', 'java.lang.NoSuchMethodException: com.cx.job.task.TestTask.test1(java.lang.String)', 0, '2020-08-07T18:17:01.560+0800');
2020-08-07 18:17:01.607 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596788444452 paused.
2020-08-07 18:17:01.622 febs [Thread-31] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'apsAsyncThreadPool'
2020-08-07 18:17:01.626 febs [Thread-31] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2020-08-07 18:17:01.626 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596788444452 shutting down.
2020-08-07 18:17:01.626 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596788444452 paused.
2020-08-07 18:17:01.628 febs [Thread-31] INFO  org.quartz.core.QuartzScheduler - Scheduler aps_Scheduler_$_LAPTOP-R0RM3FEG1596788444452 shutdown complete.
2020-08-07 18:17:01.634 febs [Thread-31] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2020-08-07 18:17:01.635 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown initiated...
2020-08-07 18:17:01.646 febs [Thread-31] INFO  com.zaxxer.hikari.HikariDataSource - base - Shutdown completed.
